set cut_paste_input [stack 0]
BackdropNode {
 inputs 0
 name BackdropNode4
 tile_color 0x3b4245ff
 label "Advanced Keying Template"
 note_font_size 200
 note_font_color 0xffffffff
 selected true
 xpos -7921
 ypos -11896
 bdwidth 8480
 bdheight 9896
 z_order -2
}
BackdropNode {
 inputs 0
 name BackdropNode100
 tile_color 0x667c7c00
 label "BG Element"
 note_font_size 60
 note_font_color 0xffffffff
 selected true
 xpos 1809
 ypos -10892
 bdwidth 507
 bdheight 401
}
BackdropNode {
 inputs 0
 name BackdropNode101
 tile_color 0x374935ff
 label "Green\nScreen Footage"
 note_font_size 112
 selected true
 xpos -5549
 ypos -11559
 bdwidth 1208
 bdheight 847
}
BackdropNode {
 inputs 0
 name BackdropNode102
 tile_color 0x5c5539ff
 label "Edge Matte"
 note_font_size 140
 note_font_color 0xffffffff
 selected true
 xpos -2673
 ypos -9740
 bdwidth 1411
 bdheight 2103
}
BackdropNode {
 inputs 0
 name BackdropNode103
 tile_color 0x61454f00
 label Cleanplate
 note_font_size 140
 note_font_color 0xffffffff
 selected true
 xpos -1090
 ypos -9737
 bdwidth 1026
 bdheight 1464
}
BackdropNode {
 inputs 0
 name BackdropNode105
 tile_color 0x6b506800
 label "inject alpha"
 note_font_size 60
 note_font_color 0xffffffff
 selected true
 xpos -5241
 ypos -6774
 bdwidth 514
 bdheight 240
}
BackdropNode {
 inputs 0
 name BackdropNode106
 tile_color 0x5a3f6200
 label "inject cleanplate"
 note_font_size 60
 note_font_color 0xffffffff
 selected true
 xpos -5243
 ypos -6478
 bdwidth 511
 bdheight 299
}
BackdropNode {
 inputs 0
 name BackdropNode107
 tile_color 0x5b7179ff
 label "exponentially blurring inwards\nfor blending the core/edge despills"
 note_font_size 26
 note_font_color 0xffffffff
 selected true
 xpos -3928
 ypos -7835
 bdwidth 420
 bdheight 275
}
BackdropNode {
 inputs 0
 name BackdropNode109
 tile_color 0x4e6689ff
 label "Color Corrections"
 note_font_size 50
 note_font_color 0xffffffff
 selected true
 xpos -5335
 ypos -5976
 bdwidth 433
 bdheight 480
}
BackdropNode {
 inputs 0
 name BackdropNode110
 tile_color 0x666d6500
 label LightWrap
 note_font_size 60
 note_font_color 0xffffffff
 selected true
 xpos -5286
 ypos -2775
 bdwidth 719
 bdheight 391
}
BackdropNode {
 inputs 0
 name BackdropNode111
 tile_color 0x47633eff
 label "Additive Keyer"
 note_font_size 60
 note_font_color 0xffffffff
 selected true
 xpos 1708
 ypos -2353
 bdwidth 665
 bdheight 399
}
BackdropNode {
 inputs 0
 name BackdropNode112
 tile_color 0x6a5353ff
 label "Keep Util Channels"
 note_font_size 60
 note_font_color 0xffffffff
 selected true
 xpos -5645
 ypos -7171
 bdwidth 634
 bdheight 344
}
BackdropNode {
 inputs 0
 name BackdropNode113
 tile_color 0x535a6bff
 label "Comine Despill"
 note_font_size 60
 note_font_color 0xffffffff
 selected true
 xpos -5627
 ypos -7905
 bdwidth 1009
 bdheight 557
}
BackdropNode {
 inputs 0
 name BackdropNode114
 tile_color 0x687675ff
 label premult
 note_font_size 60
 note_font_color 0xffffffff
 selected true
 xpos -5207
 ypos -3097
 bdwidth 160
 bdheight 160
}
BackdropNode {
 inputs 0
 name BackdropNode18
 tile_color 0x4c5e5bff
 label "Making BG Stamp\nbefore key"
 note_font_size 60
 note_font_color 0xffffffff
 selected true
 xpos 1741
 ypos -2751
 bdwidth 611
 bdheight 245
}
BackdropNode {
 inputs 0
 name BackdropNode49
 tile_color 0x808080ff
 label "Output Stamps"
 note_font_size 60
 note_font_color 0xffffffff
 selected true
 xpos -5204
 ypos -4674
 bdwidth 922
 bdheight 305
}
BackdropNode {
 inputs 0
 name BackdropNode63
 tile_color 0x503d4600
 label "test light"
 note_font_size 60
 note_font_color 0xffffffff
 selected true
 xpos 1682
 ypos -11953
 bdwidth 481
 bdheight 316
}
BackdropNode {
 inputs 0
 name BackdropNode72
 tile_color 0x4e3f6800
 label "GS Plate (transformed)\nfor QC comparison"
 note_font_size 30
 note_font_color 0xffffffff
 selected true
 xpos 1586
 ypos -1684
 bdwidth 350
 bdheight 243
}
BackdropNode {
 inputs 0
 name BackdropNode94
 tile_color 0x645c38ff
 label "BG despill edge blending"
 note_font_size 62
 note_font_color 0xffffffff
 selected true
 xpos -5444
 ypos -4193
 bdwidth 1334
 bdheight 876
}
BackdropNode {
 inputs 0
 name BackdropNode95
 tile_color 0x39525cff
 label "Core Despill"
 note_font_size 140
 note_font_color 0xffffffff
 selected true
 xpos -7000
 ypos -9663
 bdwidth 1205
 bdheight 1295
}
BackdropNode {
 inputs 0
 name BackdropNode96
 tile_color 0x4b6648ff
 label "creating GS channel\nfor review at bottom of key"
 note_font_size 42
 note_font_color 0xffffffff
 selected true
 xpos -5354
 ypos -10592
 bdwidth 554
 bdheight 462
}
BackdropNode {
 inputs 0
 name BackdropNode97
 tile_color 0x472e5500
 label Transforms
 note_font_size 60
 note_font_color 0xffffffff
 selected true
 xpos -5356
 ypos -5367
 bdwidth 478
 bdheight 481
}
BackdropNode {
 inputs 0
 name BackdropNode98
 tile_color 0x39525cff
 label "Core Matte"
 note_font_size 140
 note_font_color 0xffffffff
 selected true
 xpos -3844
 ypos -9724
 bdwidth 1097
 bdheight 1475
}
BackdropNode {
 inputs 0
 name BackdropNode99
 tile_color 0x5c5539ff
 label "Edge Despill"
 note_font_size 140
 note_font_color 0xffffffff
 selected true
 xpos -5641
 ypos -9688
 bdwidth 1485
 bdheight 1364
}
push $cut_paste_input
Roto {
 output alpha
 cliptype none
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44800000 x44070000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Ellipse1 512 bezier
     {{cc
       {f 8192}
       {px x447ec000
        {xc227e500 0}
        {x44750000 x44500000}
        {x4227e500 0}
        {0 xc2a379f0}
        {x44840000 x44750000}
        {0 x42a379f0}
        {x4227e500 0}
        {x44750000 x448d0000}
        {xc227e500 0}
        {0 x42a379f0}
        {x44620000 x44750000}
        {0 xc2a379f0}}}
      {cc
       {f 8192}
       {p
        {{{x447ec000 xc227e500}}
      {{x447ec000 0}}}
        {{{x447ec000 0}}
      {{x447ec000 0}}}
        {{{x447ec000 x4227e500}}
      {{x447ec000 0}}}
        {{{x447ec000 0}}
      {{x447ec000 xc2a379f0}}}
        {{{x447ec000 0}}
      {{x447ec000 0}}}
        {{{x447ec000 0}}
      {{x447ec000 x42a379f0}}}
        {{{x447ec000 x4227e500}}
      {{x447ec000 0}}}
        {{{x447ec000 0}}
      {{x447ec000 0}}}
        {{{x447ec000 xc227e500}}
      {{x447ec000 0}}}
        {{{x447ec000 0}}
      {{x447ec000 x42a379f0}}}
        {{{x447ec000 0}}
      {{x447ec000 0}}}
        {{{x447ec000 0}}
      {{x447ec000 xc2a379f0}}}}}}
     {tx x447ec000 x44750000 x44750000}
     {a osw x41200000 osf 0 str 1 spx x44800000 spy x44070000 sb 1 ltn x447ec000 ltm x447ec000 tt x40e00000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 tt 7 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1024 540}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1019
 lifetime_end 1019
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto14
 selected true
 xpos 1866
 ypos -11853
}
Blur {
 channels rgba
 size 3
 name Blur1
 label "\[value size]"
 selected true
 xpos 1866
 ypos -11815
}
Group {
 name ExponBlurSimple7
 onCreate "n = nuke.thisNode()\nn.knob('size').setRange(-100, 100)"
 knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == \"includeOriginal\":\n    if n.knob('includeOriginal').getValue() == 1:\n        merge = nuke.toNode(\"Merge1\")\n        original = nuke.toNode('Original')\n        AvgMult = nuke.toNode(\"AverageMult\")\n        steps = int(n.knob('steps').getValue())\n        merge.setInput(steps+1, original)\n        AvgMult\['whitepoint'].setValue(2 if steps<2 else steps+1)\n        \n    else:\n        merge.setInput(steps+1, None)\n        AvgMult\['whitepoint'].setValue(2 if steps<2 else steps)\n        \nelif k.name() == \"steps\":\n    \n    s = int(k.value())\n    if s<1:\n        k.setValue(1)\n    else:\n        start = nuke.toNode(\"Start\")\n        end   = nuke.toNode(\"End\")\n        b1    = nuke.toNode(\"Blur1\")\n        merge = nuke.toNode(\"Merge1\")\n        AvgMult = nuke.toNode(\"AverageMult\")\n        \n        b1x   = b1.xpos()\n        b1y   = b1.ypos()\n        b1n   = b1.name()\n        \n        steps = int(n.knob('steps').getValue())\n        size  = n.knob('size').getValue()\n        mult  = n.knob('mult').getValue()\n        \n        #b1.setInput(0, start)\n        for i in range(1,merge.inputs()):\n            merge.setInput(i,None)\n        merge.setInput(0, b1)\n        \[nuke.delete(i) for i in nuke.allNodes() if i.xpos()>start.xpos()]\n        for i in range(1,steps):\n            # Blur\n            b = nuke.nodes.Blur()\n            b.setXYpos(b1x+i*100,b1y)\n            b.setInput(0,start)\n            b\[\"channels\"].setValue(\"rgba\")\n            b\[\"crop\"].setValue(0)\n            b\[\"size\"].setValue(0, 1)\n            b\[\"size\"].setExpression(\"(Blur1.size)*(mult)**%s\"%(i))\n            b\[\"label\"].setValue(\"\[value size]\")\n            merge.setInput(i if i<2 else i+1, b)\n            AvgMult\['whitepoint'].setValue(i if i<2 else i+1)\n            \n        if n.knob('includeOriginal').getValue() == 1:\n            merge = nuke.toNode(\"Merge1\")\n            original = nuke.toNode('Original')\n            AvgMult = nuke.toNode(\"AverageMult\")\n            steps = int(n.knob('steps').getValue())\n            merge.setInput(steps+1, original)\n            AvgMult\['whitepoint'].setValue(2 if steps<2 else steps+1)\n            \nelif k.name() == \"output2\":\n    if n.knob(\"output2\").getValue() == 4:\n        n.knob('AvgMaxOriginal').setVisible(True)\n    else:\n        n.knob('AvgMaxOriginal').setVisible(False)"
 tile_color 0xcc804eff
 label "(\[value output2])"
 note_font "Verdana Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
 note_font_color 0xffffffff
 selected true
 xpos 1866
 ypos -11777
 addUserKnob {20 ExponBlurSimple}
 addUserKnob {41 channels T Shuffle1.in}
 addUserKnob {41 maskChannelMask_1 l area T Multiply1.maskChannelMask}
 addUserKnob {41 inject_1 l inject -STARTLINE T Multiply1.inject}
 addUserKnob {41 invert_mask_1 l invert -STARTLINE T Multiply1.invert_mask}
 addUserKnob {41 fringe_1 l fringe -STARTLINE T Multiply1.fringe}
 addUserKnob {26 ""}
 addUserKnob {4 output2 l Operation: M {Screen Plus Over Hypot Average Max Min "" "" "" "" ""}}
 addUserKnob {3 steps l "  Steps" -STARTLINE}
 steps 5
 addUserKnob {3 mergeNumber -STARTLINE +INVISIBLE}
 mergeNumber {{"output2 == 0 ? 25 : output2 == 1 ? 24 : output2 == 2 ? 22 : output2 == 3 ? 13 : output2 == 4 ? 24 : output2 == 5 ? 17 : 18"}}
 addUserKnob {26 text l " " -STARTLINE T " "}
 addUserKnob {6 includeOriginal l "Include Original?" -STARTLINE}
 includeOriginal true
 addUserKnob {6 AvgMaxOriginal l "Use Max of Average and Original" +HIDDEN +STARTLINE}
 addUserKnob {14 size l Size R -100 100}
 size 3
 addUserKnob {7 mult l Multiplier R 1 8}
 mult 4
 addUserKnob {26 text_1 l " " T " "}
 addUserKnob {14 postBlur l "Post Blur" R 0 100}
 addUserKnob {26 ""}
 addUserKnob {41 maskChannelMask l mask T MergeKeymix.maskChannelMask}
 addUserKnob {41 inject -STARTLINE T MergeKeymix.inject}
 addUserKnob {41 invert_mask l invert -STARTLINE T MergeKeymix.invert_mask}
 addUserKnob {41 fringe -STARTLINE T MergeKeymix.fringe}
 addUserKnob {4 bbox l BBox: M {union intersectionMask A B "input format" "" "" "" "" "" "" "" ""}}
 addUserKnob {6 blackOutside l "Black Outside |" -STARTLINE}
 addUserKnob {7 adjustBBox l "Adjust BBox" -STARTLINE R 0 100}
 addUserKnob {41 mix T MergeKeymix.mix}
 addUserKnob {20 info l Info}
 addUserKnob {26 creator l Creator: T "Tony Lyons"}
 addUserKnob {26 desc l Description: t "Add description and tooltip for gizmo" T ExponBlurSimple}
 addUserKnob {26 ver l Version: T v02}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x535e5a00
  label "BBox Management"
  note_font_size 30
  note_font_color 0xffffffff
  xpos -529
  ypos 381
  bdwidth 341
  bdheight 525
 }
 Input {
  inputs 0
  name Inputimg
  xpos 0
  ypos -833
 }
 Dot {
  name Dot16
  note_font_size 41
  xpos 34
  ypos -666
 }
set N9f56530 [stack 0]
 Dot {
  name Dot2
  note_font_size 41
  xpos -367
  ypos -666
 }
 Dot {
  name Dot18
  label B
  note_font_size 41
  xpos -367
  ypos 323
 }
 Dot {
  name Dot11
  note_font_size 41
  xpos -367
  ypos 512
 }
set N9f64700 [stack 0]
 Dot {
  name Dot3
  note_font_size 41
  xpos -367
  ypos 564
 }
set N9f692d0 [stack 0]
 Dot {
  name Dot8
  note_font_size 41
  xpos -463
  ypos 564
 }
 Dot {
  name Dot15
  note_font_size 41
  xpos -463
  ypos 720
 }
push $N9f56530
 Dot {
  name Dot1
  note_font_size 41
  xpos 461
  ypos -666
 }
 Shuffle {
  name Shuffle1
  label "\[value in]"
  xpos 427
  ypos -620
 }
 Remove {
  operation keep
  channels rgba
  name Remove1
  xpos 427
  ypos -582
 }
 Dot {
  name Dot21
  note_font_size 41
  xpos 461
  ypos -461
 }
set N9f958a0 [stack 0]
 Invert {
  channels rgba
  name Invert1
  xpos 695
  ypos -465
  disable {{"parent.size < 0 ? 0 : 1"}}
 }
set N9f9ada0 [stack 0]
 Dot {
  name Dot4
  note_font_size 41
  xpos 609
  ypos -407
 }
 NoOp {
  name Original
  xpos 575
  ypos -191
 }
set N9fab4c0 [stack 0]
push $N9fab4c0
 Input {
  inputs 0
  name Inputarea
  xpos 289
  ypos -502
  number 2
 }
 AddChannels {
  channels alpha
  color 1
  name AddChannels1
  xpos 289
  ypos -444
 }
 Invert {
  channels rgba
  name Invert3
  xpos 289
  ypos -367
 }
push $N9f9ada0
 Multiply {
  inputs 1+1
  channels rgba
  value 0
  name Multiply1
  label "\[value value]"
  xpos 695
  ypos -373
 }
 NoOp {
  name Start
  xpos 695
  ypos -314
 }
set N9fd64c0 [stack 0]
 Blur {
  channels rgba
  size {{(Blur1.size)*(mult)**4} {(Blur1.size)*(mult)**4}}
  crop false
  name Blur5
  label "\[value size]"
  xpos 1095
  ypos -234
 }
push $N9fd64c0
 Blur {
  channels rgba
  size {{(Blur1.size)*(mult)**3} {(Blur1.size)*(mult)**3}}
  crop false
  name Blur4
  label "\[value size]"
  xpos 995
  ypos -234
 }
push $N9fd64c0
 Blur {
  channels rgba
  size {{(Blur1.size)*(mult)**2} {(Blur1.size)*(mult)**2}}
  crop false
  name Blur3
  label "\[value size]"
  xpos 895
  ypos -234
 }
push 0
push $N9fd64c0
 Blur {
  channels rgba
  size {{(Blur1.size)*(mult)**1} {(Blur1.size)*(mult)**1}}
  crop false
  name Blur2
  label "\[value size]"
  xpos 795
  ypos -234
 }
push $N9fd64c0
 Blur {
  channels rgba
  size {{parent.size.w} {parent.size.h}}
  name Blur1
  label "\[value size]"
  xpos 695
  ypos -234
 }
 Merge2 {
  inputs 6+1
  operation {{parent.mergeNumber}}
  name Merge1
  label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
  xpos 695
  ypos -120
 }
 NoOp {
  name End
  xpos 695
  ypos -94
 }
 Grade {
  channels rgba
  whitepoint 6
  black_clamp false
  name AverageMult
  xpos 695
  ypos -56
  disable {{"output2 == 4 ? 0 : 1"}}
 }
 Merge2 {
  inputs 2
  operation max
  name Merge2
  label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
  xpos 695
  ypos -9
  disable {{"output2 == 4 && includeOriginal == 1 && AvgMaxOriginal == 1 ? 0 : 1"}}
 }
 Blur {
  channels rgba
  size {{postBlur} {postBlur}}
  name BlurOriginal
  label "\[value size]"
  selected true
  xpos 695
  ypos 49
 }
 Invert {
  channels rgba
  name Invert2
  xpos 695
  ypos 117
  disable {{"parent.size < 0 ? 0 : 1"}}
 }
push $N9f958a0
 Switch {
  inputs 2
  which {{"parent.size == 0 ? 0 : 1"}}
  name Switch1
  label "\[value which]"
  xpos 427
  ypos 111
 }
push $N9f56530
 ShuffleCopy {
  inputs 2
  in2 none
  black red
  white green
  red2 blue
  green2 alpha
  out none
  out2 {{{parent.Shuffle1.in}}}
  name ShuffleCopy1
  xpos 0
  ypos 117
 }
 Dot {
  name Dot17
  label A
  note_font_size 41
  xpos 34
  ypos 344
 }
 Dot {
  name Dot7
  note_font_size 41
  xpos 34
  ypos 474
 }
set Na08eaa0 [stack 0]
 Dot {
  name Dot12
  note_font_size 41
  xpos -260
  ypos 474
 }
 Dot {
  name Dot13
  note_font_size 41
  xpos -260
  ypos 688
 }
push $N9f64700
 Input {
  inputs 0
  name Inputmask
  xpos 346
  ypos 214
  number 1
 }
 Dot {
  name Dot19
  label Mask
  note_font_size 41
  xpos 380
  ypos 327
 }
set Na0a16f0 [stack 0]
 Dot {
  name Dot20
  note_font_size 41
  xpos 270
  ypos 327
 }
push $Na08eaa0
 Merge2 {
  inputs 2
  bbox intersection
  Achannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
  Bchannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
  output {rgba.red -rgba.green -rgba.blue rgba.alpha}
  name MergeIntersection
  xpos 236
  ypos 464
  disable {{"!\[exists parent.input1]"}}
 }
 Merge2 {
  inputs 2
  Achannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
  Bchannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
  output {rgba.red -rgba.green -rgba.blue rgba.alpha}
  name MergeUnion
  xpos 236
  ypos 502
  disable {{"!\[exists parent.input1]"}}
 }
 Dot {
  name Dot6
  label "intersection\nof (Mask and A) + B"
  note_font_size 14
  note_font_color 0xffffffff
  xpos 270
  ypos 662
 }
push $Na0a16f0
 Dot {
  name Dot10
  note_font_size 41
  xpos 380
  ypos 564
 }
push $Na08eaa0
push $N9f692d0
 Merge2 {
  inputs 2+1
  operation copy
  Achannels none
  Bchannels none
  output none
  also_merge all
  mix 0.574
  name MergeKeymix
  xpos 0
  ypos 554
 }
 Dot {
  name Dot14
  note_font_size 41
  xpos 34
  ypos 636
 }
set Na0e55a0 [stack 0]
push $N9f692d0
 CopyBBox {
  inputs 2
  name CopyBBoxUnion
  xpos -401
  ypos 632
  disable {{parent.bbox==0?0:1}}
 }
 CopyBBox {
  inputs 2
  name CopyBBoxIntersection
  xpos -401
  ypos 658
  disable {{"parent.bbox==1 ? 0 : 1"}}
 }
 CopyBBox {
  inputs 2
  name CopyBBoxA
  xpos -401
  ypos 684
  disable {{"parent.bbox==2 ? 0 : 1"}}
 }
 CopyBBox {
  inputs 2
  name CopyBBoxB
  xpos -401
  ypos 716
  disable {{"parent.bbox==3 ? 0 : 1"}}
 }
 Crop {
  box {0 0 {parent.width} {parent.height}}
  crop false
  name CopyBBoxFormat
  xpos -401
  ypos 742
  disable {{"parent.bbox==4 ? 0 : 1"}}
  addUserKnob {20 User}
  addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_1 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_2 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_3 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_4 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_5 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_6 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_7 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_8 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_9 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_10 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_11 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
 }
 AdjBBox {
  numpixels {{parent.adjustBBox}}
  name AdjBBox
  xpos -401
  ypos 768
 }
 Dot {
  name Dot9
  note_font_size 41
  xpos -367
  ypos 822
 }
push $Na0e55a0
 CopyBBox {
  inputs 2
  name CopyBBox
  xpos 0
  ypos 818
 }
 BlackOutside {
  name BlackOutside1
  xpos 0
  ypos 844
  disable {{!parent.blackOutside}}
 }
 Output {
  name Output1
  xpos 0
  ypos 984
 }
end_group
Constant {
 inputs 0
 channels rgb
 color {2.960000038 2.999999762 3.039999962 12}
 name Constant1
 selected true
 xpos 1722
 ypos -11743
}
CheckerBoard2 {
 inputs 0
 name CheckerBoard1
 selected true
 xpos 2043
 ypos -12167
}
Reformat {
 format "2440 1802 0 0 2440 1802 2 custom 01"
 name Reformat1
 selected true
 xpos 2043
 ypos -12095
}
Grade {
 multiply 0.105
 name Grade1
 selected true
 xpos 2043
 ypos -12057
}
Keymix {
 inputs 3
 channels rgba
 name Keymix1
 selected true
 xpos 2043
 ypos -11720
 disable true
}
NoOp {
 name BG_ELEMENT2
 note_font_size 31
 selected true
 xpos 2043
 ypos -10738
}
Dot {
 name Dot5
 selected true
 xpos 2077
 ypos -10604
}
Dot {
 name Dot6
 label BG
 note_font_size 71
 selected true
 xpos 2077
 ypos -2564
}
set Na182040 [stack 0]
NoOp {
 name Anchor_3cad2b60ea
 help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated Sep 27 2019"
 onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.anchorOnCreate()\n    except:\n        pass"
 knobChanged stamps.anchorKnobChanged()
 autolabel "nuke.thisNode().knob(\"title\").value()"
 tile_color 0xffffff01
 note_font_size 20
 selected true
 xpos 1871
 ypos -2572
 addUserKnob {20 anchor_tab l "Anchor Stamp"}
 addUserKnob {26 identifier -STARTLINE +HIDDEN T anchor}
 addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
 title "BG Before Key"
 addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T "BG Before Key"}
 addUserKnob {26 prev_name l "" +STARTLINE +HIDDEN T Anchor_3cad2b60ea}
 addUserKnob {3 showing l "" +STARTLINE +HIDDEN}
 addUserKnob {1 tags l Tags t "Comma-separated tags you can define for each Anchor, that will help you find it when invoking the Stamp Selector by pressing the Stamps shortkey with nothing selected."}
 tags 2D,
 addUserKnob {26 line1 l "" +STARTLINE}
 addUserKnob {26 stamps_label l Stamps: T " "}
 addUserKnob {22 createStamp l new t "Create a new Stamp for this Anchor." -STARTLINE T stamps.stampCreateWired(nuke.thisNode())}
 addUserKnob {22 selectStamps l select t "Reconnect all of this Anchor's Stamps." -STARTLINE T stamps.wiredSelectSimilar(nuke.thisNode().name())}
 addUserKnob {22 reconnectStamps l reconnect -STARTLINE T stamps.anchorReconnectWired()}
 addUserKnob {22 zoomNext l "zoom next" t "Navigate to this Anchor's next Stamp on the Node Graph." -STARTLINE T stamps.wiredZoomNext(nuke.thisNode().name())}
 addUserKnob {26 line2 l "" +STARTLINE}
 addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
 addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated Sep 27 2019." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.0</big></b></a>"}
}
set Na186b90 [stack 0]
NoOp {
 name Stamp43
 help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated Sep 27 2019"
 onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
 knobChanged "import stamps; stamps.wiredKnobChanged()"
 autolabel "nuke.thisNode().knob(\"title\").value()"
 tile_color 0x1000001
 note_font "Bitstream Vera Sans"
 note_font_size 20
 selected true
 xpos -4863
 ypos -2677
 hide_input true
 addUserKnob {20 wired_tab l "Wired Stamp"}
 addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
 addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
 addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
 addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
 title "BG Before Key"
 addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T "BG Before Key"}
 addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
 addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." +HIDDEN T " "}
 addUserKnob {26 line1 l "" +STARTLINE}
 addUserKnob {26 anchor_label l Anchor: T " "}
 addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
 addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
 addUserKnob {26 stamps_label l Stamps: T " "}
 addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
 addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
 addUserKnob {26 space_1 l "" +STARTLINE T " "}
 addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
 addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
 addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
 addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
 addUserKnob {26 space_2 l "" +STARTLINE T " "}
 addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
 addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
 addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
 addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
 addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
 addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
 addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
 addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
 addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
 addUserKnob {1 anchor l Anchor}
 anchor Anchor_3cad2b60ea
 addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
 addUserKnob {20 advanced_reconnection_1 l "Advanced Reconnection" +INVISIBLE n -1}
 addUserKnob {26 line2 l "" +STARTLINE}
 addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
 addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated Sep 27 2019." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.0</big></b></a>"}
}
Dot {
 name Dot9
 label BG
 note_font_size 101
 selected true
 xpos -4829
 ypos -2536
}
NoOp {
 inputs 0
 name Stamp6
 help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated Sep 27 2019"
 onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
 knobChanged "import stamps; stamps.wiredKnobChanged()"
 autolabel "nuke.thisNode().knob(\"title\").value()"
 tile_color 0x1000001
 note_font "Bitstream Vera Sans Bold Bold"
 note_font_size 40
 note_font_color 0xff0000ff
 selected true
 xpos -5167
 ypos -11254
 hide_input true
 addUserKnob {20 wired_tab l "Wired Stamp"}
 addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
 addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
 addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
 addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
 title masterDegrain
 addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T masterDegrain}
 addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
 addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T <i>Plates</i>}
 addUserKnob {26 line1 l "" +STARTLINE}
 addUserKnob {26 anchor_label l Anchor: T " "}
 addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
 addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
 addUserKnob {26 stamps_label l Stamps: T " "}
 addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
 addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
 addUserKnob {26 space_1 l "" +STARTLINE T " "}
 addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
 addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
 addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
 addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
 addUserKnob {26 space_2 l "" +STARTLINE T " "}
 addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
 addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
 addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
 addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
 addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
 addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
 addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
 addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
 addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
 addUserKnob {1 anchor l Anchor}
 anchor Anchor_1a75d5a7d9
 addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
 addUserKnob {20 advanced_reconnection_1 l "Advanced Reconnection" +INVISIBLE n -1}
 addUserKnob {26 line2 l "" +STARTLINE}
 addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
 addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated Sep 27 2019." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.0</big></b></a>"}
}
NoOp {
 name GS_DenoisePrep2
 note_font_size 31
 selected true
 xpos -5167
 ypos -11181
}
AddChannels {
 channels rgba
 name AddChannels3
 selected true
 xpos -5167
 ypos -11135
}
Dot {
 name Dot26
 selected true
 xpos -5133
 ypos -10475
}
add_layer {GS_Plate GS_Plate.red GS_Plate.green GS_Plate.blue GS_Plate.alpha}
Shuffle {
 black red
 white green
 red2 blue
 green2 black
 out2 GS_Plate
 name Shuffle33
 label "\[value in] → \[value out2]"
 selected true
 xpos -5167
 ypos -10412
}
Dot {
 name Dot8
 note_font_size 41
 selected true
 xpos -5133
 ypos -10275
}
set Na1cbaa0 [stack 0]
Dot {
 name Dot34
 selected true
 xpos -5133
 ypos -9945
}
set Na1d0700 [stack 0]
Dot {
 name Dot38
 selected true
 xpos -3337
 ypos -9945
}
set Na1d54c0 [stack 0]
Dot {
 name Dot46
 selected true
 xpos -2073
 ypos -9945
}
set Na1d9f30 [stack 0]
Remove {
 operation keep
 channels rgb
 name Remove30
 selected true
 xpos -2107
 ypos -9824
}
Dot {
 name Dot17
 note_font_size 41
 selected true
 xpos -2073
 ypos -9546
}
set Na1e7300 [stack 0]
IBKColourV3 {
 name IBKColourV3_10
 selected true
 xpos -1865
 ypos -9550
 Size 1
 off {0.05099999905 0.0120000001 0}
 mult {1.2 1 1}
 erode 8
}
Group {
 name BinaryAlpha5
 tile_color 0x2a2a2aff
 label "(\[value an] --> \[value output1])"
 note_font Verdana
 note_font_color 0xfffff9ff
 selected true
 xpos -1865
 ypos -9491
 addUserKnob {20 BinaryAlpha}
 addUserKnob {4 an l Analyze: M {rgb rgba alpha "" "" ""}}
 addUserKnob {4 output1 l Output: M {rgba alpha "" "" "" ""}}
 output1 alpha
 addUserKnob {20 info l Info}
 addUserKnob {26 creator l Creator: T "<b><big>Tony Lyons"}
 addUserKnob {26 desc l Description: t "Analyzes channel input and creates a binary result 0 or 1 and outputs it into output channel" T BinaryAlpha}
 addUserKnob {26 ver l Version: T v03}
}
 Input {
  inputs 0
  name Input
  xpos -398
  ypos 275
 }
 Expression {
  temp_name0 rgb_an
  temp_expr0 "r !=0 || g!=0 || b!=0?1:0"
  temp_name1 rgba_an
  temp_expr1 "r!=0 || g!=0 || b!=0 || a!=0?1:0"
  temp_name2 alpha_an
  temp_expr2 a!=0?1:0
  expr3 "parent.an == 0 ? rgb_an : parent.an == 1 ? rgba_an : alpha_an"
  name Expression
  xpos -398
  ypos 341
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle
  label "\[value in]"
  xpos -398
  ypos 367
  disable {{parent.output1}}
 }
 Output {
  name Output1
  xpos -398
  ypos 456
 }
end_group
EdgeBlur {
 channels rgba
 size 10
 name EdgeBlur1
 selected true
 xpos -1865
 ypos -9453
}
Group {
 name ExponBlurSimple12
 onCreate "n = nuke.thisNode()\nn.knob('size').setRange(-100, 100)\nn.knob('adjustBBoxPixels').setRange(0, 400)\nn.knob('adjustBBoxPercent').setRange(1, 2)\nn.knob('safeBBoxPixels').setRange(0, 400)\nn.knob('safeBBoxPercent').setRange(1, 2)"
 knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == \"includeOriginal\":\n    if n.knob('includeOriginal').getValue() == 1:\n        merge = nuke.toNode(\"Merge1\")\n        original = nuke.toNode('Original')\n        AvgMult = nuke.toNode(\"AverageMult\")\n        steps = int(n.knob('steps').getValue())\n        merge.setInput(steps+1, original)\n        AvgMult\['whitepoint'].setValue(2 if steps<2 else steps+1)\n        \n    else:\n        merge.setInput(steps+1, None)\n        AvgMult\['whitepoint'].setValue(2 if steps<2 else steps)\n        \nelif k.name() == \"steps\":\n    \n    s = int(k.value())\n    if s<1:\n        k.setValue(1)\n    else:\n        start = nuke.toNode(\"Start\")\n        end   = nuke.toNode(\"End\")\n        b1    = nuke.toNode(\"Blur1\")\n        merge = nuke.toNode(\"Merge1\")\n        AvgMult = nuke.toNode(\"AverageMult\")\n        \n        b1x   = b1.xpos()\n        b1y   = b1.ypos()\n        b1n   = b1.name()\n        \n        steps = int(n.knob('steps').getValue())\n        size  = n.knob('size').getValue()\n        mult  = n.knob('mult').getValue()\n        \n        #b1.setInput(0, start)\n        for i in range(1,merge.inputs()):\n            merge.setInput(i,None)\n        merge.setInput(0, b1)\n        \[nuke.delete(i) for i in nuke.allNodes() if i.xpos()>start.xpos()]\n        for i in range(1,steps):\n            # Blur\n            b = nuke.nodes.Blur()\n            b.setXYpos(b1x+i*100,b1y)\n            b.setInput(0,start)\n            b\[\"channels\"].setValue(\"rgba\")\n            b\[\"crop\"].setValue(0)\n            b\[\"size\"].setValue(0, 1)\n            b\[\"size\"].setExpression(\"(Blur1.size)*(mult)**%s\"%(i))\n            b\[\"label\"].setValue(\"\[value size]\")\n            merge.setInput(i if i<2 else i+1, b)\n            AvgMult\['whitepoint'].setValue(i if i<2 else i+1)\n            \n        if n.knob('includeOriginal').getValue() == 1:\n            merge = nuke.toNode(\"Merge1\")\n            original = nuke.toNode('Original')\n            AvgMult = nuke.toNode(\"AverageMult\")\n            steps = int(n.knob('steps').getValue())\n            merge.setInput(steps+1, original)\n            AvgMult\['whitepoint'].setValue(2 if steps<2 else steps+1)\n            \nelif k.name() == \"output2\":\n    if n.knob(\"output2\").getValue() == 4:\n        n.knob('AvgMaxOriginal').setVisible(True)\n    else:\n        n.knob('AvgMaxOriginal').setVisible(False)\n        \nelif k.name() == \"safeBBox\":\n    if n.knob(\"safeBBox\").getValue() == 0:\n        n.knob('safeBBoxText').setVisible(False)\n        n.knob('safetyBBoxMethod').setVisible(False)\n        n.knob('safeBBoxPixels').setVisible(False)\n        n.knob('safeBBoxPercent').setVisible(False)\n        \n    elif n.knob(\"safeBBox\").getValue() == 1:\n        n.knob('safetyBBoxMethod').setVisible(True)\n        n.knob('safeBBoxText').setVisible(True)\n        if n.knob('safetyBBoxMethod').value() == \"pixels\":\n            n.knob('safeBBoxPixels').setVisible(True)\n            n.knob('safeBBoxPercent').setVisible(False)\n        elif n.knob('safetyBBoxMethod').value() == \"percent\":\n            n.knob('safeBBoxPixels').setVisible(False)\n            n.knob('safeBBoxPercent').setVisible(True)\n            \nelif k.name() == \"safetyBBoxMethod\":\n    if n.knob(\"safetyBBoxMethod\").value() == \"pixels\":\n        n.knob('safeBBoxPixels').setVisible(True)\n        n.knob('safeBBoxPercent').setVisible(False)\n    elif n.knob(\"safetyBBoxMethod\").value() == \"percent\":\n        n.knob('safeBBoxPixels').setVisible(False)\n        n.knob('safeBBoxPercent').setVisible(True)\n        \nelif k.name() == \"adjustBBoxExtra\":\n    if n.knob(\"adjustBBoxExtra\").value() == \"pixels\":\n        n.knob('adjustBBoxPixels').setVisible(True)\n        n.knob('adjustBBoxPercent').setVisible(False)\n    elif n.knob(\"adjustBBoxExtra\").value() == \"percent\":\n        n.knob('adjustBBoxPixels').setVisible(False)\n        n.knob('adjustBBoxPercent').setVisible(True)\n"
 tile_color 0xcc804eff
 label "(\[value output2])"
 note_font "Verdana Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
 note_font_color 0xffffffff
 selected true
 xpos -1865
 ypos -9396
 addUserKnob {20 ExponBlurSimple}
 addUserKnob {41 channels T Shuffle1.in}
 addUserKnob {41 maskChannelMask_1 l area T Multiply1.maskChannelMask}
 addUserKnob {41 inject_1 l inject -STARTLINE T Multiply1.inject}
 addUserKnob {41 invert_mask_1 l invert -STARTLINE T Multiply1.invert_mask}
 addUserKnob {41 fringe_1 l fringe -STARTLINE T Multiply1.fringe}
 addUserKnob {26 ""}
 addUserKnob {4 output2 l Operation: M {Screen Plus Over Hypot Average Max Min "" "" "" "" ""}}
 output2 Over
 addUserKnob {3 steps l "  Steps" -STARTLINE}
 steps 4
 addUserKnob {3 mergeNumber -STARTLINE +INVISIBLE}
 mergeNumber {{"output2 == 0 ? 25 : output2 == 1 ? 24 : output2 == 2 ? 22 : output2 == 3 ? 13 : output2 == 4 ? 24 : output2 == 5 ? 17 : 18"}}
 addUserKnob {26 text l " " -STARTLINE T " "}
 addUserKnob {6 includeOriginal l "Include Original?" -STARTLINE}
 includeOriginal true
 addUserKnob {6 AvgMaxOriginal l "Use Max of Average and Original" +HIDDEN +STARTLINE}
 addUserKnob {14 size l Size R -100 100}
 size 2
 addUserKnob {7 mult l Multiplier R 1 8}
 mult 2.5
 addUserKnob {26 text_1 l " " T " "}
 addUserKnob {14 postBlur l "Post Blur" R 0 100}
 addUserKnob {26 ""}
 addUserKnob {41 maskChannelMask l mask T MergeKeymix.maskChannelMask}
 addUserKnob {41 inject -STARTLINE T MergeKeymix.inject}
 addUserKnob {41 invert_mask l invert -STARTLINE T MergeKeymix.invert_mask}
 addUserKnob {41 fringe -STARTLINE T MergeKeymix.fringe}
 addUserKnob {4 bbox l BBox: M {union intersectionMask A B "input format" "" "" "" "" "" "" "" ""}}
 addUserKnob {6 blackOutside l "Black Outside" -STARTLINE}
 addUserKnob {6 safeBBox l "Safe BBox" t "If the output BBox is larger than the input format and the input box combined. the result will be max of the input/format bbox plus a safety \"buffer\" in pixels or percent \n\nTurning off might make your BBox grow exponentially with high blur values" -STARTLINE}
 safeBBox true
 addUserKnob {26 safeBBoxText l " " T " "}
 addUserKnob {4 safetyBBoxMethod l "Safe BBox Buffer" -STARTLINE M {pixels percent "" "" "" "" "" "" "" "" "" "" "" "" ""}}
 safetyBBoxMethod percent
 addUserKnob {14 safeBBoxPixels l "" -STARTLINE +HIDDEN R 0 400}
 safeBBoxPixels 100
 addUserKnob {14 safeBBoxPercent l "" -STARTLINE R 1 2}
 safeBBoxPercent 1.1
 addUserKnob {26 text_3 l " " T " "}
 addUserKnob {4 adjustBBoxExtra l "Extra BBox Adjust" -STARTLINE M {pixels percent "" "" "" "" "" "" "" "" "" "" "" "" ""}}
 addUserKnob {14 adjustBBoxPixels l "" -STARTLINE R 0 400}
 addUserKnob {14 adjustBBoxPercent l "" -STARTLINE +HIDDEN R 1 2}
 adjustBBoxPercent 1
 addUserKnob {41 mix T MergeKeymix.mix}
 addUserKnob {20 info l Info}
 addUserKnob {26 creator l Creator: T "Tony Lyons"}
 addUserKnob {26 desc l Description: t "Add description and tooltip for gizmo" T ExponBlurSimple}
 addUserKnob {26 ver l Version: T v02}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x535e5a00
  label "BBox Management"
  note_font_size 30
  note_font_color 0xffffffff
  xpos -529
  ypos 492
  bdwidth 341
  bdheight 525
 }
 Input {
  inputs 0
  name Inputimg
  xpos 0
  ypos -969
 }
 Dot {
  name Dot16
  note_font_size 41
  xpos 34
  ypos -802
 }
set N11183b50 [stack 0]
 Dot {
  name Dot2
  note_font_size 41
  xpos -367
  ypos -802
 }
 Dot {
  name Dot18
  label B
  note_font_size 41
  xpos -367
  ypos 434
 }
 Dot {
  name Dot11
  note_font_size 41
  xpos -367
  ypos 623
 }
set N11191dc0 [stack 0]
 Dot {
  name Dot3
  note_font_size 41
  xpos -367
  ypos 675
 }
set N11196990 [stack 0]
 Dot {
  name Dot8
  note_font_size 41
  xpos -463
  ypos 675
 }
 Dot {
  name Dot15
  note_font_size 41
  xpos -463
  ypos 831
 }
push $N11183b50
 Dot {
  name Dot1
  note_font_size 41
  xpos 461
  ypos -802
 }
 Shuffle {
  name Shuffle1
  label "\[value in]"
  xpos 427
  ypos -756
 }
 Remove {
  operation keep
  channels rgba
  name Remove1
  xpos 427
  ypos -718
 }
 Dot {
  name Dot21
  note_font_size 41
  xpos 461
  ypos -597
 }
set N111c2760 [stack 0]
 Invert {
  channels rgba
  name Invert1
  xpos 695
  ypos -601
  disable {{"parent.size < 0 ? 0 : 1"}}
 }
set N111c72c0 [stack 0]
 Dot {
  name Dot4
  note_font_size 41
  xpos 540
  ypos -543
 }
 NoOp {
  name Original
  xpos 506
  ypos -327
 }
set N111d78e0 [stack 0]
 Dot {
  name Dot5
  note_font_size 41
  xpos 540
  ypos 14
 }
 Crop {
  inputs 0
  box {{input.format.x} {input.format.y} {input.format.r} {input.format.t}}
  reformat true
  crop false
  name Crop1
  xpos 210
  ypos -750
  addUserKnob {20 User}
  addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
 }
 AddChannels {
  channels rgba
  name AddChannels2
  xpos 210
  ypos -724
 }
push $N11183b50
 Merge2 {
  inputs 2
  name Merge3
  label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
  xpos 83
  ypos -671
 }
 NoOp {
  name BBoxInput
  xpos 83
  ypos -628
  addUserKnob {20 User}
  addUserKnob {15 bbox}
  bbox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
 }
push $N111d78e0
 Input {
  inputs 0
  name Inputarea
  xpos 289
  ypos -638
  number 2
 }
 AddChannels {
  channels alpha
  color 1
  name AddChannels1
  xpos 289
  ypos -580
 }
 Invert {
  channels rgba
  name Invert3
  xpos 289
  ypos -503
 }
push $N111c72c0
 Multiply {
  inputs 1+1
  channels rgba
  value 0
  name Multiply1
  label "\[value value]"
  xpos 695
  ypos -509
 }
 NoOp {
  name Start
  xpos 695
  ypos -450
 }
set N1122feb0 [stack 0]
 Blur {
  channels rgba
  size {{(Blur1.size)*(mult)**3} {(Blur1.size)*(mult)**3}}
  crop false
  name Blur4
  label "\[value size]"
  xpos 995
  ypos -370
 }
push $N1122feb0
 Blur {
  channels rgba
  size {{(Blur1.size)*(mult)**2} {(Blur1.size)*(mult)**2}}
  crop false
  name Blur3
  label "\[value size]"
  xpos 895
  ypos -370
 }
push 0
push $N1122feb0
 Blur {
  channels rgba
  size {{(Blur1.size)*(mult)**1} {(Blur1.size)*(mult)**1}}
  crop false
  name Blur2
  label "\[value size]"
  xpos 795
  ypos -370
 }
push $N1122feb0
 Blur {
  channels rgba
  size {{parent.size.w} {parent.size.h}}
  name Blur1
  label "\[value size]"
  xpos 695
  ypos -370
 }
 Merge2 {
  inputs 5+1
  operation {{parent.mergeNumber}}
  name Merge1
  label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
  xpos 695
  ypos -256
 }
 NoOp {
  name End
  xpos 695
  ypos -230
 }
 Dot {
  name Dot22
  xpos 729
  ypos -171
 }
set N11280c90 [stack 0]
 CopyBBox {
  inputs 2
  name CopyBBox1
  xpos 585
  ypos -175
 }
 Group {
  name BBoxToFormat
  onCreate "n = nuke.thisNode()\ninputFormat = n.knob(\"inputFormat\")\ninputBBox = n.knob(\"inputBBox\")\ncrop = nuke.toNode(\"Crop6\")\ncropb = crop.knob('box')\noutputBBox = n.knob('outputBBox')\noutputBBoxCenter = n.knob(\"outputBBoxCenter\")\n\ninputFormat.setFlag(0x0000000000008000)\ninputBBox.setFlag(0x0000000000008000)\ncropb.setFlag(0x0000000000008000)\noutputBBox.setFlag(0x0000000000008000)\noutputBBoxCenter.setFlag(0x0000000000008000)\n\nn = nuke.thisNode()\nn.knob(\"overscan\").setRange(0,400)\nn.knob(\"overscanPercent\").setRange(1,4)"
  tile_color 0xa57aaaff
  note_font "Verdana Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
  note_font_color 0xffffffff
  xpos 585
  ypos -151
  addUserKnob {20 CropBBox}
  addUserKnob {4 type l Type +INVISIBLE M {"To Format" "To BBox"}}
  addUserKnob {41 intersect T Crop6.intersect}
  addUserKnob {6 blackOutside l "Black Outside" -STARTLINE}
  addUserKnob {4 overscanType l "Overscan Type:" M {Pixels Percentage}}
  overscanType {{parent.safetyBBoxMethod}}
  addUserKnob {14 overscan l Overscan R 0 400}
  overscan {{parent.safeBBoxPixels} {parent.safeBBoxPixels}}
  addUserKnob {14 overscanPercent l "Overscan Percent" R 1 4}
  overscanPercent {{parent.safeBBoxPercent} {parent.safeBBoxPercent}}
  addUserKnob {20 inputBbox l "BBox Data" n 1}
  addUserKnob {15 inputFormat l "Input Format"}
  inputFormat {0 0 {input.width} {input.height}}
  addUserKnob {15 inputBBox l "Input BBox"}
  inputBBox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
  addUserKnob {12 outputBBoxCenter l OutputBBoxCenter}
  outputBBoxCenter {{OutputBBox1.outputBBoxCenter.w} {OutputBBox1.outputBBoxCenter.h}}
  addUserKnob {15 outputBBox l "Output BBox"}
  outputBBox {{OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox}}
  addUserKnob {20 endGroup n -1}
  addUserKnob {20 info_1 l Info}
  addUserKnob {26 creator l Creator: T "<b><big>Tony Lyons"}
  addUserKnob {26 desc l Description: t "crop to inputformat\n\ndisplays values of input bbox" T CropBBox}
  addUserKnob {26 ver l Version: T v02}
 }
  Input {
   inputs 0
   name Input
   xpos 261
   ypos 394
  }
  Dot {
   name Dot2
   note_font_size 41
   xpos 295
   ypos 462
  }
set N112a1ab0 [stack 0]
  Dot {
   name Dot1
   note_font_size 41
   xpos -160
   ypos 462
  }
set N112a6600 [stack 0]
push $N112a1ab0
  Crop {
   box {{parent.inputBBox} {parent.inputBBox} {parent.inputBBox} {parent.inputBBox}}
   crop {{parent.blackOutside}}
   name Crop6
   xpos 261
   ypos 510
   addUserKnob {20 User}
   addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_1 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_2 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_3 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_4 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_5 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_6 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_7 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_8 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_9 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_10 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_11 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_12 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_13 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_14 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_15 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_16 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_17 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_18 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_19 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  }
set N112ab1c0 [stack 0]
  Remove {
   operation keep
   channels none
   name Remove1
   xpos 120
   ypos 504
  }
set N112b9550 [stack 0]
  Transform {
   scale {{parent.overscanPercent} {parent.overscanPercent}}
   center {{((input.bbox.r-input.bbox.x)/2)+input.bbox.x} {((input.bbox.t-input.bbox.y)/2)+input.bbox.y}}
   shutteroffset centred
   name Transform1
   selected true
   xpos 120
   ypos 553
  }
push $N112b9550
  AdjBBox {
   numpixels {{parent.overscan} {parent.overscan}}
   name AdjBBox1
   xpos -5
   ypos 510
  }
  Switch {
   inputs 2
   which {{overscanType}}
   name Switch2
   label "\[value which]"
   xpos -5
   ypos 549
  }
  Merge2 {
   inputs 2
   bbox intersection
   Achannels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
   Bchannels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
   output {-rgba.red -rgba.green -rgba.blue rgba.alpha}
   name Merge1
   xpos -5
   ypos 647
   disable {{!parent.Crop6.intersect}}
  }
push $N112a6600
  CopyBBox {
   inputs 2
   name CopyBBox1
   xpos -194
   ypos 653
  }
  BlackOutside {
   name BlackOutside1
   xpos -194
   ypos 692
   disable {{!parent.blackOutside}}
  }
  Dot {
   name Dot4
   note_font_size 41
   xpos -160
   ypos 769
  }
push $N112ab1c0
  Switch {
   inputs 2
   which {{"overscanType == 0 ? overscan.w != 0 || overscan.h != 0 : overscanPercent.w != 1 || overscanPercent.h != 1 ? 1 : 0"}}
   name Switch1
   label "\[value which]"
   xpos 261
   ypos 759
  }
set N11305190 [stack 0]
  Output {
   name Output1
   xpos 261
   ypos 921
  }
push $N11305190
  NoOp {
   name OutputBBox1
   xpos 378
   ypos 821
   addUserKnob {20 User}
   addUserKnob {15 OutputBBox l "Output BBox"}
   OutputBBox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
   addUserKnob {14 outputBBoxCenter l "Output BBox Center" R 0 100}
   outputBBoxCenter {{OutputBBox.x+(OutputBBox.r-OutputBBox.x)/2} {OutputBBox.y+(OutputBBox.t-OutputBBox.y)/2}}
  }
 end_group
push $N11280c90
 Merge2 {
  inputs 2
  bbox intersection
  name Merge4
  xpos 585
  ypos -127
 }
push $N11280c90
 CopyBBox {
  inputs 2
  name CopyBBox2
  xpos 585
  ypos -101
 }
push $N11280c90
 Switch {
  inputs 2
  which {{"parent.safeBBox && ((BBoxResult.bbox.x < BBoxInput.bbox.x || BBoxResult.bbox.y < BBoxInput.bbox.y || BBoxResult.bbox.r > BBoxInput.bbox.r || BBoxResult.bbox.t > BBoxInput.bbox.t))"}}
  name Switch2
  label "\[value which]"
  xpos 695
  ypos -106
 }
 Grade {
  channels rgba
  whitepoint 5
  black_clamp false
  name AverageMult
  xpos 695
  ypos -37
  disable {{"output2 == 4 ? 0 : 1"}}
 }
 Merge2 {
  inputs 2
  operation max
  name Merge2
  label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
  xpos 695
  ypos 10
  disable {{"output2 == 4 && includeOriginal == 1 && AvgMaxOriginal == 1 ? 0 : 1"}}
 }
 Blur {
  channels rgba
  size {{postBlur} {postBlur}}
  name BlurOriginal
  label "\[value size]"
  xpos 695
  ypos 59
 }
 Invert {
  channels rgba
  name Invert2
  xpos 695
  ypos 97
  disable {{"parent.size < 0 ? 0 : 1"}}
 }
push $N111c2760
 Switch {
  inputs 2
  which {{"parent.size == 0 ? 0 : 1"}}
  name Switch1
  label "\[value which]"
  xpos 427
  ypos 93
 }
push $N11183b50
 ShuffleCopy {
  inputs 2
  in2 none
  black red
  white green
  red2 blue
  green2 alpha
  out none
  out2 {{{parent.Shuffle1.in}}}
  name ShuffleCopy1
  xpos 0
  ypos 97
 }
 Dot {
  name Dot17
  label A
  note_font_size 41
  xpos 34
  ypos 455
 }
 Dot {
  name Dot7
  note_font_size 41
  xpos 34
  ypos 585
 }
set N1138fb10 [stack 0]
 Dot {
  name Dot12
  note_font_size 41
  xpos -260
  ypos 585
 }
 Dot {
  name Dot13
  note_font_size 41
  xpos -260
  ypos 799
 }
push $N11191dc0
 Input {
  inputs 0
  name Inputmask
  xpos 346
  ypos 325
  number 1
 }
 Dot {
  name Dot19
  label Mask
  note_font_size 41
  xpos 380
  ypos 438
 }
set N113a2a50 [stack 0]
 Dot {
  name Dot20
  note_font_size 41
  xpos 270
  ypos 438
 }
push $N1138fb10
 Merge2 {
  inputs 2
  bbox intersection
  Achannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
  Bchannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
  output {rgba.red -rgba.green -rgba.blue rgba.alpha}
  name MergeIntersection
  xpos 236
  ypos 575
  disable {{"!\[exists parent.input1]"}}
 }
 Merge2 {
  inputs 2
  Achannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
  Bchannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
  output {rgba.red -rgba.green -rgba.blue rgba.alpha}
  name MergeUnion
  xpos 236
  ypos 613
  disable {{"!\[exists parent.input1]"}}
 }
 Dot {
  name Dot6
  label "intersection\nof (Mask and A) + B"
  note_font_size 14
  note_font_color 0xffffffff
  xpos 270
  ypos 773
 }
push $N113a2a50
 Dot {
  name Dot10
  note_font_size 41
  xpos 380
  ypos 675
 }
push $N1138fb10
push $N11196990
 Merge2 {
  inputs 2+1
  operation copy
  Achannels none
  Bchannels none
  output none
  also_merge all
  name MergeKeymix
  xpos 0
  ypos 665
 }
 Dot {
  name Dot14
  note_font_size 41
  xpos 34
  ypos 747
 }
set N113e69b0 [stack 0]
push $N11196990
 CopyBBox {
  inputs 2
  name CopyBBoxUnion
  xpos -401
  ypos 743
  disable {{parent.bbox==0?0:1}}
 }
 CopyBBox {
  inputs 2
  name CopyBBoxIntersection
  xpos -401
  ypos 769
  disable {{"parent.bbox==1 ? 0 : 1"}}
 }
 CopyBBox {
  inputs 2
  name CopyBBoxA
  xpos -401
  ypos 795
  disable {{"parent.bbox==2 ? 0 : 1"}}
 }
 CopyBBox {
  inputs 2
  name CopyBBoxB
  xpos -401
  ypos 827
  disable {{"parent.bbox==3 ? 0 : 1"}}
 }
 Crop {
  box {0 0 {parent.width} {parent.height}}
  crop false
  name CopyBBoxFormat
  xpos -401
  ypos 853
  disable {{"parent.bbox==4 ? 0 : 1"}}
  addUserKnob {20 User}
  addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_1 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_2 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_3 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_4 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_5 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_6 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_7 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_8 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_9 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_10 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_11 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
 }
set N1140a5c0 [stack 0]
 Transform {
  scale {{parent.adjustBBoxPercent} {parent.adjustBBoxPercent}}
  center {{((input.bbox.r-input.bbox.x)/2)+input.bbox.x} {((input.bbox.t-input.bbox.y)/2)+input.bbox.y}}
  black_outside false
  shutteroffset centred
  name TransformBBoxAdjustPercent
  xpos -516
  ypos 898
 }
push $N1140a5c0
 AdjBBox {
  numpixels {{parent.adjustBBoxPixels} {parent.adjustBBoxPixels}}
  name AdjBBoxPixels
  xpos -401
  ypos 901
 }
 Switch {
  inputs 2
  which {{adjustBBoxExtra}}
  name Switch3
  xpos -401
  ypos 940
 }
 Dot {
  name Dot9
  note_font_size 41
  xpos -367
  ypos 993
 }
push $N113e69b0
 CopyBBox {
  inputs 2
  name CopyBBox
  xpos 0
  ypos 989
 }
 BlackOutside {
  name BlackOutside1
  xpos 0
  ypos 1015
  disable {{!parent.blackOutside}}
 }
 Output {
  name Output1
  xpos 0
  ypos 1155
 }
push $N11280c90
 NoOp {
  name BBoxResult
  xpos 588
  ypos -223
  addUserKnob {20 User}
  addUserKnob {15 bbox}
  bbox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
 }
end_group
Unpremult {
 name Unpremult2
 selected true
 xpos -1865
 ypos -9358
}
Dot {
 name Dot36
 label "first level \nfor detail"
 note_font "DejaVu LGC Sans"
 note_font_size 20
 selected true
 xpos -1831
 ypos -9304
}
Group {
 name BinaryAlpha6
 tile_color 0x2a2a2aff
 label "(\[value an] --> \[value output1])"
 note_font Verdana
 note_font_color 0xfffff9ff
 selected true
 xpos -1865
 ypos -9266
 addUserKnob {20 BinaryAlpha}
 addUserKnob {4 an l Analyze: M {rgb rgba alpha "" "" ""}}
 addUserKnob {4 output1 l Output: M {rgba alpha "" "" "" ""}}
 output1 alpha
 addUserKnob {20 info l Info}
 addUserKnob {26 creator l Creator: T "<b><big>Tony Lyons"}
 addUserKnob {26 desc l Description: t "Analyzes channel input and creates a binary result 0 or 1 and outputs it into output channel" T BinaryAlpha}
 addUserKnob {26 ver l Version: T v03}
}
 Input {
  inputs 0
  name Input
  xpos -398
  ypos 275
 }
 Expression {
  temp_name0 rgb_an
  temp_expr0 "r !=0 || g!=0 || b!=0?1:0"
  temp_name1 rgba_an
  temp_expr1 "r!=0 || g!=0 || b!=0 || a!=0?1:0"
  temp_name2 alpha_an
  temp_expr2 a!=0?1:0
  expr3 "parent.an == 0 ? rgb_an : parent.an == 1 ? rgba_an : alpha_an"
  name Expression
  xpos -398
  ypos 341
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle
  label "\[value in]"
  xpos -398
  ypos 367
  disable {{parent.output1}}
 }
 Output {
  name Output1
  xpos -398
  ypos 456
 }
end_group
EdgeBlur {
 channels rgba
 size 79
 name EdgeBlur5
 selected true
 xpos -1865
 ypos -9228
}
Group {
 name ExponBlurSimple6
 onCreate "n = nuke.thisNode()\nn.knob('size').setRange(-100, 100)\nn.knob('adjustBBoxPixels').setRange(0, 400)\nn.knob('adjustBBoxPercent').setRange(1, 2)\nn.knob('safeBBoxPixels').setRange(0, 400)\nn.knob('safeBBoxPercent').setRange(1, 2)"
 knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == \"includeOriginal\":\n    if n.knob('includeOriginal').getValue() == 1:\n        merge = nuke.toNode(\"Merge1\")\n        original = nuke.toNode('Original')\n        AvgMult = nuke.toNode(\"AverageMult\")\n        steps = int(n.knob('steps').getValue())\n        merge.setInput(steps+1, original)\n        AvgMult\['whitepoint'].setValue(2 if steps<2 else steps+1)\n        \n    else:\n        merge.setInput(steps+1, None)\n        AvgMult\['whitepoint'].setValue(2 if steps<2 else steps)\n        \nelif k.name() == \"steps\":\n    \n    s = int(k.value())\n    if s<1:\n        k.setValue(1)\n    else:\n        start = nuke.toNode(\"Start\")\n        end   = nuke.toNode(\"End\")\n        b1    = nuke.toNode(\"Blur1\")\n        merge = nuke.toNode(\"Merge1\")\n        AvgMult = nuke.toNode(\"AverageMult\")\n        \n        b1x   = b1.xpos()\n        b1y   = b1.ypos()\n        b1n   = b1.name()\n        \n        steps = int(n.knob('steps').getValue())\n        size  = n.knob('size').getValue()\n        mult  = n.knob('mult').getValue()\n        \n        #b1.setInput(0, start)\n        for i in range(1,merge.inputs()):\n            merge.setInput(i,None)\n        merge.setInput(0, b1)\n        \[nuke.delete(i) for i in nuke.allNodes() if i.xpos()>start.xpos()]\n        for i in range(1,steps):\n            # Blur\n            b = nuke.nodes.Blur()\n            b.setXYpos(b1x+i*100,b1y)\n            b.setInput(0,start)\n            b\[\"channels\"].setValue(\"rgba\")\n            b\[\"crop\"].setValue(0)\n            b\[\"size\"].setValue(0, 1)\n            b\[\"size\"].setExpression(\"(Blur1.size)*(mult)**%s\"%(i))\n            b\[\"label\"].setValue(\"\[value size]\")\n            merge.setInput(i if i<2 else i+1, b)\n            AvgMult\['whitepoint'].setValue(i if i<2 else i+1)\n            \n        if n.knob('includeOriginal').getValue() == 1:\n            merge = nuke.toNode(\"Merge1\")\n            original = nuke.toNode('Original')\n            AvgMult = nuke.toNode(\"AverageMult\")\n            steps = int(n.knob('steps').getValue())\n            merge.setInput(steps+1, original)\n            AvgMult\['whitepoint'].setValue(2 if steps<2 else steps+1)\n            \nelif k.name() == \"output2\":\n    if n.knob(\"output2\").getValue() == 4:\n        n.knob('AvgMaxOriginal').setVisible(True)\n    else:\n        n.knob('AvgMaxOriginal').setVisible(False)\n        \nelif k.name() == \"safeBBox\":\n    if n.knob(\"safeBBox\").getValue() == 0:\n        n.knob('safeBBoxText').setVisible(False)\n        n.knob('safetyBBoxMethod').setVisible(False)\n        n.knob('safeBBoxPixels').setVisible(False)\n        n.knob('safeBBoxPercent').setVisible(False)\n        \n    elif n.knob(\"safeBBox\").getValue() == 1:\n        n.knob('safetyBBoxMethod').setVisible(True)\n        n.knob('safeBBoxText').setVisible(True)\n        if n.knob('safetyBBoxMethod').value() == \"pixels\":\n            n.knob('safeBBoxPixels').setVisible(True)\n            n.knob('safeBBoxPercent').setVisible(False)\n        elif n.knob('safetyBBoxMethod').value() == \"percent\":\n            n.knob('safeBBoxPixels').setVisible(False)\n            n.knob('safeBBoxPercent').setVisible(True)\n            \nelif k.name() == \"safetyBBoxMethod\":\n    if n.knob(\"safetyBBoxMethod\").value() == \"pixels\":\n        n.knob('safeBBoxPixels').setVisible(True)\n        n.knob('safeBBoxPercent').setVisible(False)\n    elif n.knob(\"safetyBBoxMethod\").value() == \"percent\":\n        n.knob('safeBBoxPixels').setVisible(False)\n        n.knob('safeBBoxPercent').setVisible(True)\n        \nelif k.name() == \"adjustBBoxExtra\":\n    if n.knob(\"adjustBBoxExtra\").value() == \"pixels\":\n        n.knob('adjustBBoxPixels').setVisible(True)\n        n.knob('adjustBBoxPercent').setVisible(False)\n    elif n.knob(\"adjustBBoxExtra\").value() == \"percent\":\n        n.knob('adjustBBoxPixels').setVisible(False)\n        n.knob('adjustBBoxPercent').setVisible(True)\n"
 tile_color 0xcc804eff
 label "(\[value output2])"
 note_font "Verdana Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
 note_font_color 0xffffffff
 selected true
 xpos -1865
 ypos -9174
 addUserKnob {20 ExponBlurSimple}
 addUserKnob {41 channels T Shuffle1.in}
 addUserKnob {41 maskChannelMask_1 l area T Multiply1.maskChannelMask}
 addUserKnob {41 inject_1 l inject -STARTLINE T Multiply1.inject}
 addUserKnob {41 invert_mask_1 l invert -STARTLINE T Multiply1.invert_mask}
 addUserKnob {41 fringe_1 l fringe -STARTLINE T Multiply1.fringe}
 addUserKnob {26 ""}
 addUserKnob {4 output2 l Operation: M {Screen Plus Over Hypot Average Max Min "" "" "" "" ""}}
 output2 Over
 addUserKnob {3 steps l "  Steps" -STARTLINE}
 steps 4
 addUserKnob {3 mergeNumber -STARTLINE +INVISIBLE}
 mergeNumber {{"output2 == 0 ? 25 : output2 == 1 ? 24 : output2 == 2 ? 22 : output2 == 3 ? 13 : output2 == 4 ? 24 : output2 == 5 ? 17 : 18"}}
 addUserKnob {26 text l " " -STARTLINE T " "}
 addUserKnob {6 includeOriginal l "Include Original?" -STARTLINE}
 includeOriginal true
 addUserKnob {6 AvgMaxOriginal l "Use Max of Average and Original" +HIDDEN +STARTLINE}
 addUserKnob {14 size l Size R -100 100}
 size 3.2
 addUserKnob {7 mult l Multiplier R 1 8}
 mult 3.4
 addUserKnob {26 text_1 l " " T " "}
 addUserKnob {14 postBlur l "Post Blur" R 0 100}
 addUserKnob {26 ""}
 addUserKnob {41 maskChannelMask l mask T MergeKeymix.maskChannelMask}
 addUserKnob {41 inject -STARTLINE T MergeKeymix.inject}
 addUserKnob {41 invert_mask l invert -STARTLINE T MergeKeymix.invert_mask}
 addUserKnob {41 fringe -STARTLINE T MergeKeymix.fringe}
 addUserKnob {4 bbox l BBox: M {union intersectionMask A B "input format" "" "" "" "" "" "" "" ""}}
 addUserKnob {6 blackOutside l "Black Outside" -STARTLINE}
 addUserKnob {6 safeBBox l "Safe BBox" t "If the output BBox is larger than the input format and the input box combined. the result will be max of the input/format bbox plus a safety \"buffer\" in pixels or percent \n\nTurning off might make your BBox grow exponentially with high blur values" -STARTLINE}
 safeBBox true
 addUserKnob {26 safeBBoxText l " " T " "}
 addUserKnob {4 safetyBBoxMethod l "Safe BBox Buffer" -STARTLINE M {pixels percent "" "" "" "" "" "" "" "" "" "" "" "" ""}}
 safetyBBoxMethod percent
 addUserKnob {14 safeBBoxPixels l "" -STARTLINE +HIDDEN R 0 400}
 safeBBoxPixels 100
 addUserKnob {14 safeBBoxPercent l "" -STARTLINE R 1 2}
 safeBBoxPercent 1.1
 addUserKnob {26 text_3 l " " T " "}
 addUserKnob {4 adjustBBoxExtra l "Extra BBox Adjust" -STARTLINE M {pixels percent "" "" "" "" "" "" "" "" "" "" "" "" ""}}
 addUserKnob {14 adjustBBoxPixels l "" -STARTLINE R 0 400}
 addUserKnob {14 adjustBBoxPercent l "" -STARTLINE +HIDDEN R 1 2}
 adjustBBoxPercent 1
 addUserKnob {41 mix T MergeKeymix.mix}
 addUserKnob {20 info l Info}
 addUserKnob {26 creator l Creator: T "Tony Lyons"}
 addUserKnob {26 desc l Description: t "Add description and tooltip for gizmo" T ExponBlurSimple}
 addUserKnob {26 ver l Version: T v02}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x535e5a00
  label "BBox Management"
  note_font_size 30
  note_font_color 0xffffffff
  xpos -529
  ypos 492
  bdwidth 341
  bdheight 525
 }
 Input {
  inputs 0
  name Inputimg
  xpos 0
  ypos -969
 }
 Dot {
  name Dot16
  note_font_size 41
  xpos 34
  ypos -802
 }
set N114f40f0 [stack 0]
 Dot {
  name Dot2
  note_font_size 41
  xpos -367
  ypos -802
 }
 Dot {
  name Dot18
  label B
  note_font_size 41
  xpos -367
  ypos 434
 }
 Dot {
  name Dot11
  note_font_size 41
  xpos -367
  ypos 623
 }
set N11502400 [stack 0]
 Dot {
  name Dot3
  note_font_size 41
  xpos -367
  ypos 675
 }
set N11506fd0 [stack 0]
 Dot {
  name Dot8
  note_font_size 41
  xpos -463
  ypos 675
 }
 Dot {
  name Dot15
  note_font_size 41
  xpos -463
  ypos 831
 }
push $N114f40f0
 Dot {
  name Dot1
  note_font_size 41
  xpos 461
  ypos -802
 }
 Shuffle {
  name Shuffle1
  label "\[value in]"
  xpos 427
  ypos -756
 }
 Remove {
  operation keep
  channels rgba
  name Remove1
  xpos 427
  ypos -718
 }
 Dot {
  name Dot21
  note_font_size 41
  xpos 461
  ypos -597
 }
set N11532da0 [stack 0]
 Invert {
  channels rgba
  name Invert1
  xpos 695
  ypos -601
  disable {{"parent.size < 0 ? 0 : 1"}}
 }
set N115378c0 [stack 0]
 Dot {
  name Dot4
  note_font_size 41
  xpos 540
  ypos -543
 }
 NoOp {
  name Original
  xpos 506
  ypos -327
 }
set N11547f40 [stack 0]
 Dot {
  name Dot5
  note_font_size 41
  xpos 540
  ypos 14
 }
 Crop {
  inputs 0
  box {{input.format.x} {input.format.y} {input.format.r} {input.format.t}}
  reformat true
  crop false
  name Crop1
  xpos 210
  ypos -750
  addUserKnob {20 User}
  addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
 }
 AddChannels {
  channels rgba
  name AddChannels2
  xpos 210
  ypos -724
 }
push $N114f40f0
 Merge2 {
  inputs 2
  name Merge3
  label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
  xpos 83
  ypos -671
 }
 NoOp {
  name BBoxInput
  xpos 83
  ypos -628
  addUserKnob {20 User}
  addUserKnob {15 bbox}
  bbox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
 }
push $N11547f40
 Input {
  inputs 0
  name Inputarea
  xpos 289
  ypos -638
  number 2
 }
 AddChannels {
  channels alpha
  color 1
  name AddChannels1
  xpos 289
  ypos -580
 }
 Invert {
  channels rgba
  name Invert3
  xpos 289
  ypos -503
 }
push $N115378c0
 Multiply {
  inputs 1+1
  channels rgba
  value 0
  name Multiply1
  label "\[value value]"
  xpos 695
  ypos -509
 }
 NoOp {
  name Start
  xpos 695
  ypos -450
 }
set N115a0500 [stack 0]
 Blur {
  channels rgba
  size {{(Blur1.size)*(mult)**3} {(Blur1.size)*(mult)**3}}
  crop false
  name Blur4
  label "\[value size]"
  xpos 995
  ypos -370
 }
push $N115a0500
 Blur {
  channels rgba
  size {{(Blur1.size)*(mult)**2} {(Blur1.size)*(mult)**2}}
  crop false
  name Blur3
  label "\[value size]"
  xpos 895
  ypos -370
 }
push 0
push $N115a0500
 Blur {
  channels rgba
  size {{(Blur1.size)*(mult)**1} {(Blur1.size)*(mult)**1}}
  crop false
  name Blur2
  label "\[value size]"
  xpos 795
  ypos -370
 }
push $N115a0500
 Blur {
  channels rgba
  size {{parent.size.w} {parent.size.h}}
  name Blur1
  label "\[value size]"
  xpos 695
  ypos -370
 }
 Merge2 {
  inputs 5+1
  operation {{parent.mergeNumber}}
  name Merge1
  label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
  xpos 695
  ypos -256
 }
 NoOp {
  name End
  xpos 695
  ypos -230
 }
 Dot {
  name Dot22
  xpos 729
  ypos -171
 }
set N115f12e0 [stack 0]
 CopyBBox {
  inputs 2
  name CopyBBox1
  xpos 585
  ypos -175
 }
 Group {
  name BBoxToFormat
  onCreate "n = nuke.thisNode()\ninputFormat = n.knob(\"inputFormat\")\ninputBBox = n.knob(\"inputBBox\")\ncrop = nuke.toNode(\"Crop6\")\ncropb = crop.knob('box')\noutputBBox = n.knob('outputBBox')\noutputBBoxCenter = n.knob(\"outputBBoxCenter\")\n\ninputFormat.setFlag(0x0000000000008000)\ninputBBox.setFlag(0x0000000000008000)\ncropb.setFlag(0x0000000000008000)\noutputBBox.setFlag(0x0000000000008000)\noutputBBoxCenter.setFlag(0x0000000000008000)\n\nn = nuke.thisNode()\nn.knob(\"overscan\").setRange(0,400)\nn.knob(\"overscanPercent\").setRange(1,4)"
  tile_color 0xa57aaaff
  note_font "Verdana Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
  note_font_color 0xffffffff
  xpos 585
  ypos -151
  addUserKnob {20 CropBBox}
  addUserKnob {4 type l Type +INVISIBLE M {"To Format" "To BBox"}}
  addUserKnob {41 intersect T Crop6.intersect}
  addUserKnob {6 blackOutside l "Black Outside" -STARTLINE}
  addUserKnob {4 overscanType l "Overscan Type:" M {Pixels Percentage}}
  overscanType {{parent.safetyBBoxMethod}}
  addUserKnob {14 overscan l Overscan R 0 400}
  overscan {{parent.safeBBoxPixels} {parent.safeBBoxPixels}}
  addUserKnob {14 overscanPercent l "Overscan Percent" R 1 4}
  overscanPercent {{parent.safeBBoxPercent} {parent.safeBBoxPercent}}
  addUserKnob {20 inputBbox l "BBox Data" n 1}
  addUserKnob {15 inputFormat l "Input Format"}
  inputFormat {0 0 {input.width} {input.height}}
  addUserKnob {15 inputBBox l "Input BBox"}
  inputBBox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
  addUserKnob {12 outputBBoxCenter l OutputBBoxCenter}
  outputBBoxCenter {{OutputBBox1.outputBBoxCenter.w} {OutputBBox1.outputBBoxCenter.h}}
  addUserKnob {15 outputBBox l "Output BBox"}
  outputBBox {{OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox}}
  addUserKnob {20 endGroup n -1}
  addUserKnob {20 info_1 l Info}
  addUserKnob {26 creator l Creator: T "<b><big>Tony Lyons"}
  addUserKnob {26 desc l Description: t "crop to inputformat\n\ndisplays values of input bbox" T CropBBox}
  addUserKnob {26 ver l Version: T v02}
 }
  Input {
   inputs 0
   name Input
   xpos 261
   ypos 394
  }
  Dot {
   name Dot2
   note_font_size 41
   xpos 295
   ypos 462
  }
set N11612110 [stack 0]
  Dot {
   name Dot1
   note_font_size 41
   xpos -160
   ypos 462
  }
set N11616c60 [stack 0]
push $N11612110
  Crop {
   box {{parent.inputBBox} {parent.inputBBox} {parent.inputBBox} {parent.inputBBox}}
   crop {{parent.blackOutside}}
   name Crop6
   xpos 261
   ypos 510
   addUserKnob {20 User}
   addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_1 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_2 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_3 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_4 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_5 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_6 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_7 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_8 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_9 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_10 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_11 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_12 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_13 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_14 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_15 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_16 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_17 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_18 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_19 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  }
set N1161b790 [stack 0]
  Remove {
   operation keep
   channels none
   name Remove1
   xpos 120
   ypos 504
  }
set N11629bc0 [stack 0]
  Transform {
   scale {{parent.overscanPercent} {parent.overscanPercent}}
   center {{((input.bbox.r-input.bbox.x)/2)+input.bbox.x} {((input.bbox.t-input.bbox.y)/2)+input.bbox.y}}
   shutteroffset centred
   name Transform1
   selected true
   xpos 120
   ypos 553
  }
push $N11629bc0
  AdjBBox {
   numpixels {{parent.overscan} {parent.overscan}}
   name AdjBBox1
   xpos -5
   ypos 510
  }
  Switch {
   inputs 2
   which {{overscanType}}
   name Switch2
   label "\[value which]"
   xpos -5
   ypos 549
  }
  Merge2 {
   inputs 2
   bbox intersection
   Achannels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
   Bchannels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
   output {-rgba.red -rgba.green -rgba.blue rgba.alpha}
   name Merge1
   xpos -5
   ypos 647
   disable {{!parent.Crop6.intersect}}
  }
push $N11616c60
  CopyBBox {
   inputs 2
   name CopyBBox1
   xpos -194
   ypos 653
  }
  BlackOutside {
   name BlackOutside1
   xpos -194
   ypos 692
   disable {{!parent.blackOutside}}
  }
  Dot {
   name Dot4
   note_font_size 41
   xpos -160
   ypos 769
  }
push $N1161b790
  Switch {
   inputs 2
   which {{"overscanType == 0 ? overscan.w != 0 || overscan.h != 0 : overscanPercent.w != 1 || overscanPercent.h != 1 ? 1 : 0"}}
   name Switch1
   label "\[value which]"
   xpos 261
   ypos 759
  }
set N11675860 [stack 0]
  Output {
   name Output1
   xpos 261
   ypos 921
  }
push $N11675860
  NoOp {
   name OutputBBox1
   xpos 378
   ypos 821
   addUserKnob {20 User}
   addUserKnob {15 OutputBBox l "Output BBox"}
   OutputBBox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
   addUserKnob {14 outputBBoxCenter l "Output BBox Center" R 0 100}
   outputBBoxCenter {{OutputBBox.x+(OutputBBox.r-OutputBBox.x)/2} {OutputBBox.y+(OutputBBox.t-OutputBBox.y)/2}}
  }
 end_group
push $N115f12e0
 Merge2 {
  inputs 2
  bbox intersection
  name Merge4
  xpos 585
  ypos -127
 }
push $N115f12e0
 CopyBBox {
  inputs 2
  name CopyBBox2
  xpos 585
  ypos -101
 }
push $N115f12e0
 Switch {
  inputs 2
  which {{"parent.safeBBox && ((BBoxResult.bbox.x < BBoxInput.bbox.x || BBoxResult.bbox.y < BBoxInput.bbox.y || BBoxResult.bbox.r > BBoxInput.bbox.r || BBoxResult.bbox.t > BBoxInput.bbox.t))"}}
  name Switch2
  label "\[value which]"
  xpos 695
  ypos -106
 }
 Grade {
  channels rgba
  whitepoint 5
  black_clamp false
  name AverageMult
  xpos 695
  ypos -37
  disable {{"output2 == 4 ? 0 : 1"}}
 }
 Merge2 {
  inputs 2
  operation max
  name Merge2
  label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
  xpos 695
  ypos 10
  disable {{"output2 == 4 && includeOriginal == 1 && AvgMaxOriginal == 1 ? 0 : 1"}}
 }
 Blur {
  channels rgba
  size {{postBlur} {postBlur}}
  name BlurOriginal
  label "\[value size]"
  xpos 695
  ypos 59
 }
 Invert {
  channels rgba
  name Invert2
  xpos 695
  ypos 97
  disable {{"parent.size < 0 ? 0 : 1"}}
 }
push $N11532da0
 Switch {
  inputs 2
  which {{"parent.size == 0 ? 0 : 1"}}
  name Switch1
  label "\[value which]"
  xpos 427
  ypos 93
 }
push $N114f40f0
 ShuffleCopy {
  inputs 2
  in2 none
  black red
  white green
  red2 blue
  green2 alpha
  out none
  out2 {{{parent.Shuffle1.in}}}
  name ShuffleCopy1
  xpos 0
  ypos 97
 }
 Dot {
  name Dot17
  label A
  note_font_size 41
  xpos 34
  ypos 455
 }
 Dot {
  name Dot7
  note_font_size 41
  xpos 34
  ypos 585
 }
set N11700180 [stack 0]
 Dot {
  name Dot12
  note_font_size 41
  xpos -260
  ypos 585
 }
 Dot {
  name Dot13
  note_font_size 41
  xpos -260
  ypos 799
 }
push $N11502400
 Input {
  inputs 0
  name Inputmask
  xpos 346
  ypos 325
  number 1
 }
 Dot {
  name Dot19
  label Mask
  note_font_size 41
  xpos 380
  ypos 438
 }
set N117130c0 [stack 0]
 Dot {
  name Dot20
  note_font_size 41
  xpos 270
  ypos 438
 }
push $N11700180
 Merge2 {
  inputs 2
  bbox intersection
  Achannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
  Bchannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
  output {rgba.red -rgba.green -rgba.blue rgba.alpha}
  name MergeIntersection
  xpos 236
  ypos 575
  disable {{"!\[exists parent.input1]"}}
 }
 Merge2 {
  inputs 2
  Achannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
  Bchannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
  output {rgba.red -rgba.green -rgba.blue rgba.alpha}
  name MergeUnion
  xpos 236
  ypos 613
  disable {{"!\[exists parent.input1]"}}
 }
 Dot {
  name Dot6
  label "intersection\nof (Mask and A) + B"
  note_font_size 14
  note_font_color 0xffffffff
  xpos 270
  ypos 773
 }
push $N117130c0
 Dot {
  name Dot10
  note_font_size 41
  xpos 380
  ypos 675
 }
push $N11700180
push $N11506fd0
 Merge2 {
  inputs 2+1
  operation copy
  Achannels none
  Bchannels none
  output none
  also_merge all
  name MergeKeymix
  xpos 0
  ypos 665
 }
 Dot {
  name Dot14
  note_font_size 41
  xpos 34
  ypos 747
 }
set N11757050 [stack 0]
push $N11506fd0
 CopyBBox {
  inputs 2
  name CopyBBoxUnion
  xpos -401
  ypos 743
  disable {{parent.bbox==0?0:1}}
 }
 CopyBBox {
  inputs 2
  name CopyBBoxIntersection
  xpos -401
  ypos 769
  disable {{"parent.bbox==1 ? 0 : 1"}}
 }
 CopyBBox {
  inputs 2
  name CopyBBoxA
  xpos -401
  ypos 795
  disable {{"parent.bbox==2 ? 0 : 1"}}
 }
 CopyBBox {
  inputs 2
  name CopyBBoxB
  xpos -401
  ypos 827
  disable {{"parent.bbox==3 ? 0 : 1"}}
 }
 Crop {
  box {0 0 {parent.width} {parent.height}}
  crop false
  name CopyBBoxFormat
  xpos -401
  ypos 853
  disable {{"parent.bbox==4 ? 0 : 1"}}
  addUserKnob {20 User}
  addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_1 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_2 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_3 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_4 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_5 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_6 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_7 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_8 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_9 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_10 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_11 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
 }
set N1177ac40 [stack 0]
 Transform {
  scale {{parent.adjustBBoxPercent} {parent.adjustBBoxPercent}}
  center {{((input.bbox.r-input.bbox.x)/2)+input.bbox.x} {((input.bbox.t-input.bbox.y)/2)+input.bbox.y}}
  black_outside false
  shutteroffset centred
  name TransformBBoxAdjustPercent
  xpos -516
  ypos 898
 }
push $N1177ac40
 AdjBBox {
  numpixels {{parent.adjustBBoxPixels} {parent.adjustBBoxPixels}}
  name AdjBBoxPixels
  xpos -401
  ypos 901
 }
 Switch {
  inputs 2
  which {{adjustBBoxExtra}}
  name Switch3
  xpos -401
  ypos 940
 }
 Dot {
  name Dot9
  note_font_size 41
  xpos -367
  ypos 993
 }
push $N11757050
 CopyBBox {
  inputs 2
  name CopyBBox
  xpos 0
  ypos 989
 }
 BlackOutside {
  name BlackOutside1
  xpos 0
  ypos 1015
  disable {{!parent.blackOutside}}
 }
 Output {
  name Output1
  xpos 0
  ypos 1155
 }
push $N115f12e0
 NoOp {
  name BBoxResult
  xpos 588
  ypos -223
  addUserKnob {20 User}
  addUserKnob {15 bbox}
  bbox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
 }
end_group
Unpremult {
 name Unpremult3
 selected true
 xpos -1865
 ypos -9136
}
Dot {
 name Dot37
 label "mid level,\nfill in / blend"
 note_font "DejaVu LGC Sans"
 note_font_size 20
 selected true
 xpos -1831
 ypos -9089
}
Group {
 name BinaryAlpha7
 tile_color 0x2a2a2aff
 label "(\[value an] --> \[value output1])"
 note_font Verdana
 note_font_color 0xfffff9ff
 selected true
 xpos -1865
 ypos -9040
 addUserKnob {20 BinaryAlpha}
 addUserKnob {4 an l Analyze: M {rgb rgba alpha "" "" ""}}
 addUserKnob {4 output1 l Output: M {rgba alpha "" "" "" ""}}
 output1 alpha
 addUserKnob {20 info l Info}
 addUserKnob {26 creator l Creator: T "<b><big>Tony Lyons"}
 addUserKnob {26 desc l Description: t "Analyzes channel input and creates a binary result 0 or 1 and outputs it into output channel" T BinaryAlpha}
 addUserKnob {26 ver l Version: T v03}
}
 Input {
  inputs 0
  name Input
  xpos -398
  ypos 275
 }
 Expression {
  temp_name0 rgb_an
  temp_expr0 "r !=0 || g!=0 || b!=0?1:0"
  temp_name1 rgba_an
  temp_expr1 "r!=0 || g!=0 || b!=0 || a!=0?1:0"
  temp_name2 alpha_an
  temp_expr2 a!=0?1:0
  expr3 "parent.an == 0 ? rgb_an : parent.an == 1 ? rgba_an : alpha_an"
  name Expression
  xpos -398
  ypos 341
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle
  label "\[value in]"
  xpos -398
  ypos 367
  disable {{parent.output1}}
 }
 Output {
  name Output1
  xpos -398
  ypos 456
 }
end_group
EdgeBlur {
 channels rgba
 size 62
 name EdgeBlur6
 selected true
 xpos -1865
 ypos -9002
}
Group {
 name ExponBlurSimple8
 onCreate "n = nuke.thisNode()\nn.knob('size').setRange(-100, 100)\nn.knob('adjustBBoxPixels').setRange(0, 400)\nn.knob('adjustBBoxPercent').setRange(1, 2)\nn.knob('safeBBoxPixels').setRange(0, 400)\nn.knob('safeBBoxPercent').setRange(1, 2)"
 knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == \"includeOriginal\":\n    if n.knob('includeOriginal').getValue() == 1:\n        merge = nuke.toNode(\"Merge1\")\n        original = nuke.toNode('Original')\n        AvgMult = nuke.toNode(\"AverageMult\")\n        steps = int(n.knob('steps').getValue())\n        merge.setInput(steps+1, original)\n        AvgMult\['whitepoint'].setValue(2 if steps<2 else steps+1)\n        \n    else:\n        merge.setInput(steps+1, None)\n        AvgMult\['whitepoint'].setValue(2 if steps<2 else steps)\n        \nelif k.name() == \"steps\":\n    \n    s = int(k.value())\n    if s<1:\n        k.setValue(1)\n    else:\n        start = nuke.toNode(\"Start\")\n        end   = nuke.toNode(\"End\")\n        b1    = nuke.toNode(\"Blur1\")\n        merge = nuke.toNode(\"Merge1\")\n        AvgMult = nuke.toNode(\"AverageMult\")\n        \n        b1x   = b1.xpos()\n        b1y   = b1.ypos()\n        b1n   = b1.name()\n        \n        steps = int(n.knob('steps').getValue())\n        size  = n.knob('size').getValue()\n        mult  = n.knob('mult').getValue()\n        \n        #b1.setInput(0, start)\n        for i in range(1,merge.inputs()):\n            merge.setInput(i,None)\n        merge.setInput(0, b1)\n        \[nuke.delete(i) for i in nuke.allNodes() if i.xpos()>start.xpos()]\n        for i in range(1,steps):\n            # Blur\n            b = nuke.nodes.Blur()\n            b.setXYpos(b1x+i*100,b1y)\n            b.setInput(0,start)\n            b\[\"channels\"].setValue(\"rgba\")\n            b\[\"crop\"].setValue(0)\n            b\[\"size\"].setValue(0, 1)\n            b\[\"size\"].setExpression(\"(Blur1.size)*(mult)**%s\"%(i))\n            b\[\"label\"].setValue(\"\[value size]\")\n            merge.setInput(i if i<2 else i+1, b)\n            AvgMult\['whitepoint'].setValue(i if i<2 else i+1)\n            \n        if n.knob('includeOriginal').getValue() == 1:\n            merge = nuke.toNode(\"Merge1\")\n            original = nuke.toNode('Original')\n            AvgMult = nuke.toNode(\"AverageMult\")\n            steps = int(n.knob('steps').getValue())\n            merge.setInput(steps+1, original)\n            AvgMult\['whitepoint'].setValue(2 if steps<2 else steps+1)\n            \nelif k.name() == \"output2\":\n    if n.knob(\"output2\").getValue() == 4:\n        n.knob('AvgMaxOriginal').setVisible(True)\n    else:\n        n.knob('AvgMaxOriginal').setVisible(False)\n        \nelif k.name() == \"safeBBox\":\n    if n.knob(\"safeBBox\").getValue() == 0:\n        n.knob('safeBBoxText').setVisible(False)\n        n.knob('safetyBBoxMethod').setVisible(False)\n        n.knob('safeBBoxPixels').setVisible(False)\n        n.knob('safeBBoxPercent').setVisible(False)\n        \n    elif n.knob(\"safeBBox\").getValue() == 1:\n        n.knob('safetyBBoxMethod').setVisible(True)\n        n.knob('safeBBoxText').setVisible(True)\n        if n.knob('safetyBBoxMethod').value() == \"pixels\":\n            n.knob('safeBBoxPixels').setVisible(True)\n            n.knob('safeBBoxPercent').setVisible(False)\n        elif n.knob('safetyBBoxMethod').value() == \"percent\":\n            n.knob('safeBBoxPixels').setVisible(False)\n            n.knob('safeBBoxPercent').setVisible(True)\n            \nelif k.name() == \"safetyBBoxMethod\":\n    if n.knob(\"safetyBBoxMethod\").value() == \"pixels\":\n        n.knob('safeBBoxPixels').setVisible(True)\n        n.knob('safeBBoxPercent').setVisible(False)\n    elif n.knob(\"safetyBBoxMethod\").value() == \"percent\":\n        n.knob('safeBBoxPixels').setVisible(False)\n        n.knob('safeBBoxPercent').setVisible(True)\n        \nelif k.name() == \"adjustBBoxExtra\":\n    if n.knob(\"adjustBBoxExtra\").value() == \"pixels\":\n        n.knob('adjustBBoxPixels').setVisible(True)\n        n.knob('adjustBBoxPercent').setVisible(False)\n    elif n.knob(\"adjustBBoxExtra\").value() == \"percent\":\n        n.knob('adjustBBoxPixels').setVisible(False)\n        n.knob('adjustBBoxPercent').setVisible(True)\n"
 tile_color 0xcc804eff
 label "(\[value output2])"
 note_font "Verdana Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
 note_font_color 0xffffffff
 selected true
 xpos -1865
 ypos -8948
 addUserKnob {20 ExponBlurSimple}
 addUserKnob {41 channels T Shuffle1.in}
 addUserKnob {41 maskChannelMask_1 l area T Multiply1.maskChannelMask}
 addUserKnob {41 inject_1 l inject -STARTLINE T Multiply1.inject}
 addUserKnob {41 invert_mask_1 l invert -STARTLINE T Multiply1.invert_mask}
 addUserKnob {41 fringe_1 l fringe -STARTLINE T Multiply1.fringe}
 addUserKnob {26 ""}
 addUserKnob {4 output2 l Operation: M {Screen Plus Over Hypot Average Max Min "" "" "" "" ""}}
 output2 Over
 addUserKnob {3 steps l "  Steps" -STARTLINE}
 steps 4
 addUserKnob {3 mergeNumber -STARTLINE +INVISIBLE}
 mergeNumber {{"output2 == 0 ? 25 : output2 == 1 ? 24 : output2 == 2 ? 22 : output2 == 3 ? 13 : output2 == 4 ? 24 : output2 == 5 ? 17 : 18"}}
 addUserKnob {26 text l " " -STARTLINE T " "}
 addUserKnob {6 includeOriginal l "Include Original?" -STARTLINE}
 includeOriginal true
 addUserKnob {6 AvgMaxOriginal l "Use Max of Average and Original" +HIDDEN +STARTLINE}
 addUserKnob {14 size l Size R -100 100}
 size 4
 addUserKnob {7 mult l Multiplier R 1 8}
 mult 4
 addUserKnob {26 text_1 l " " T " "}
 addUserKnob {14 postBlur l "Post Blur" R 0 100}
 addUserKnob {26 ""}
 addUserKnob {41 maskChannelMask l mask T MergeKeymix.maskChannelMask}
 addUserKnob {41 inject -STARTLINE T MergeKeymix.inject}
 addUserKnob {41 invert_mask l invert -STARTLINE T MergeKeymix.invert_mask}
 addUserKnob {41 fringe -STARTLINE T MergeKeymix.fringe}
 addUserKnob {4 bbox l BBox: M {union intersectionMask A B "input format" "" "" "" "" "" "" "" ""}}
 addUserKnob {6 blackOutside l "Black Outside" -STARTLINE}
 addUserKnob {6 safeBBox l "Safe BBox" t "If the output BBox is larger than the input format and the input box combined. the result will be max of the input/format bbox plus a safety \"buffer\" in pixels or percent \n\nTurning off might make your BBox grow exponentially with high blur values" -STARTLINE}
 safeBBox true
 addUserKnob {26 safeBBoxText l " " T " "}
 addUserKnob {4 safetyBBoxMethod l "Safe BBox Buffer" -STARTLINE M {pixels percent "" "" "" "" "" "" "" "" "" "" "" "" ""}}
 safetyBBoxMethod percent
 addUserKnob {14 safeBBoxPixels l "" -STARTLINE +HIDDEN R 0 400}
 safeBBoxPixels 100
 addUserKnob {14 safeBBoxPercent l "" -STARTLINE R 1 2}
 safeBBoxPercent 1.1
 addUserKnob {26 text_3 l " " T " "}
 addUserKnob {4 adjustBBoxExtra l "Extra BBox Adjust" -STARTLINE M {pixels percent "" "" "" "" "" "" "" "" "" "" "" "" ""}}
 addUserKnob {14 adjustBBoxPixels l "" -STARTLINE R 0 400}
 addUserKnob {14 adjustBBoxPercent l "" -STARTLINE +HIDDEN R 1 2}
 adjustBBoxPercent 1
 addUserKnob {41 mix T MergeKeymix.mix}
 addUserKnob {20 info l Info}
 addUserKnob {26 creator l Creator: T "Tony Lyons"}
 addUserKnob {26 desc l Description: t "Add description and tooltip for gizmo" T ExponBlurSimple}
 addUserKnob {26 ver l Version: T v02}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x535e5a00
  label "BBox Management"
  note_font_size 30
  note_font_color 0xffffffff
  xpos -529
  ypos 492
  bdwidth 341
  bdheight 525
 }
 Input {
  inputs 0
  name Inputimg
  xpos 0
  ypos -969
 }
 Dot {
  name Dot16
  note_font_size 41
  xpos 34
  ypos -802
 }
set N11869f70 [stack 0]
 Dot {
  name Dot2
  note_font_size 41
  xpos -367
  ypos -802
 }
 Dot {
  name Dot18
  label B
  note_font_size 41
  xpos -367
  ypos 434
 }
 Dot {
  name Dot11
  note_font_size 41
  xpos -367
  ypos 623
 }
set N118781f0 [stack 0]
 Dot {
  name Dot3
  note_font_size 41
  xpos -367
  ypos 675
 }
set N1187cdc0 [stack 0]
 Dot {
  name Dot8
  note_font_size 41
  xpos -463
  ypos 675
 }
 Dot {
  name Dot15
  note_font_size 41
  xpos -463
  ypos 831
 }
push $N11869f70
 Dot {
  name Dot1
  note_font_size 41
  xpos 461
  ypos -802
 }
 Shuffle {
  name Shuffle1
  label "\[value in]"
  xpos 427
  ypos -756
 }
 Remove {
  operation keep
  channels rgba
  name Remove1
  xpos 427
  ypos -718
 }
 Dot {
  name Dot21
  note_font_size 41
  xpos 461
  ypos -597
 }
set N118a8ba0 [stack 0]
 Invert {
  channels rgba
  name Invert1
  xpos 695
  ypos -601
  disable {{"parent.size < 0 ? 0 : 1"}}
 }
set N118ad700 [stack 0]
 Dot {
  name Dot4
  note_font_size 41
  xpos 540
  ypos -543
 }
 NoOp {
  name Original
  xpos 506
  ypos -327
 }
set N118bdd30 [stack 0]
 Dot {
  name Dot5
  note_font_size 41
  xpos 540
  ypos 14
 }
 Crop {
  inputs 0
  box {{input.format.x} {input.format.y} {input.format.r} {input.format.t}}
  reformat true
  crop false
  name Crop1
  xpos 210
  ypos -750
  addUserKnob {20 User}
  addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
 }
 AddChannels {
  channels rgba
  name AddChannels2
  xpos 210
  ypos -724
 }
push $N11869f70
 Merge2 {
  inputs 2
  name Merge3
  label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
  xpos 83
  ypos -671
 }
 NoOp {
  name BBoxInput
  xpos 83
  ypos -628
  addUserKnob {20 User}
  addUserKnob {15 bbox}
  bbox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
 }
push $N118bdd30
 Input {
  inputs 0
  name Inputarea
  xpos 289
  ypos -638
  number 2
 }
 AddChannels {
  channels alpha
  color 1
  name AddChannels1
  xpos 289
  ypos -580
 }
 Invert {
  channels rgba
  name Invert3
  xpos 289
  ypos -503
 }
push $N118ad700
 Multiply {
  inputs 1+1
  channels rgba
  value 0
  name Multiply1
  label "\[value value]"
  xpos 695
  ypos -509
 }
 NoOp {
  name Start
  xpos 695
  ypos -450
 }
set N119162f0 [stack 0]
 Blur {
  channels rgba
  size {{(Blur1.size)*(mult)**3} {(Blur1.size)*(mult)**3}}
  crop false
  name Blur4
  label "\[value size]"
  xpos 995
  ypos -370
 }
push $N119162f0
 Blur {
  channels rgba
  size {{(Blur1.size)*(mult)**2} {(Blur1.size)*(mult)**2}}
  crop false
  name Blur3
  label "\[value size]"
  xpos 895
  ypos -370
 }
push 0
push $N119162f0
 Blur {
  channels rgba
  size {{(Blur1.size)*(mult)**1} {(Blur1.size)*(mult)**1}}
  crop false
  name Blur2
  label "\[value size]"
  xpos 795
  ypos -370
 }
push $N119162f0
 Blur {
  channels rgba
  size {{parent.size.w} {parent.size.h}}
  name Blur1
  label "\[value size]"
  xpos 695
  ypos -370
 }
 Merge2 {
  inputs 5+1
  operation {{parent.mergeNumber}}
  name Merge1
  label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
  xpos 695
  ypos -256
 }
 NoOp {
  name End
  xpos 695
  ypos -230
 }
 Dot {
  name Dot22
  xpos 729
  ypos -171
 }
set N119670e0 [stack 0]
 CopyBBox {
  inputs 2
  name CopyBBox1
  xpos 585
  ypos -175
 }
 Group {
  name BBoxToFormat
  onCreate "n = nuke.thisNode()\ninputFormat = n.knob(\"inputFormat\")\ninputBBox = n.knob(\"inputBBox\")\ncrop = nuke.toNode(\"Crop6\")\ncropb = crop.knob('box')\noutputBBox = n.knob('outputBBox')\noutputBBoxCenter = n.knob(\"outputBBoxCenter\")\n\ninputFormat.setFlag(0x0000000000008000)\ninputBBox.setFlag(0x0000000000008000)\ncropb.setFlag(0x0000000000008000)\noutputBBox.setFlag(0x0000000000008000)\noutputBBoxCenter.setFlag(0x0000000000008000)\n\nn = nuke.thisNode()\nn.knob(\"overscan\").setRange(0,400)\nn.knob(\"overscanPercent\").setRange(1,4)"
  tile_color 0xa57aaaff
  note_font "Verdana Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
  note_font_color 0xffffffff
  xpos 585
  ypos -151
  addUserKnob {20 CropBBox}
  addUserKnob {4 type l Type +INVISIBLE M {"To Format" "To BBox"}}
  addUserKnob {41 intersect T Crop6.intersect}
  addUserKnob {6 blackOutside l "Black Outside" -STARTLINE}
  addUserKnob {4 overscanType l "Overscan Type:" M {Pixels Percentage}}
  overscanType {{parent.safetyBBoxMethod}}
  addUserKnob {14 overscan l Overscan R 0 400}
  overscan {{parent.safeBBoxPixels} {parent.safeBBoxPixels}}
  addUserKnob {14 overscanPercent l "Overscan Percent" R 1 4}
  overscanPercent {{parent.safeBBoxPercent} {parent.safeBBoxPercent}}
  addUserKnob {20 inputBbox l "BBox Data" n 1}
  addUserKnob {15 inputFormat l "Input Format"}
  inputFormat {0 0 {input.width} {input.height}}
  addUserKnob {15 inputBBox l "Input BBox"}
  inputBBox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
  addUserKnob {12 outputBBoxCenter l OutputBBoxCenter}
  outputBBoxCenter {{OutputBBox1.outputBBoxCenter.w} {OutputBBox1.outputBBoxCenter.h}}
  addUserKnob {15 outputBBox l "Output BBox"}
  outputBBox {{OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox}}
  addUserKnob {20 endGroup n -1}
  addUserKnob {20 info_1 l Info}
  addUserKnob {26 creator l Creator: T "<b><big>Tony Lyons"}
  addUserKnob {26 desc l Description: t "crop to inputformat\n\ndisplays values of input bbox" T CropBBox}
  addUserKnob {26 ver l Version: T v02}
 }
  Input {
   inputs 0
   name Input
   xpos 261
   ypos 394
  }
  Dot {
   name Dot2
   note_font_size 41
   xpos 295
   ypos 462
  }
set N11987f10 [stack 0]
  Dot {
   name Dot1
   note_font_size 41
   xpos -160
   ypos 462
  }
set N1198ca60 [stack 0]
push $N11987f10
  Crop {
   box {{parent.inputBBox} {parent.inputBBox} {parent.inputBBox} {parent.inputBBox}}
   crop {{parent.blackOutside}}
   name Crop6
   xpos 261
   ypos 510
   addUserKnob {20 User}
   addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_1 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_2 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_3 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_4 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_5 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_6 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_7 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_8 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_9 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_10 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_11 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_12 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_13 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_14 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_15 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_16 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_17 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_18 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_19 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  }
set N11991620 [stack 0]
  Remove {
   operation keep
   channels none
   name Remove1
   xpos 120
   ypos 504
  }
set N1199f9c0 [stack 0]
  Transform {
   scale {{parent.overscanPercent} {parent.overscanPercent}}
   center {{((input.bbox.r-input.bbox.x)/2)+input.bbox.x} {((input.bbox.t-input.bbox.y)/2)+input.bbox.y}}
   shutteroffset centred
   name Transform1
   selected true
   xpos 120
   ypos 553
  }
push $N1199f9c0
  AdjBBox {
   numpixels {{parent.overscan} {parent.overscan}}
   name AdjBBox1
   xpos -5
   ypos 510
  }
  Switch {
   inputs 2
   which {{overscanType}}
   name Switch2
   label "\[value which]"
   xpos -5
   ypos 549
  }
  Merge2 {
   inputs 2
   bbox intersection
   Achannels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
   Bchannels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
   output {-rgba.red -rgba.green -rgba.blue rgba.alpha}
   name Merge1
   xpos -5
   ypos 647
   disable {{!parent.Crop6.intersect}}
  }
push $N1198ca60
  CopyBBox {
   inputs 2
   name CopyBBox1
   xpos -194
   ypos 653
  }
  BlackOutside {
   name BlackOutside1
   xpos -194
   ypos 692
   disable {{!parent.blackOutside}}
  }
  Dot {
   name Dot4
   note_font_size 41
   xpos -160
   ypos 769
  }
push $N11991620
  Switch {
   inputs 2
   which {{"overscanType == 0 ? overscan.w != 0 || overscan.h != 0 : overscanPercent.w != 1 || overscanPercent.h != 1 ? 1 : 0"}}
   name Switch1
   label "\[value which]"
   xpos 261
   ypos 759
  }
set N119eb670 [stack 0]
  Output {
   name Output1
   xpos 261
   ypos 921
  }
push $N119eb670
  NoOp {
   name OutputBBox1
   xpos 378
   ypos 821
   addUserKnob {20 User}
   addUserKnob {15 OutputBBox l "Output BBox"}
   OutputBBox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
   addUserKnob {14 outputBBoxCenter l "Output BBox Center" R 0 100}
   outputBBoxCenter {{OutputBBox.x+(OutputBBox.r-OutputBBox.x)/2} {OutputBBox.y+(OutputBBox.t-OutputBBox.y)/2}}
  }
 end_group
push $N119670e0
 Merge2 {
  inputs 2
  bbox intersection
  name Merge4
  xpos 585
  ypos -127
 }
push $N119670e0
 CopyBBox {
  inputs 2
  name CopyBBox2
  xpos 585
  ypos -101
 }
push $N119670e0
 Switch {
  inputs 2
  which {{"parent.safeBBox && ((BBoxResult.bbox.x < BBoxInput.bbox.x || BBoxResult.bbox.y < BBoxInput.bbox.y || BBoxResult.bbox.r > BBoxInput.bbox.r || BBoxResult.bbox.t > BBoxInput.bbox.t))"}}
  name Switch2
  label "\[value which]"
  xpos 695
  ypos -106
 }
 Grade {
  channels rgba
  whitepoint 5
  black_clamp false
  name AverageMult
  xpos 695
  ypos -37
  disable {{"output2 == 4 ? 0 : 1"}}
 }
 Merge2 {
  inputs 2
  operation max
  name Merge2
  label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
  xpos 695
  ypos 10
  disable {{"output2 == 4 && includeOriginal == 1 && AvgMaxOriginal == 1 ? 0 : 1"}}
 }
 Blur {
  channels rgba
  size {{postBlur} {postBlur}}
  name BlurOriginal
  label "\[value size]"
  xpos 695
  ypos 59
 }
 Invert {
  channels rgba
  name Invert2
  xpos 695
  ypos 97
  disable {{"parent.size < 0 ? 0 : 1"}}
 }
push $N118a8ba0
 Switch {
  inputs 2
  which {{"parent.size == 0 ? 0 : 1"}}
  name Switch1
  label "\[value which]"
  xpos 427
  ypos 93
 }
push $N11869f70
 ShuffleCopy {
  inputs 2
  in2 none
  black red
  white green
  red2 blue
  green2 alpha
  out none
  out2 {{{parent.Shuffle1.in}}}
  name ShuffleCopy1
  xpos 0
  ypos 97
 }
 Dot {
  name Dot17
  label A
  note_font_size 41
  xpos 34
  ypos 455
 }
 Dot {
  name Dot7
  note_font_size 41
  xpos 34
  ypos 585
 }
set N11a75fe0 [stack 0]
 Dot {
  name Dot12
  note_font_size 41
  xpos -260
  ypos 585
 }
 Dot {
  name Dot13
  note_font_size 41
  xpos -260
  ypos 799
 }
push $N118781f0
 Input {
  inputs 0
  name Inputmask
  xpos 346
  ypos 325
  number 1
 }
 Dot {
  name Dot19
  label Mask
  note_font_size 41
  xpos 380
  ypos 438
 }
set N11a88f40 [stack 0]
 Dot {
  name Dot20
  note_font_size 41
  xpos 270
  ypos 438
 }
push $N11a75fe0
 Merge2 {
  inputs 2
  bbox intersection
  Achannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
  Bchannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
  output {rgba.red -rgba.green -rgba.blue rgba.alpha}
  name MergeIntersection
  xpos 236
  ypos 575
  disable {{"!\[exists parent.input1]"}}
 }
 Merge2 {
  inputs 2
  Achannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
  Bchannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
  output {rgba.red -rgba.green -rgba.blue rgba.alpha}
  name MergeUnion
  xpos 236
  ypos 613
  disable {{"!\[exists parent.input1]"}}
 }
 Dot {
  name Dot6
  label "intersection\nof (Mask and A) + B"
  note_font_size 14
  note_font_color 0xffffffff
  xpos 270
  ypos 773
 }
push $N11a88f40
 Dot {
  name Dot10
  note_font_size 41
  xpos 380
  ypos 675
 }
push $N11a75fe0
push $N1187cdc0
 Merge2 {
  inputs 2+1
  operation copy
  Achannels none
  Bchannels none
  output none
  also_merge all
  name MergeKeymix
  xpos 0
  ypos 665
 }
 Dot {
  name Dot14
  note_font_size 41
  xpos 34
  ypos 747
 }
set N11acce90 [stack 0]
push $N1187cdc0
 CopyBBox {
  inputs 2
  name CopyBBoxUnion
  xpos -401
  ypos 743
  disable {{parent.bbox==0?0:1}}
 }
 CopyBBox {
  inputs 2
  name CopyBBoxIntersection
  xpos -401
  ypos 769
  disable {{"parent.bbox==1 ? 0 : 1"}}
 }
 CopyBBox {
  inputs 2
  name CopyBBoxA
  xpos -401
  ypos 795
  disable {{"parent.bbox==2 ? 0 : 1"}}
 }
 CopyBBox {
  inputs 2
  name CopyBBoxB
  xpos -401
  ypos 827
  disable {{"parent.bbox==3 ? 0 : 1"}}
 }
 Crop {
  box {0 0 {parent.width} {parent.height}}
  crop false
  name CopyBBoxFormat
  xpos -401
  ypos 853
  disable {{"parent.bbox==4 ? 0 : 1"}}
  addUserKnob {20 User}
  addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_1 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_2 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_3 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_4 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_5 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_6 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_7 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_8 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_9 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_10 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_11 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
 }
set N11af0a90 [stack 0]
 Transform {
  scale {{parent.adjustBBoxPercent} {parent.adjustBBoxPercent}}
  center {{((input.bbox.r-input.bbox.x)/2)+input.bbox.x} {((input.bbox.t-input.bbox.y)/2)+input.bbox.y}}
  black_outside false
  shutteroffset centred
  name TransformBBoxAdjustPercent
  xpos -516
  ypos 898
 }
push $N11af0a90
 AdjBBox {
  numpixels {{parent.adjustBBoxPixels} {parent.adjustBBoxPixels}}
  name AdjBBoxPixels
  xpos -401
  ypos 901
 }
 Switch {
  inputs 2
  which {{adjustBBoxExtra}}
  name Switch3
  xpos -401
  ypos 940
 }
 Dot {
  name Dot9
  note_font_size 41
  xpos -367
  ypos 993
 }
push $N11acce90
 CopyBBox {
  inputs 2
  name CopyBBox
  xpos 0
  ypos 989
 }
 BlackOutside {
  name BlackOutside1
  xpos 0
  ypos 1015
  disable {{!parent.blackOutside}}
 }
 Output {
  name Output1
  xpos 0
  ypos 1155
 }
push $N119670e0
 NoOp {
  name BBoxResult
  xpos 588
  ypos -223
  addUserKnob {20 User}
  addUserKnob {15 bbox}
  bbox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
 }
end_group
Unpremult {
 name Unpremult6
 selected true
 xpos -1865
 ypos -8910
}
Dot {
 name Dot47
 label "final level,\nfill rest of \nscreen"
 note_font_size 20
 selected true
 xpos -1831
 ypos -8838
}
Dot {
 name Dot18
 note_font_size 41
 selected true
 xpos -1831
 ypos -8748
}
set Na9e02e0 [stack 0]
Dot {
 name Dot19
 note_font_size 41
 selected true
 xpos -583
 ypos -8748
}
Dot {
 name Dot16
 label Cleanplate
 note_font_size 60
 selected true
 xpos -583
 ypos -8385
}
Dot {
 name Dot49
 label Cleanplate
 note_font_size 60
 selected true
 xpos -583
 ypos -7668
}
Dot {
 name Dot53
 label Cleanplate
 note_font_size 60
 selected true
 xpos -583
 ypos -6271
}
add_layer {cleanplate cleanplate.red cleanplate.green cleanplate.blue cleanplate.alpha}
Shuffle {
 black red
 white green
 red2 blue
 green2 black
 out2 cleanplate
 name Shuffle34
 label "\[value in] → \[value out2]"
 selected true
 xpos -5007
 ypos -6281
}
push $Na1d54c0
Remove {
 operation keep
 channels rgb
 name Remove31
 selected true
 xpos -3371
 ypos -9824
}
Dot {
 name Dot13
 note_font_size 41
 selected true
 xpos -3337
 ypos -9523
}
Primatte3 {
 data { 5
    11757 12586 28017
    65552
    0 5
    30234 30234 30234 0
    131.703 115.29 2282.26 72.2175 59.1462 2129.06 939.83 259.302 51.8183 549.229 904.755 276.263 92.3108 578.039 120.609 234.956 234.82 146.119 237.546 743.532 100.669 573.049 43.009 63.2739 116.749 6215.42 168.03 1762.74 3864.11 55.7825 120.53 782.613 3846.16 137.667 121.352 101.794 8606.14 147.362 77.5146 198.503 573.917 81.358 1101.7 522.226 871.183 109.573 110.87 144.688 126.765 33.3146 34.0749 5144.71 4299.28 18477.9 96.8055 90.0376 231.86 11773.6 405.26 440.61 169.247 274.68 242.589 111.212 102.975 105.83
    130560 130560 130560 130560 130560 15703.5 22545.4 21185 130560 130560 26795.2 130560 130560 130560 130560 81679.3 130560 130560 111296 64686.9 112021 18414.1 130560 130560 130560 130560 60434.8 12591.6 24709.3 130560 130560 130560 130560 130560 130560 130560 16795 130560 130560 130560 130560 130560 12274.2 18220.6 15075.8 130560 130560 27876.9 130560 130560 130560 58272.4 87806.9 130560 78064.5 130560 28962.9 23001.1 130560 130560 130560 130560 130560 130560 130560 130560
    130560 130560 130560 130560 130560 15703.5 22545.4 21185 130560 130560 26795.2 130560 130560 130560 130560 81679.3 130560 130560 111296 64686.9 112021 18414.1 130560 130560 130560 130560 60434.8 12591.6 24709.3 130560 130560 130560 130560 130560 130560 130560 16795 130560 130560 130560 130560 130560 12274.2 18220.6 15075.8 130560 130560 27876.9 130560 130560 130560 58272.4 87806.9 130560 78064.5 130560 28962.9 23001.1 130560 130560 130560 130560 130560 130560 130560 130560
    -173008 -2.22551e+14 -2.22551e+14 -1.75797e+08 3.24562e+13 3.24562e+13
    -88728 -2.22551e+14 -2.22551e+14 -3.33563e+07 2.59518e+13 2.59518e+13
    -49917.5 -1.9095e+14 -1.9095e+14 2.99695e+07 1.24769e+13 1.24769e+13
    -275696 -1.62776e+14 -1.62776e+14 5.27411e+07 -2.14449e+12 -2.14449e+12
    -95526 -2.22551e+14 -2.22551e+14 1.29744e+07 1.69562e+13 1.69562e+13
    -48985 -2.22551e+14 -2.22551e+14 3.80106e+07 1.04518e+13 1.04518e+13
    -57891.4 -2.22551e+14 -2.22551e+14 2.42861e+07 -2.59518e+13 -2.59518e+13
    -319741 -1.89714e+14 -1.89714e+14 3.3319e+06 -3.70182e+13 -3.70182e+13
    -1.46426e+06 -4.06321e+14 -4.06321e+14 -6.42384e+08 6.71983e+13 6.71983e+13
    -8.55972e+07 -7.25395e+12 -7.25395e+12 -4.66618e+09 1.27042e+13 1.27042e+13
    -3.9253e+06 -1.98547e+12 -1.98547e+12 2.63799e+08 1.83081e+12 1.83081e+12
    -1.11147e+08 -4.01415e+12 -4.01415e+12 -2.18771e+09 8.80462e+12 8.80462e+12
    -3.71416e+06 -4.06321e+14 -4.06321e+14 8.76061e+08 -4.9151e+13 -4.9151e+13
    -282796 -4.06321e+14 -4.06321e+14 -4.12997e+07 -2.48811e+13 -2.48811e+13
    -20396 -4.06321e+14 -4.06321e+14 -2.03765e+07 -3.23759e+12 -3.23759e+12
    -1.15164e+10 -4.06321e+14 -4.06321e+14 1.17853e+09 -1.03268e+14 -1.03268e+14
    -4.34651e+09 -5.76078e+12 -5.76078e+12 -1.28057e+10 9.10482e+12 9.10482e+12
    -258688 -2.42948e+14 -2.42948e+14 3.95126e+07 8.78112e+13 8.78112e+13
    -65592 -4.06321e+14 -4.06321e+14 -3.43375e+07 2.48811e+13 2.48811e+13
    -2.98885e+07 -8.74202e+11 -8.74202e+11 -8.66012e+08 3.03045e+11 3.03045e+11
    -562448 -4.06321e+14 -4.06321e+14 1.75345e+08 3.90796e+13 3.90796e+13
    -1.70271e+06 -4.06321e+14 -4.06321e+14 6.26216e+07 -6.09506e+13 -6.09506e+13
    -7.9007e+07 -4.06321e+14 -4.06321e+14 1.52156e+10 -9.14682e+13 -9.14682e+13
    -6.56372e+08 -1.55159e+13 -1.55159e+13 3.2503e+10 -6.35202e+12 -6.35202e+12
    -3.37791e+08 -9.2413e+13 -9.2413e+13 -6.93039e+08 1.39767e+14 1.39767e+14
    -4.78643e+06 -1.42796e+13 -1.42796e+13 -4.03005e+08 1.74249e+13 1.74249e+13
    -1.03233e+06 -1.12003e+14 -1.12003e+14 -9.588e+07 3.48023e+13 3.48023e+13
    -2.04677e+08 -1.16868e+12 -1.16868e+12 -2.39029e+08 -1.34758e+11 -1.34758e+11
    -893296 -5.24559e+14 -5.24559e+14 -1.53781e+08 -2.95997e+13 -2.95997e+13
    -1.60356e+06 -5.24559e+14 -5.24559e+14 3.18342e+08 -9.64026e+13 -9.64026e+13
    -93988 -5.24559e+14 -5.24559e+14 5.9775e+07 -6.27891e+13 -6.27891e+13
    -1.29519e+10 -2.34124e+14 -2.34124e+14 -4.53767e+10 -4.78306e+13 -4.78306e+13
    -3.44886e+06 -4.06321e+14 -4.06321e+14 -2.18227e+08 6.80597e+13 6.80597e+13
    -569166 -2.54198e+14 -2.54198e+14 -6.19316e+07 1.15759e+14 1.15759e+14
    -528400 -5.65689e+13 -5.65689e+13 -1.74988e+08 1.30936e+14 1.30936e+14
    -2.1286e+07 -8.34717e+12 -8.34717e+12 -2.10171e+09 1.4745e+13 1.4745e+13
    -596176 -4.06321e+14 -4.06321e+14 8.40006e+07 -6.96482e+12 -6.96482e+12
    -230817 -4.06321e+14 -4.06321e+14 7.04665e+06 4.11041e+11 4.11041e+11
    -13557 -4.06321e+14 -4.06321e+14 -1.20581e+07 -2.85297e+13 -2.85297e+13
    -5.03316e+07 -2.73268e+14 -2.73268e+14 1.43263e+10 -8.80179e+13 -8.80179e+13
    -31228 -2.22551e+14 -2.22551e+14 1.80443e+07 3.12724e+13 3.12724e+13
    -3.22987e+09 -3.32092e+11 -3.32092e+11 -1.44559e+10 3.46322e+11 3.46322e+11
    -4.71444e+08 -7.14508e+11 -7.14508e+11 -2.14529e+10 9.18671e+11 9.18671e+11
    -1.64549e+06 -5.10403e+13 -5.10403e+13 5.42704e+07 2.07275e+13 2.07275e+13
    -1.02509e+08 -2.22551e+14 -2.22551e+14 7.44013e+09 -4.10238e+13 -4.10238e+13
    -220020 -2.22551e+14 -2.22551e+14 -1.17411e+07 -2.43094e+13 -2.43094e+13
    -55078 -2.22551e+14 -2.22551e+14 2.67342e+07 8.80939e+12 8.80939e+12
    -5.45586e+09 -2.22551e+14 -2.22551e+14 1.99278e+10 -5.44912e+13 -5.44912e+13
    -2.29466e+09 -1.35475e+13 -1.35475e+13 -2.18582e+10 2.0952e+13 2.0952e+13
    -2.68691e+06 -2.30801e+13 -2.30801e+13 -2.93389e+08 2.81856e+13 2.81856e+13
    -308272 -4.06321e+14 -4.06321e+14 -5.18663e+07 7.27645e+13 7.27645e+13
    -3.20791e+08 -7.56085e+11 -7.56085e+11 -6.62225e+09 2.06047e+12 2.06047e+12
    -343800 -4.06321e+14 -4.06321e+14 -1.00216e+08 -8.80379e+12 -8.80379e+12
    -4.51419e+07 -4.06321e+14 -4.06321e+14 1.08829e+10 -8.96585e+13 -8.96585e+13
    -1.672e+06 -4.06321e+14 -4.06321e+14 4.73304e+08 -6.27603e+13 -6.27603e+13
    -7.47418e+07 -1.81352e+14 -1.81352e+14 1.88562e+10 -9.12369e+13 -9.12369e+13
    -2.64224e+08 -5.78142e+13 -5.78142e+13 2.05357e+09 8.43729e+13 8.43729e+13
    -247784 -3.13644e+14 -3.13644e+14 6.70985e+07 3.07649e+13 3.07649e+13
    -148368 -5.24559e+14 -5.24559e+14 -7.90006e+07 3.45854e+13 3.45854e+13
    -3.51635e+07 -1.11673e+12 -1.11673e+12 1.67142e+09 1.17381e+12 1.17381e+12
    -2.57304e+06 -5.24559e+14 -5.24559e+14 -9.17211e+06 3.22175e+13 3.22175e+13
    -394416 -5.24559e+14 -5.24559e+14 -5.42436e+07 -5.93409e+13 -5.93409e+13
    -546688 -5.24559e+14 -5.24559e+14 4.73626e+08 -9.98509e+13 -9.98509e+13
    -4.89972e+09 -2.71902e+13 -2.71902e+13 1.48134e+11 2.4441e+13 2.4441e+13
    -2.5618e+06 -2.54198e+14 -2.54198e+14 -1.04936e+08 1.03768e+14 1.03768e+14
    -201818 -4.06321e+14 -4.06321e+14 5.25342e+07 2.85297e+13 2.85297e+13
    -45108 -4.06322e+14 -4.06322e+14 -4.66993e+07 -4.1103e+11 -4.1103e+11
    -2.48883e+06 -7.8946e+12 -7.8946e+12 -5.29195e+08 1.28701e+13 1.28701e+13
    -2.3376e+06 -4.06321e+14 -4.06321e+14 3.09963e+08 3.99409e+13 3.99409e+13
    -223498 -4.06321e+14 -4.06321e+14 7.31205e+07 -1.87645e+13 -1.87645e+13
    -390016 -4.06321e+14 -4.06321e+14 3.14765e+08 -7.54355e+13 -7.54355e+13
    -1.75239e+08 -4.02259e+13 -4.02259e+13 2.96184e+10 -9.17516e+12 -9.17516e+12
    -1.23968e+06 -4.06321e+14 -4.06321e+14 -7.37413e+08 8.53962e+13 8.53962e+13
    -6.75126e+07 -1.7841e+12 -1.7841e+12 6.61983e+09 4.41779e+12 4.41779e+12
    -2.81985e+07 -1.64193e+13 -1.64193e+13 -4.24373e+09 1.39135e+13 1.39135e+13
    -2.41807e+07 -4.45722e+12 -4.45722e+12 -4.99349e+09 4.6435e+11 4.6435e+11
    -3.19968e+06 -4.06321e+14 -4.06321e+14 1.31085e+09 -5.01286e+13 -5.01286e+13
    -1.53757e+06 -4.06321e+14 -4.06321e+14 3.53143e+08 -7.27645e+13 -7.27645e+13
    -69220 -4.06321e+14 -4.06321e+14 -5.92075e+07 -2.14355e+13 -2.14355e+13
    -7.50032e+09 -4.06321e+14 -4.06321e+14 2.5079e+10 -1.0229e+14 -1.0229e+14
    -7.0802e+09 -6.51685e+11 -6.51685e+11 -4.88213e+10 6.56937e+11 6.56937e+11
    -268558 -1.03017e+14 -1.03017e+14 -4.2673e+07 7.70381e+13 7.70381e+13
    -25490 -2.22551e+14 -2.22551e+14 1.22614e+07 2.43094e+13 2.43094e+13
    -2.15065e+08 -3.64106e+11 -3.64106e+11 -9.26604e+09 4.80813e+11 4.80813e+11
    -67472 -2.22551e+14 -2.22551e+14 3.92834e+07 1.57724e+13 1.57724e+13
    -5.0378e+08 -2.22551e+14 -2.22551e+14 2.33334e+10 -4.75282e+13 -4.75282e+13
    -1.11016e+09 -2.22551e+14 -2.22551e+14 3.32117e+10 -4.79868e+13 -4.79868e+13
    -1.34809e+06 -1.10265e+14 -1.10265e+14 1.86729e+08 -4.9724e+13 -4.9724e+13
    -9.88307e+06 -5.24559e+14 -5.24559e+14 -1.68476e+08 1.06099e+14 1.06099e+14
    -1.15611e+06 -7.27994e+13 -7.27994e+13 -1.41131e+08 4.05615e+13 4.05615e+13
    -980442 -1.81738e+13 -1.81738e+13 6.90831e+07 2.48541e+13 2.48541e+13
    -1.00781e+08 -1.4597e+12 -1.4597e+12 2.29401e+09 1.12587e+12 1.12587e+12
    -2.29498e+06 -5.24559e+14 -5.24559e+14 -3.61518e+08 -2.83376e+13 -2.83376e+13
    -309804 -5.24559e+14 -5.24559e+14 -4.70927e+07 -3.45854e+13 -3.45854e+13
    -13865 -5.24559e+14 -5.24559e+14 -1.27731e+07 -3.92958e+13 -3.92958e+13
    -1.0284e+10 -3.52787e+14 -3.52787e+14 -7.83663e+10 -8.20847e+13 -8.20847e+13
    -1.93585e+06 -3.63425e+14 -3.63425e+14 -9.27423e+07 6.22805e+13 6.22805e+13
    -220555 -3.63425e+14 -3.63425e+14 1.51874e+06 4.55258e+13 4.55258e+13
    -78392 -3.1182e+14 -3.1182e+14 -7.74062e+07 -1.10039e+13 -1.10039e+13
    -2.03932e+06 -3.70959e+13 -3.70959e+13 2.23079e+08 6.12195e+13 6.12195e+13
    -724400 -3.63425e+14 -3.63425e+14 -1.4328e+08 2.23541e+13 2.23541e+13
    -139264 -3.63425e+14 -3.63425e+14 9.41002e+06 5.59947e+12 5.59947e+12
    -27318 -3.63425e+14 -3.63425e+14 9.57975e+06 -4.55258e+13 -4.55258e+13
    -1.94705e+07 -2.08354e+14 -2.08354e+14 2.87003e+09 -7.34549e+13 -7.34549e+13
    -311128 -3.63425e+14 -3.63425e+14 -1.32985e+08 6.06356e+13 6.06356e+13
    -5.74384e+08 -1.0002e+12 -1.0002e+12 -4.02646e+10 1.6823e+12 1.6823e+12
    -5.23187e+07 -2.07128e+12 -2.07128e+12 -7.35669e+09 1.98585e+12 1.98585e+12
    -1.77738e+07 -9.62428e+12 -9.62428e+12 3.19403e+09 1.67449e+13 1.67449e+13
    -1.77928e+07 -3.63425e+14 -3.63425e+14 2.32491e+09 -5.82066e+13 -5.82066e+13
    -288718 -3.63425e+14 -3.63425e+14 -2.6594e+07 -4.26996e+13 -4.26996e+13
    -42434 -3.63425e+14 -3.63425e+14 -5.17523e+07 2.77326e+12 2.77326e+12
    -7.2133e+10 -3.63425e+14 -3.63425e+14 -1.86415e+11 -9.28972e+13 -9.28972e+13
    -6.39369e+10 -1.55874e+12 -1.55874e+12 2.07376e+11 2.35973e+12 2.35973e+12
    -322348 -1.00585e+14 -1.00585e+14 6.49868e+07 2.64138e+13 2.64138e+13
    -63157 -3.63425e+14 -3.63425e+14 1.4609e+07 4.26996e+13 4.26996e+13
    -1.81731e+08 -4.64739e+11 -4.64739e+11 6.90731e+09 2.44935e+11 2.44935e+11
    -258224 -3.63425e+14 -3.63425e+14 1.39737e+08 2.07093e+13 2.07093e+13
    -4.00876e+07 -3.63425e+14 -3.63425e+14 7.19011e+09 -7.49612e+13 -7.49612e+13
    -1.00694e+08 -3.63425e+14 -3.63425e+14 1.36334e+10 -7.61426e+13 -7.61426e+13
    -8.5995e+07 -8.03662e+13 -8.03662e+13 3.33733e+09 -3.52808e+13 -3.52808e+13
    -5.72174e+08 -1.06709e+14 -1.06709e+14 -4.20627e+09 1.65952e+14 1.65952e+14
    -550016 -8.03413e+13 -8.03413e+13 -6.2677e+07 1.01651e+14 1.01651e+14
    -478394 -1.2933e+14 -1.2933e+14 2.00402e+07 2.06147e+14 2.06147e+14
    -1.36416e+08 -9.17634e+11 -9.17634e+11 -5.28366e+09 1.40665e+12 1.40665e+12
    -3.06936e+06 -6.05708e+14 -6.05708e+14 9.28682e+07 -1.04378e+13 -1.04378e+13
    -329860 -6.05708e+14 -6.05708e+14 -3.99497e+07 -7.72407e+13 -7.72407e+13
    -39166 -6.05708e+14 -6.05708e+14 2.21804e+07 -8.19511e+13 -8.19511e+13
    -1.11235e+11 -1.81817e+14 -1.81817e+14 -1.17571e+11 -3.81741e+13 -3.81741e+13
    -1 -1 -1 -1
    -1 -1 999999 999999
    -1 -1 -1 -1
    0.05 1.732 1.732
    0.05 1.732 1.732
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
  }

 primEdgedata { 5
    11757 12586 28017
    65552
    0 5
    30234 30234 30234 0
    131.703 115.29 2282.26 72.2175 59.1462 2129.06 939.83 259.302 51.8183 549.229 904.755 276.263 92.3108 578.039 120.609 234.956 234.82 146.119 237.546 743.532 100.669 573.049 43.009 63.2739 116.749 6215.42 168.03 1762.74 3864.11 55.7825 120.53 782.613 3846.16 137.667 121.352 101.794 8606.14 147.362 77.5146 198.503 573.917 81.358 1101.7 522.226 871.183 109.573 110.87 144.688 126.765 33.3146 34.0749 5144.71 4299.28 18477.9 96.8055 90.0376 231.86 11773.6 405.26 440.61 169.247 274.68 242.589 111.212 102.975 105.83
    130560 130560 130560 130560 130560 15703.5 22545.4 21185 130560 130560 26795.2 130560 130560 130560 130560 81679.3 130560 130560 111296 64686.9 112021 18414.1 130560 130560 130560 130560 60434.8 12591.6 24709.3 130560 130560 130560 130560 130560 130560 130560 18167.2 130560 130560 130560 130560 130560 12274.2 18220.6 15075.8 130560 130560 27876.9 130560 130560 130560 58272.4 87806.9 130560 78064.5 130560 28962.9 31419.7 130560 130560 130560 130560 130560 130560 130560 130560
    130560 130560 130560 130560 130560 15703.5 22545.4 21185 130560 130560 26795.2 130560 130560 130560 130560 81679.3 130560 130560 111296 64686.9 112021 18414.1 130560 130560 130560 130560 60434.8 12591.6 24709.3 130560 130560 130560 130560 130560 130560 130560 18167.2 130560 130560 130560 130560 130560 12274.2 18220.6 15075.8 130560 130560 27876.9 130560 130560 130560 58272.4 87806.9 130560 78064.5 130560 28962.9 31419.7 130560 130560 130560 130560 130560 130560 130560 130560
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    -1 -1 -1 -1
    -1 -1 999999 999999
    -1 -1 -1 -1
    0.05 1.732 1.732
    0.05 1.732 1.732
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
  }

 primBodydata { 5
    11757 12586 28017
    65552
    0 5
    30234 30234 30234 0
    1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
    130560 130560 130560 130560 130560 15703.5 22545.4 21185 130560 130560 26795.2 130560 130560 130560 130560 81679.3 130560 130560 111296 64686.9 112021 18414.1 130560 130560 130560 130560 60434.8 12591.6 24709.3 130560 130560 130560 130560 130560 130560 130560 16795 130560 130560 130560 130560 130560 12274.2 18220.6 15075.8 130560 130560 27876.9 130560 130560 130560 58272.4 87806.9 130560 78064.5 130560 28962.9 23001.1 130560 130560 130560 130560 130560 130560 130560 130560
    130560 130560 130560 130560 130560 15703.5 22545.4 21185 130560 130560 26795.2 130560 130560 130560 130560 81679.3 130560 130560 111296 64686.9 112021 18414.1 130560 130560 130560 130560 60434.8 12591.6 24709.3 130560 130560 130560 130560 130560 130560 130560 16795 130560 130560 130560 130560 130560 12274.2 18220.6 15075.8 130560 130560 27876.9 130560 130560 130560 58272.4 87806.9 130560 78064.5 130560 28962.9 23001.1 130560 130560 130560 130560 130560 130560 130560 130560
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    -1 -1 -1 -1
    -1 -1 999999 999999
    -1 -1 -1 -1
    0.05 1.732 1.732
    0.05 1.732 1.732
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
    0.05 0.866 0.866
  }

 crop {0 0 2440 1802}
 "Adjust Lighting" 0
 "Hybrid Matte" 0
 "Fine Tuning" 0
 name Primatte2
 selected true
 xpos -3371
 ypos -9385
}
Shuffle {
 red alpha
 green alpha
 blue alpha
 name Shuffle35
 tile_color 0xffffffff
 selected true
 xpos -3371
 ypos -9341
}
Dot {
 name Dot54
 label "Core\nMatte"
 note_font_size 60
 selected true
 xpos -3337
 ypos -8016
}
Dot {
 name Dot57
 selected true
 xpos -3337
 ypos -7923
}
set Naa56b00 [stack 0]
Dot {
 name Dot58
 note_font_size 41
 selected true
 xpos -3337
 ypos -7223
}
push $Na9e02e0
push $Na1e7300
IBKGizmoV3 {
 inputs 2
 name IBKGizmoV3_3
 xpos -2107
 ypos -8752
}
Shuffle {
 red alpha
 green alpha
 blue alpha
 name Shuffle36
 tile_color 0xffffffff
 selected true
 xpos -2107
 ypos -8700
}
Dot {
 name Dot59
 label "Edge\nMatte"
 note_font_size 60
 selected true
 xpos -2073
 ypos -7456
}
Merge2 {
 inputs 2
 operation screen
 bbox B
 name Merge4
 selected true
 xpos -2107
 ypos -7227
}
Dot {
 name Dot60
 label "Combined\nMatte"
 note_font_size 60
 selected true
 xpos -2073
 ypos -6633
}
Dot {
 name Dot61
 label "Combined\nMatte"
 note_font_size 60
 selected true
 xpos -5014
 ypos -6633
}
push $Na1cbaa0
Remove {
 channels rgba
 name Remove32
 selected true
 xpos -4970
 ypos -10279
}
NoOp {
 name Anchor_217ff93ec8
 help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated Sep 27 2019"
 onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.anchorOnCreate()\n    except:\n        pass"
 knobChanged stamps.anchorKnobChanged()
 autolabel "nuke.thisNode().knob(\"title\").value()"
 tile_color 0xffffff01
 note_font_size 20
 selected true
 xpos -4970
 ypos -10230
 addUserKnob {20 anchor_tab l "Anchor Stamp"}
 addUserKnob {26 identifier -STARTLINE +HIDDEN T anchor}
 addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
 title "GS Utils"
 addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T "GS Utils"}
 addUserKnob {26 prev_name l "" +STARTLINE +HIDDEN T Anchor_217ff93ec8}
 addUserKnob {3 showing l "" +STARTLINE +HIDDEN}
 addUserKnob {1 tags l Tags t "Comma-separated tags you can define for each Anchor, that will help you find it when invoking the Stamp Selector by pressing the Stamps shortkey with nothing selected."}
 tags 2D,
 addUserKnob {26 line1 l "" +STARTLINE}
 addUserKnob {26 stamps_label l Stamps: T " "}
 addUserKnob {22 createStamp l new t "Create a new Stamp for this Anchor." -STARTLINE T stamps.stampCreateWired(nuke.thisNode())}
 addUserKnob {22 selectStamps l select t "Reconnect all of this Anchor's Stamps." -STARTLINE T stamps.wiredSelectSimilar(nuke.thisNode().name())}
 addUserKnob {22 reconnectStamps l reconnect -STARTLINE T stamps.anchorReconnectWired()}
 addUserKnob {22 zoomNext l "zoom next" t "Navigate to this Anchor's next Stamp on the Node Graph." -STARTLINE T stamps.wiredZoomNext(nuke.thisNode().name())}
 addUserKnob {26 line2 l "" +STARTLINE}
 addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
 addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated Sep 27 2019." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.0</big></b></a>"}
}
NoOp {
 name Stamp44
 help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated Sep 27 2019"
 onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
 knobChanged "import stamps; stamps.wiredKnobChanged()"
 autolabel "nuke.thisNode().knob(\"title\").value()"
 tile_color 0x1000001
 note_font "Bitstream Vera Sans"
 note_font_size 20
 selected true
 xpos -5404
 ypos -7022
 hide_input true
 addUserKnob {20 wired_tab l "Wired Stamp"}
 addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
 addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
 addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
 addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
 title "GS Utils"
 addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T "GS Utils"}
 addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
 addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i>creating GS channel,Advanced Keying Template</i>"}
 addUserKnob {26 line1 l "" +STARTLINE}
 addUserKnob {26 anchor_label l Anchor: T " "}
 addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
 addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
 addUserKnob {26 stamps_label l Stamps: T " "}
 addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
 addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
 addUserKnob {26 space_1 l "" +STARTLINE T " "}
 addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
 addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
 addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
 addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
 addUserKnob {26 space_2 l "" +STARTLINE T " "}
 addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
 addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
 addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
 addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
 addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
 addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
 addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
 addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
 addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
 addUserKnob {1 anchor l Anchor}
 anchor Anchor_217ff93ec8
 addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
 addUserKnob {20 advanced_reconnection_1 l "Advanced Reconnection" +INVISIBLE n -1}
 addUserKnob {26 line2 l "" +STARTLINE}
 addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
 addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated Sep 27 2019." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.0</big></b></a>"}
}
Dot {
 name Dot10
 note_font_size 41
 selected true
 xpos -5370
 ypos -6944
}
Dot {
 name Dot286
 note_font_size 41
 selected true
 xpos -5237
 ypos -6944
}
set Nab09e70 [stack 0]
Dot {
 name Dot287
 note_font_size 41
 selected true
 xpos -5237
 ypos -6894
}
push $Nab09e70
push $Naa56b00
Dot {
 name Dot288
 note_font_size 41
 selected true
 xpos -3722
 ypos -7923
}
Group {
 name ExponBlurSimple1
 onCreate "n = nuke.thisNode()\nn.knob('size').setRange(-100, 100)\nn.knob('adjustBBoxPixels').setRange(0, 400)\nn.knob('adjustBBoxPercent').setRange(1, 2)\nn.knob('safeBBoxPixels').setRange(0, 400)\nn.knob('safeBBoxPercent').setRange(1, 2)"
 knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == \"includeOriginal\":\n    if n.knob('includeOriginal').getValue() == 1:\n        merge = nuke.toNode(\"Merge1\")\n        original = nuke.toNode('Original')\n        AvgMult = nuke.toNode(\"AverageMult\")\n        steps = int(n.knob('steps').getValue())\n        merge.setInput(steps+1, original)\n        AvgMult\['whitepoint'].setValue(2 if steps<2 else steps+1)\n        \n    else:\n        merge.setInput(steps+1, None)\n        AvgMult\['whitepoint'].setValue(2 if steps<2 else steps)\n        \nelif k.name() == \"steps\":\n    \n    s = int(k.value())\n    if s<1:\n        k.setValue(1)\n    else:\n        start = nuke.toNode(\"Start\")\n        end   = nuke.toNode(\"End\")\n        b1    = nuke.toNode(\"Blur1\")\n        merge = nuke.toNode(\"Merge1\")\n        AvgMult = nuke.toNode(\"AverageMult\")\n        \n        b1x   = b1.xpos()\n        b1y   = b1.ypos()\n        b1n   = b1.name()\n        \n        steps = int(n.knob('steps').getValue())\n        size  = n.knob('size').getValue()\n        mult  = n.knob('mult').getValue()\n        \n        #b1.setInput(0, start)\n        for i in range(1,merge.inputs()):\n            merge.setInput(i,None)\n        merge.setInput(0, b1)\n        \[nuke.delete(i) for i in nuke.allNodes() if i.xpos()>start.xpos()]\n        for i in range(1,steps):\n            # Blur\n            b = nuke.nodes.Blur()\n            b.setXYpos(b1x+i*100,b1y)\n            b.setInput(0,start)\n            b\[\"channels\"].setValue(\"rgba\")\n            b\[\"crop\"].setValue(0)\n            b\[\"size\"].setValue(0, 1)\n            b\[\"size\"].setExpression(\"(Blur1.size)*(mult)**%s\"%(i))\n            b\[\"label\"].setValue(\"\[value size]\")\n            merge.setInput(i if i<2 else i+1, b)\n            AvgMult\['whitepoint'].setValue(i if i<2 else i+1)\n            \n        if n.knob('includeOriginal').getValue() == 1:\n            merge = nuke.toNode(\"Merge1\")\n            original = nuke.toNode('Original')\n            AvgMult = nuke.toNode(\"AverageMult\")\n            steps = int(n.knob('steps').getValue())\n            merge.setInput(steps+1, original)\n            AvgMult\['whitepoint'].setValue(2 if steps<2 else steps+1)\n            \nelif k.name() == \"output2\":\n    if n.knob(\"output2\").getValue() == 4:\n        n.knob('AvgMaxOriginal').setVisible(True)\n    else:\n        n.knob('AvgMaxOriginal').setVisible(False)\n        \nelif k.name() == \"safeBBox\":\n    if n.knob(\"safeBBox\").getValue() == 0:\n        n.knob('safeBBoxText').setVisible(False)\n        n.knob('safetyBBoxMethod').setVisible(False)\n        n.knob('safeBBoxPixels').setVisible(False)\n        n.knob('safeBBoxPercent').setVisible(False)\n        \n    elif n.knob(\"safeBBox\").getValue() == 1:\n        n.knob('safetyBBoxMethod').setVisible(True)\n        n.knob('safeBBoxText').setVisible(True)\n        if n.knob('safetyBBoxMethod').value() == \"pixels\":\n            n.knob('safeBBoxPixels').setVisible(True)\n            n.knob('safeBBoxPercent').setVisible(False)\n        elif n.knob('safetyBBoxMethod').value() == \"percent\":\n            n.knob('safeBBoxPixels').setVisible(False)\n            n.knob('safeBBoxPercent').setVisible(True)\n            \nelif k.name() == \"safetyBBoxMethod\":\n    if n.knob(\"safetyBBoxMethod\").value() == \"pixels\":\n        n.knob('safeBBoxPixels').setVisible(True)\n        n.knob('safeBBoxPercent').setVisible(False)\n    elif n.knob(\"safetyBBoxMethod\").value() == \"percent\":\n        n.knob('safeBBoxPixels').setVisible(False)\n        n.knob('safeBBoxPercent').setVisible(True)\n        \nelif k.name() == \"adjustBBoxExtra\":\n    if n.knob(\"adjustBBoxExtra\").value() == \"pixels\":\n        n.knob('adjustBBoxPixels').setVisible(True)\n        n.knob('adjustBBoxPercent').setVisible(False)\n    elif n.knob(\"adjustBBoxExtra\").value() == \"percent\":\n        n.knob('adjustBBoxPixels').setVisible(False)\n        n.knob('adjustBBoxPercent').setVisible(True)\n"
 tile_color 0xcc804eff
 label "(\[value output2])"
 note_font "Verdana Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
 note_font_color 0xffffffff
 selected true
 xpos -3756
 ypos -7684
 addUserKnob {20 ExponBlurSimple}
 addUserKnob {41 channels T Shuffle1.in}
 addUserKnob {41 maskChannelMask_1 l area T Multiply1.maskChannelMask}
 addUserKnob {41 inject_1 l inject -STARTLINE T Multiply1.inject}
 addUserKnob {41 invert_mask_1 l invert -STARTLINE T Multiply1.invert_mask}
 addUserKnob {41 fringe_1 l fringe -STARTLINE T Multiply1.fringe}
 addUserKnob {26 ""}
 addUserKnob {4 output2 l Operation: M {Screen Plus Over Hypot Average Max Min "" "" "" "" ""}}
 addUserKnob {3 steps l "  Steps" -STARTLINE}
 steps 4
 addUserKnob {3 mergeNumber -STARTLINE +INVISIBLE}
 mergeNumber {{"output2 == 0 ? 25 : output2 == 1 ? 24 : output2 == 2 ? 22 : output2 == 3 ? 13 : output2 == 4 ? 24 : output2 == 5 ? 17 : 18"}}
 addUserKnob {26 text l " " -STARTLINE T " "}
 addUserKnob {6 includeOriginal l "Include Original?" -STARTLINE}
 includeOriginal true
 addUserKnob {6 AvgMaxOriginal l "Use Max of Average and Original" +HIDDEN +STARTLINE}
 addUserKnob {14 size l Size R -100 100}
 size -3
 addUserKnob {7 mult l Multiplier R 1 8}
 mult 3
 addUserKnob {26 text_1 l " " T " "}
 addUserKnob {14 postBlur l "Post Blur" R 0 100}
 addUserKnob {26 ""}
 addUserKnob {41 maskChannelMask l mask T MergeKeymix.maskChannelMask}
 addUserKnob {41 inject -STARTLINE T MergeKeymix.inject}
 addUserKnob {41 invert_mask l invert -STARTLINE T MergeKeymix.invert_mask}
 addUserKnob {41 fringe -STARTLINE T MergeKeymix.fringe}
 addUserKnob {4 bbox l BBox: M {union intersectionMask A B "input format" "" "" "" "" "" "" "" ""}}
 addUserKnob {6 blackOutside l "Black Outside" -STARTLINE}
 addUserKnob {6 safeBBox l "Safe BBox" t "If the output BBox is larger than the input format and the input box combined. the result will be max of the input/format bbox plus a safety \"buffer\" in pixels or percent \n\nTurning off might make your BBox grow exponentially with high blur values" -STARTLINE}
 safeBBox true
 addUserKnob {26 safeBBoxText l " " T " "}
 addUserKnob {4 safetyBBoxMethod l "Safe BBox Buffer" -STARTLINE M {pixels percent "" "" "" "" "" "" "" "" "" "" "" "" ""}}
 safetyBBoxMethod percent
 addUserKnob {14 safeBBoxPixels l "" -STARTLINE +HIDDEN R 0 400}
 safeBBoxPixels 100
 addUserKnob {14 safeBBoxPercent l "" -STARTLINE R 1 2}
 safeBBoxPercent 1.1
 addUserKnob {26 text_3 l " " T " "}
 addUserKnob {4 adjustBBoxExtra l "Extra BBox Adjust" -STARTLINE M {pixels percent "" "" "" "" "" "" "" "" "" "" "" "" ""}}
 addUserKnob {14 adjustBBoxPixels l "" -STARTLINE R 0 400}
 addUserKnob {14 adjustBBoxPercent l "" -STARTLINE +HIDDEN R 1 2}
 adjustBBoxPercent 1
 addUserKnob {41 mix T MergeKeymix.mix}
 addUserKnob {20 info l Info}
 addUserKnob {26 creator l Creator: T "Tony Lyons"}
 addUserKnob {26 desc l Description: t "Add description and tooltip for gizmo" T ExponBlurSimple}
 addUserKnob {26 ver l Version: T v02}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x535e5a00
  label "BBox Management"
  note_font_size 30
  note_font_color 0xffffffff
  xpos -529
  ypos 492
  bdwidth 341
  bdheight 525
 }
 Input {
  inputs 0
  name Inputimg
  xpos 0
  ypos -969
 }
 Dot {
  name Dot16
  note_font_size 41
  xpos 34
  ypos -802
 }
set Nfc588c0 [stack 0]
 Dot {
  name Dot2
  note_font_size 41
  xpos -367
  ypos -802
 }
 Dot {
  name Dot18
  label B
  note_font_size 41
  xpos -367
  ypos 434
 }
 Dot {
  name Dot11
  note_font_size 41
  xpos -367
  ypos 623
 }
set Nfc35f80 [stack 0]
 Dot {
  name Dot3
  note_font_size 41
  xpos -367
  ypos 675
 }
set Nfc3c980 [stack 0]
 Dot {
  name Dot8
  note_font_size 41
  xpos -463
  ypos 675
 }
 Dot {
  name Dot15
  note_font_size 41
  xpos -463
  ypos 831
 }
push $Nfc588c0
 Dot {
  name Dot1
  note_font_size 41
  xpos 461
  ypos -802
 }
 Shuffle {
  name Shuffle1
  label "\[value in]"
  xpos 427
  ypos -756
 }
 Remove {
  operation keep
  channels rgba
  name Remove1
  xpos 427
  ypos -718
 }
 Dot {
  name Dot21
  note_font_size 41
  xpos 461
  ypos -597
 }
set Nfcc78c0 [stack 0]
 Invert {
  channels rgba
  name Invert1
  xpos 695
  ypos -601
  disable {{"parent.size < 0 ? 0 : 1"}}
 }
set Nfcd7810 [stack 0]
 Dot {
  name Dot4
  note_font_size 41
  xpos 540
  ypos -543
 }
 NoOp {
  name Original
  xpos 506
  ypos -327
 }
set N102b18c0 [stack 0]
 Dot {
  name Dot5
  note_font_size 41
  xpos 540
  ypos 14
 }
 Crop {
  inputs 0
  box {{input.format.x} {input.format.y} {input.format.r} {input.format.t}}
  reformat true
  crop false
  name Crop1
  xpos 210
  ypos -750
  addUserKnob {20 User}
  addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
 }
 AddChannels {
  channels rgba
  name AddChannels2
  xpos 210
  ypos -724
 }
push $Nfc588c0
 Merge2 {
  inputs 2
  name Merge3
  label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
  xpos 83
  ypos -671
 }
 NoOp {
  name BBoxInput
  xpos 83
  ypos -628
  addUserKnob {20 User}
  addUserKnob {15 bbox}
  bbox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
 }
push $N102b18c0
 Input {
  inputs 0
  name Inputarea
  xpos 289
  ypos -638
  number 2
 }
 AddChannels {
  channels alpha
  color 1
  name AddChannels1
  xpos 289
  ypos -580
 }
 Invert {
  channels rgba
  name Invert3
  xpos 289
  ypos -503
 }
push $Nfcd7810
 Multiply {
  inputs 1+1
  channels rgba
  value 0
  name Multiply1
  label "\[value value]"
  xpos 695
  ypos -509
 }
 NoOp {
  name Start
  xpos 695
  ypos -450
 }
set N10a831e0 [stack 0]
 Blur {
  channels rgba
  size {{(Blur1.size)*(mult)**3} {(Blur1.size)*(mult)**3}}
  crop false
  name Blur4
  label "\[value size]"
  xpos 995
  ypos -370
 }
push $N10a831e0
 Blur {
  channels rgba
  size {{(Blur1.size)*(mult)**2} {(Blur1.size)*(mult)**2}}
  crop false
  name Blur3
  label "\[value size]"
  xpos 895
  ypos -370
 }
push 0
push $N10a831e0
 Blur {
  channels rgba
  size {{(Blur1.size)*(mult)**1} {(Blur1.size)*(mult)**1}}
  crop false
  name Blur2
  label "\[value size]"
  xpos 795
  ypos -370
 }
push $N10a831e0
 Blur {
  channels rgba
  size {{parent.size.w} {parent.size.h}}
  name Blur1
  label "\[value size]"
  xpos 695
  ypos -370
 }
 Merge2 {
  inputs 5+1
  operation {{parent.mergeNumber}}
  name Merge1
  label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
  xpos 695
  ypos -256
 }
 NoOp {
  name End
  xpos 695
  ypos -230
 }
 Dot {
  name Dot22
  xpos 729
  ypos -171
 }
set N10ad4020 [stack 0]
 CopyBBox {
  inputs 2
  name CopyBBox1
  xpos 585
  ypos -175
 }
 Group {
  name BBoxToFormat
  onCreate "n = nuke.thisNode()\ninputFormat = n.knob(\"inputFormat\")\ninputBBox = n.knob(\"inputBBox\")\ncrop = nuke.toNode(\"Crop6\")\ncropb = crop.knob('box')\noutputBBox = n.knob('outputBBox')\noutputBBoxCenter = n.knob(\"outputBBoxCenter\")\n\ninputFormat.setFlag(0x0000000000008000)\ninputBBox.setFlag(0x0000000000008000)\ncropb.setFlag(0x0000000000008000)\noutputBBox.setFlag(0x0000000000008000)\noutputBBoxCenter.setFlag(0x0000000000008000)\n\nn = nuke.thisNode()\nn.knob(\"overscan\").setRange(0,400)\nn.knob(\"overscanPercent\").setRange(1,4)"
  tile_color 0xa57aaaff
  note_font "Verdana Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
  note_font_color 0xffffffff
  xpos 585
  ypos -151
  addUserKnob {20 CropBBox}
  addUserKnob {4 type l Type +INVISIBLE M {"To Format" "To BBox"}}
  addUserKnob {41 intersect T Crop6.intersect}
  addUserKnob {6 blackOutside l "Black Outside" -STARTLINE}
  addUserKnob {4 overscanType l "Overscan Type:" M {Pixels Percentage}}
  overscanType {{parent.safetyBBoxMethod}}
  addUserKnob {14 overscan l Overscan R 0 400}
  overscan {{parent.safeBBoxPixels} {parent.safeBBoxPixels}}
  addUserKnob {14 overscanPercent l "Overscan Percent" R 1 4}
  overscanPercent {{parent.safeBBoxPercent} {parent.safeBBoxPercent}}
  addUserKnob {20 inputBbox l "BBox Data" n 1}
  addUserKnob {15 inputFormat l "Input Format"}
  inputFormat {0 0 {input.width} {input.height}}
  addUserKnob {15 inputBBox l "Input BBox"}
  inputBBox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
  addUserKnob {12 outputBBoxCenter l OutputBBoxCenter}
  outputBBoxCenter {{OutputBBox1.outputBBoxCenter.w} {OutputBBox1.outputBBoxCenter.h}}
  addUserKnob {15 outputBBox l "Output BBox"}
  outputBBox {{OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox}}
  addUserKnob {20 endGroup n -1}
  addUserKnob {20 info_1 l Info}
  addUserKnob {26 creator l Creator: T "<b><big>Tony Lyons"}
  addUserKnob {26 desc l Description: t "crop to inputformat\n\ndisplays values of input bbox" T CropBBox}
  addUserKnob {26 ver l Version: T v02}
 }
  Input {
   inputs 0
   name Input
   xpos 261
   ypos 394
  }
  Dot {
   name Dot2
   note_font_size 41
   xpos 295
   ypos 462
  }
set N10a6edb0 [stack 0]
  Dot {
   name Dot1
   note_font_size 41
   xpos -160
   ypos 462
  }
set N10a73900 [stack 0]
push $N10a6edb0
  Crop {
   box {{parent.inputBBox} {parent.inputBBox} {parent.inputBBox} {parent.inputBBox}}
   crop {{parent.blackOutside}}
   name Crop6
   xpos 261
   ypos 510
   addUserKnob {20 User}
   addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_1 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_2 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_3 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_4 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_5 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_6 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_7 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_8 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_9 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_10 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_11 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_12 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_13 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_14 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_15 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_16 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_17 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_18 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_19 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  }
set N10aecba0 [stack 0]
  Remove {
   operation keep
   channels none
   name Remove1
   xpos 120
   ypos 504
  }
set N10afae10 [stack 0]
  Transform {
   scale {{parent.overscanPercent} {parent.overscanPercent}}
   center {{((input.bbox.r-input.bbox.x)/2)+input.bbox.x} {((input.bbox.t-input.bbox.y)/2)+input.bbox.y}}
   shutteroffset centred
   name Transform1
   selected true
   xpos 120
   ypos 553
  }
push $N10afae10
  AdjBBox {
   numpixels {{parent.overscan} {parent.overscan}}
   name AdjBBox1
   xpos -5
   ypos 510
  }
  Switch {
   inputs 2
   which {{overscanType}}
   name Switch2
   label "\[value which]"
   xpos -5
   ypos 549
  }
  Merge2 {
   inputs 2
   bbox intersection
   Achannels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
   Bchannels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
   output {-rgba.red -rgba.green -rgba.blue rgba.alpha}
   name Merge1
   xpos -5
   ypos 647
   disable {{!parent.Crop6.intersect}}
  }
push $N10a73900
  CopyBBox {
   inputs 2
   name CopyBBox1
   xpos -194
   ypos 653
  }
  BlackOutside {
   name BlackOutside1
   xpos -194
   ypos 692
   disable {{!parent.blackOutside}}
  }
  Dot {
   name Dot4
   note_font_size 41
   xpos -160
   ypos 769
  }
push $N10aecba0
  Switch {
   inputs 2
   which {{"overscanType == 0 ? overscan.w != 0 || overscan.h != 0 : overscanPercent.w != 1 || overscanPercent.h != 1 ? 1 : 0"}}
   name Switch1
   label "\[value which]"
   xpos 261
   ypos 759
  }
set N10b46b90 [stack 0]
  Output {
   name Output1
   xpos 261
   ypos 921
  }
push $N10b46b90
  NoOp {
   name OutputBBox1
   xpos 378
   ypos 821
   addUserKnob {20 User}
   addUserKnob {15 OutputBBox l "Output BBox"}
   OutputBBox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
   addUserKnob {14 outputBBoxCenter l "Output BBox Center" R 0 100}
   outputBBoxCenter {{OutputBBox.x+(OutputBBox.r-OutputBBox.x)/2} {OutputBBox.y+(OutputBBox.t-OutputBBox.y)/2}}
  }
 end_group
push $N10ad4020
 Merge2 {
  inputs 2
  bbox intersection
  name Merge4
  xpos 585
  ypos -127
 }
push $N10ad4020
 CopyBBox {
  inputs 2
  name CopyBBox2
  xpos 585
  ypos -101
 }
push $N10ad4020
 Switch {
  inputs 2
  which {{"parent.safeBBox && ((BBoxResult.bbox.x < BBoxInput.bbox.x || BBoxResult.bbox.y < BBoxInput.bbox.y || BBoxResult.bbox.r > BBoxInput.bbox.r || BBoxResult.bbox.t > BBoxInput.bbox.t))"}}
  name Switch2
  label "\[value which]"
  xpos 695
  ypos -106
 }
 Grade {
  channels rgba
  whitepoint 5
  black_clamp false
  name AverageMult
  xpos 695
  ypos -37
  disable {{"output2 == 4 ? 0 : 1"}}
 }
 Merge2 {
  inputs 2
  operation max
  name Merge2
  label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
  xpos 695
  ypos 10
  disable {{"output2 == 4 && includeOriginal == 1 && AvgMaxOriginal == 1 ? 0 : 1"}}
 }
 Blur {
  channels rgba
  size {{postBlur} {postBlur}}
  name BlurOriginal
  label "\[value size]"
  xpos 695
  ypos 59
 }
 Invert {
  channels rgba
  name Invert2
  xpos 695
  ypos 97
  disable {{"parent.size < 0 ? 0 : 1"}}
 }
push $Nfcc78c0
 Switch {
  inputs 2
  which {{"parent.size == 0 ? 0 : 1"}}
  name Switch1
  label "\[value which]"
  xpos 427
  ypos 93
 }
push $Nfc588c0
 ShuffleCopy {
  inputs 2
  in2 none
  black red
  white green
  red2 blue
  green2 alpha
  out none
  out2 {{{parent.Shuffle1.in}}}
  name ShuffleCopy1
  xpos 0
  ypos 97
 }
 Dot {
  name Dot17
  label A
  note_font_size 41
  xpos 34
  ypos 455
 }
 Dot {
  name Dot7
  note_font_size 41
  xpos 34
  ypos 585
 }
set N10bd14d0 [stack 0]
 Dot {
  name Dot12
  note_font_size 41
  xpos -260
  ypos 585
 }
 Dot {
  name Dot13
  note_font_size 41
  xpos -260
  ypos 799
 }
push $Nfc35f80
 Input {
  inputs 0
  name Inputmask
  xpos 346
  ypos 325
  number 1
 }
 Dot {
  name Dot19
  label Mask
  note_font_size 41
  xpos 380
  ypos 438
 }
set N10be4490 [stack 0]
 Dot {
  name Dot20
  note_font_size 41
  xpos 270
  ypos 438
 }
push $N10bd14d0
 Merge2 {
  inputs 2
  bbox intersection
  Achannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
  Bchannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
  output {rgba.red -rgba.green -rgba.blue rgba.alpha}
  name MergeIntersection
  xpos 236
  ypos 575
  disable {{"!\[exists parent.input1]"}}
 }
 Merge2 {
  inputs 2
  Achannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
  Bchannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
  output {rgba.red -rgba.green -rgba.blue rgba.alpha}
  name MergeUnion
  xpos 236
  ypos 613
  disable {{"!\[exists parent.input1]"}}
 }
 Dot {
  name Dot6
  label "intersection\nof (Mask and A) + B"
  note_font_size 14
  note_font_color 0xffffffff
  xpos 270
  ypos 773
 }
push $N10be4490
 Dot {
  name Dot10
  note_font_size 41
  xpos 380
  ypos 675
 }
push $N10bd14d0
push $Nfc3c980
 Merge2 {
  inputs 2+1
  operation copy
  Achannels none
  Bchannels none
  output none
  also_merge all
  name MergeKeymix
  xpos 0
  ypos 665
 }
 Dot {
  name Dot14
  note_font_size 41
  xpos 34
  ypos 747
 }
set N10c28460 [stack 0]
push $Nfc3c980
 CopyBBox {
  inputs 2
  name CopyBBoxUnion
  xpos -401
  ypos 743
  disable {{parent.bbox==0?0:1}}
 }
 CopyBBox {
  inputs 2
  name CopyBBoxIntersection
  xpos -401
  ypos 769
  disable {{"parent.bbox==1 ? 0 : 1"}}
 }
 CopyBBox {
  inputs 2
  name CopyBBoxA
  xpos -401
  ypos 795
  disable {{"parent.bbox==2 ? 0 : 1"}}
 }
 CopyBBox {
  inputs 2
  name CopyBBoxB
  xpos -401
  ypos 827
  disable {{"parent.bbox==3 ? 0 : 1"}}
 }
 Crop {
  box {0 0 {parent.width} {parent.height}}
  crop false
  name CopyBBoxFormat
  xpos -401
  ypos 853
  disable {{"parent.bbox==4 ? 0 : 1"}}
  addUserKnob {20 User}
  addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_1 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_2 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_3 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_4 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_5 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_6 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_7 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_8 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_9 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_10 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_11 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
 }
set N10c4c140 [stack 0]
 Transform {
  scale {{parent.adjustBBoxPercent} {parent.adjustBBoxPercent}}
  center {{((input.bbox.r-input.bbox.x)/2)+input.bbox.x} {((input.bbox.t-input.bbox.y)/2)+input.bbox.y}}
  black_outside false
  shutteroffset centred
  name TransformBBoxAdjustPercent
  xpos -516
  ypos 898
 }
push $N10c4c140
 AdjBBox {
  numpixels {{parent.adjustBBoxPixels} {parent.adjustBBoxPixels}}
  name AdjBBoxPixels
  xpos -401
  ypos 901
 }
 Switch {
  inputs 2
  which {{adjustBBoxExtra}}
  name Switch3
  xpos -401
  ypos 940
 }
 Dot {
  name Dot9
  note_font_size 41
  xpos -367
  ypos 993
 }
push $N10c28460
 CopyBBox {
  inputs 2
  name CopyBBox
  xpos 0
  ypos 989
 }
 BlackOutside {
  name BlackOutside1
  xpos 0
  ypos 1015
  disable {{!parent.blackOutside}}
 }
 Output {
  name Output1
  xpos 0
  ypos 1155
 }
push $N10ad4020
 NoOp {
  name BBoxResult
  xpos 588
  ypos -223
  addUserKnob {20 User}
  addUserKnob {15 bbox}
  bbox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
 }
end_group
Dot {
 name Dot289
 note_font_size 41
 selected true
 xpos -3722
 ypos -7516
}
Dot {
 name Dot290
 label "Core\nMatte"
 note_font_size 60
 selected true
 xpos -4793
 ypos -7516
}
Dot {
 name Dot291
 note_font_size 41
 selected true
 xpos -4903
 ypos -7516
}
set Nad081c0 [stack 0]
push $Na1d0700
Dot {
 name Dot67
 selected true
 xpos -6781
 ypos -9945
}
Remove {
 operation keep
 channels rgb
 name Remove33
 selected true
 xpos -6815
 ypos -9824
}
Dot {
 name Dot292
 selected true
 xpos -6781
 ypos -9462
}
set Nad1a470 [stack 0]
Group {
 name apDespill1
 help "apDespill v1.0 by Adrian Pueyo\n\nGizmo to despill an image, with options to despill any hue (and not only the primaries), select different algorithms for des/respilling, and protect tones from the despill.\n\nIf you just want a basic despill, its default values should already be enough and the tool will avoid any extra calculations.\n\nadrianpueyo.com, 2014-2017"
 onCreate "n = nuke.thisNode()\nn\['tolerance'].setRange(0,2)\nn\['prot1_tolerance'].setFlag(0x00000004)\nn\['prot1_effect'].setFlag(0x00000004)"
 knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"color\":\n    if k.getValue() == 0:\n        n\[\"custom_weight\"].setLabel(\"green - blue\")\n    elif k.getValue() == 1:\n        n\[\"custom_weight\"].setLabel(\"red - blue\")\n    elif k.getValue() == 2:\n        n\[\"custom_weight\"].setLabel(\"red - green\")\n    n\[\"pick\"].setVisible(k.getValue() == 3)\nelif k.name() == \"mode\":\n    n\[\"custom_weight\"].setVisible(n\[\"mode\"].getValue()==3)\nelif k.name() in \[\"out\",\"output_alpha\"]:\n    n\[\"respill_math\"].setEnabled(n\[\"out\"].getValue()==0 or n\[\"output_alpha\"].getValue()==1)\n    n\[\"respill_color\"].setEnabled(n\[\"out\"].getValue()==0)\nelif k.name() == \"prot1_activate\":\n    protA = n\[\"prot1_activate\"].value()\n    n\[\"prot1_preview\"].setEnabled(protA)\n    n\[\"prot1\"].setVisible(protA)\n    n\[\"prot1_tolerance\"].setVisible(protA)\n    n\[\"prot1_falloff\"].setVisible(protA)\n    n\[\"prot1_effect\"].setVisible(protA)"
 tile_color 0x8b8b8bff
 label "BLB DRE seq"
 selected true
 xpos -6815
 ypos -9263
 addUserKnob {20 apDespill}
 addUserKnob {6 pick_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {41 "Local GPU: " T apDespillKernel.gpuName}
 addUserKnob {41 "Use GPU if Available" T apDespillKernel.useGPUIfAvailable}
 addUserKnob {41 vectorize l "Vectorize on CPU" -STARTLINE T apDespillKernel.vectorize}
 addUserKnob {26 ""}
 addUserKnob {4 color t "Select a primary as a starting point, or custom to show RGB controls to select any color." M {red green blue custom ""}}
 color blue
 addUserKnob {18 pick +HIDDEN}
 pick {0 0 0}
 addUserKnob {6 pick_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 pick_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 pick_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 pick_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 pick_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 pick_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 pick_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 pick_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 pick_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 pick_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 pick_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 pick_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 dfg_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {4 out l output t "Quick switch to output the despilled image or the substracted one." M {despill spill}}
 addUserKnob {6 output_alpha l "output spill matte in alpha" t "Output the spill luminance in the alpha channel." -STARTLINE}
 output_alpha true
 addUserKnob {4 mode l "despill math" t "average = avg of other two channels\nmaximum = max of other two channels\nminimum = min of other two channels\ncustom = select custom weights" M {average maximum minimum custom}}
 addUserKnob {4 logLin l "Colorspace Log/Lin" -STARTLINE +INVISIBLE M {Log Lin ""}}
 logLin Lin
 addUserKnob {6 logspace l "Log Space" -STARTLINE}
 logspace true
 addUserKnob {7 custom_weight l "red - green" t "-1 = only capped by the first channel\n0 = capped by avg of both\n1 = only capped by the second channel" -STARTLINE +HIDDEN R -1 1}
 addUserKnob {41 colorspace_out l colorspace T Colorspace1.colorspace_out}
 addUserKnob {41 illuminant_out l "" -STARTLINE T Colorspace1.illuminant_out}
 addUserKnob {41 primary_out l "" -STARTLINE T Colorspace1.primary_out}
 addUserKnob {26 text l " " T " "}
 addUserKnob {7 hue_offset l "hue offset" t "Rotate the despill vectors to despill an arbitrary tone other than the primaries.\nNote: A rotation of +-120 degrees is the same as selecting another color channel." R -180 180}
 hue_offset -1.2
 addUserKnob {7 tolerance t "Use this to multiply the hue tolerance (the limiter value). You can move it all the way down to 0 to completely remove a hue from your image." R 0 2}
 tolerance 1.05
 addUserKnob {6 prot1_activate l "protect tones" t "Enable controls to select tones to protect from despilling." +STARTLINE}
 addUserKnob {6 prot1_preview l preview t "Output the protected tones." -STARTLINE +DISABLED}
 addUserKnob {18 prot1 l protect t "Pick the central hue to protect.\n(ctrl/cmd+alt+click)" +HIDDEN}
 prot1 {0 0 0}
 addUserKnob {6 prot1_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 prot1_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 prot1_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 prot1_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 prot1_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 prot1_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 prot1_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 prot1_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 prot1_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 prot1_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 prot1_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 prot1_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {7 prot1_tolerance l tolerance t "Amount of hues to include in the selection." +HIDDEN}
 prot1_tolerance 0.2
 addUserKnob {7 prot1_falloff l falloff t "Falloff for the hue selection. A higher falloff will make hues apart from the picked one lose weight more quickly." +HIDDEN R 0 4}
 prot1_falloff 2
 addUserKnob {7 prot1_effect l effect t "Multiplier for the hue protection, and for the spill limit value." +HIDDEN R 0 10}
 prot1_effect 1
 addUserKnob {26 respill_divider l "" +STARTLINE}
 addUserKnob {4 respill_math l "respill math" t "Settings for the way of desaturating the spill before adding it back." M {"Rec 709" "Ccir 601" Average Maximum "" ""}}
 addUserKnob {18 respill_color l "respill color" t "RGB multiplier for the desaturated spill when adding it back.\n\nNote: if used on non-degrained plates (which should be avoided anyway), any value other than 1 here will most likely produce grain artifacts." R 0 4}
 respill_color -3.5
 addUserKnob {6 respill_color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 respill_color_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 respill_color_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 respill_color_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 respill_color_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 respill_color_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 respill_color_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 respill_color_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 respill_color_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 respill_color_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 respill_color_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 respill_color_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 ""}
 addUserKnob {41 maskChannelMask l mask T Merge.maskChannelMask}
 addUserKnob {41 inject -STARTLINE T Merge.inject}
 addUserKnob {41 invert_mask l invert -STARTLINE T Merge.invert_mask}
 addUserKnob {41 fringe -STARTLINE T Merge.fringe}
 addUserKnob {41 mix T Merge.mix}
 addUserKnob {26 version_author l "" t "apDespill v1.0\n14 March, 2017" +STARTLINE T "<span style=\"color:#666\"><br/><b>apDespill v1.0</b> - <a href=\"http://www.adrianpueyo.com\" style=\"color:#666;text-decoration: none;\">adrianpueyo.com</a>, 2014-2017</span>"}
 addUserKnob {20 GPU_Settings l "GPU Settings"}
 addUserKnob {41 maxGPUMemory l "Percentage of GPU memory to use" T apDespillKernel.maxGPUMemory}
 addUserKnob {41 maxTileLines l "Percentage of image height per tile" T apDespillKernel.maxTileLines}
}
 Input {
  inputs 0
  name Inputmask
  xpos 339
  ypos -447
  number 1
 }
 Input {
  inputs 0
  name Inputimg
  xpos 449
  ypos -764
 }
set Nad3e950 [stack 0]
 Colorspace {
  illuminant_out F2
  primary_out ACES
  name Colorspace1
  label "\[value colorspace_in] >> \[value colorspace_out]"
  xpos 559
  ypos -703
 }
 Log2Lin {
  operation lin2log
  name Log2Lin1
  xpos 559
  ypos -665
  disable {{logspace}}
 }
 Shuffle {
  name Shuffle
  xpos 559
  ypos -608
  disable {{"\[exists parent.input0]"}}
 }
 BlinkScript {
  ProgramGroup 1
  KernelDescription "2 \"apDespillKernel\" iterate pixelWise 86d17838f15464a9e9273cd415388c19006f9163a6efd15e7ad521c828dc89ac 2 \"src\" Read Point \"dst\" Write Point 17 \"limit\" Float 1 AACAPw== \"shift\" Float 1 AAAAAA== \"weights\" Float 1 AAAAAA== \"outmode\" Int 1 AAAAAA== \"output_alpha\" Int 1 AAAAAA== \"clr\" Int 1 AAAAAA== \"mode\" Int 1 AAAAAA== \"respill_math\" Int 1 AAAAAA== \"respill_color\" Float 4 AAAAAAAAAAAAAAAAAAAAAA== \"prot1_on\" Int 1 AAAAAA== \"prot1_preview\" Int 1 AAAAAA== \"prot1\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"prot1_tolerance\" Float 1 AAAAAA== \"prot1_mult\" Float 1 AAAAAA== \"prot1_falloff\" Float 1 AAAAAA== \"lumaHueShift\" Int 1 AAAAAA== \"pickSpill\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== 17 \"limit\" 1 1 \"shift\" 1 1 \"weights\" 1 1 \"outmode\" 1 1 \"output_alpha\" 1 1 \"clr\" 1 1 \"mode\" 1 1 \"respill_math\" 1 1 \"respill_color\" 4 1 \"prot1_on\" 1 1 \"prot1_preview\" 1 1 \"prot1\" 3 1 \"prot1_tolerance\" 1 1 \"prot1_mult\" 1 1 \"prot1_falloff\" 1 1 \"lumaHueShift\" 1 1 \"pickSpill\" 3 1 3 \"_usePicked\" Int 1 1 AAAAAA== \"_clr\" Int 1 1 AAAAAA== \"_ret\" Int 1 1 AAAAAA=="
  kernelSource "//---------------------------------------------------------\n// apDespillKernel - apDespill v1.0 by Adrian Pueyo\n//\n// Despill an image, with options to despill any hue (and\n// not only the primaries), select different algorithms for\n// des/respilling, and protect tones from the despill.\n//\n// adrianpueyo.com, 2014-2017\n// ---------------------------------------------------------\n\nstatic inline float y_convert_ccir601(const float4 in)\{\n  return in.x * 0.299f + in.y * 0.587f + in.z * 0.114f;\n\}\n\nstatic inline float y_convert_rec709(const float4 in)\{\n  return in.x * 0.2125f + in.y * 0.7154f + in.z * 0.0721f;\n\}\n\nstatic inline float4 hueShift(const float4 in, const float H)\{\n  if(H==0.0f)\{\n    return in;\n  \}else\{\n    float U = cos(H*PI/180);\n    float W = sin(H*PI/180);\n    float3 ret;\n    ret.x = (.299+.701*U+.168*W)*in.x + (.587-.587*U+.330*W)*in.y + (.114-.114*U-.497*W)*in.z;\n    ret.y = (.299-.299*U-.328*W)*in.x + (.587+.413*U+.035*W)*in.y + (.114-.114*U+.292*W)*in.z;\n    ret.z = (.299-.3*U+1.25*W)*in.x + (.587-.588*U-1.05*W)*in.y + (.114+.886*U-.203*W)*in.z;\n    return float4(ret.x,ret.y,ret.z,in\[3]);\n  \}\n\}\n\nstatic inline float4 hueRotate(const float4 in, const float H)\{\n  if(H==0.0f)\{\n    return in;\n  \}else\{\n    float cosH = cos(H*PI/180);\n    float sinH = sin(H*PI/180);\n    float3 ret;\n    ret.x = (in.x+in.y+in.z)*(1-cosH)/3 + in.x*cosH + (-in.y/sqrt(3.0f)+in.z/sqrt(3.0f))*sinH;\n    ret.y = (in.x+in.y+in.z)*(1-cosH)/3 + in.y*cosH + (in.x/sqrt(3.0f)-in.z/sqrt(3.0f))*sinH;\n    ret.z = (in.x+in.y+in.z)*(1-cosH)/3 + in.z*cosH + (-in.x/sqrt(3.0f)+in.y/sqrt(3.0f))*sinH;\n    return float4(ret.x,ret.y,ret.z,in\[3]);\n  \}\n\}\n\nfloat3 vecToPlane(float3 v1, float3 v2 = float3(1.0f,1.0f,1.0f))\{\n  float3 v1onv2;\n  v1onv2 = v2 * float((float(dot(v2,v1))/float(dot(v2,v2)))); //Projection of vector on another (plane's normal)\n  return v1-v1onv2; //Projection of vector on plane\n\}\n\nstatic inline float colorAngle(const float3 v1, const float3 v2)\{\n  const float3 vN=float3(1.0f,1.0f,1.0f);\n  float ang = acos(float(dot(v1,v2))/float(sqrt(dot(v1,v1)*dot(v2,v2))));\n  float3 crs = cross(v1,v2);\n  if (dot(vN, crs) > 0) \{\n    ang = -ang;\n  \}\n  return ang;\n\}\n\nkernel apDespillKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> src;\n  Image<eWrite> dst;\n\n  param:\n    float limit;\n    float shift;\n    float weights;\n    int outmode;//0=despill,1=spill\n    int output_alpha;\n    int clr; //0=red,1=green,2=blue\n    int mode; //0=average,1=maximum,2=minimum,3=custom\n    int respill_math; //0=Rec709,1=Ccir601,2=Avg,3=Max\n    float4 respill_color;\n    int prot1_on;\n    int prot1_preview;\n    float3 prot1;\n    float prot1_tolerance;\n    float prot1_mult;\n    float prot1_falloff;\n    int lumaHueShift;//If disabled, the hue is just rotated without the luma coefficients\n    float3 pickSpill;\n  local:\n    int _usePicked;\n    int _clr;\n    int _ret;\n\n  void define() \{\n    defineParam(limit, \"limit\", 1.0f);\n    defineParam(shift, \"shift\", 0.0f);\n  \}\n\n  void init() \{\n    _ret = 0;\n    if(clr!=3)\{//red green or blue\n      _usePicked = 0;\n      _clr = clr;\n    \}else if(pickSpill.x==pickSpill.y && pickSpill.x==pickSpill.z)\{\n      _ret = 1;//if \"custom\" selected but has a gray value, avoid any calculations\n    \}else\{\n      _usePicked = 1;\n      _clr = 0;\n    \}\n  \}\n\n  void process() \{\n\n    if(_ret == 1)\{ dst()=src(); return; \}//Avoid any calculations if no despill selected\n    //0. Calculate autoShift if picked spill is not 0\n    float autoShift = 0.0f;\n    if(_usePicked==1)\{\n      float3 vNorm = float3(1.0f,1.0f,1.0f);\n      autoShift = colorAngle(vecToPlane(pickSpill,vNorm),vecToPlane(float3(1.0f,0.0f,0.0f),vNorm));\n      autoShift = autoShift*180/PI;//to deg\n    \}\n\n    //1. HueShift IN\n    float4 despilled;\n    if (lumaHueShift==1)\{\n      despilled = hueShift(src(),shift-autoShift);\n    \}else\{\n      despilled = hueRotate(src(),shift-autoShift);\n    \}\n\n    //2. Calculate the limit\n    float resultLimit = 0.0f;\n    int2 others;\n    if(_clr==0)\{//If red (and if _usePicked, also set red)\n      others = int2(1,2);\n    \}else if(_clr==1)\{\n      others=int2(0,2);\n    \}else if(_clr==2)\{\n      others=int2(0,1);\n    \}\n\n    if(mode==0)\{//average\n      resultLimit = (despilled\[others\[0]]+despilled\[others\[1]])/2;\n    \}else if(mode==1)\{//max\n      resultLimit = max(despilled\[others\[0]],despilled\[others\[1]]);\n    \}else if(mode==2)\{//min\n      resultLimit = min(despilled\[others\[0]],despilled\[others\[1]]);\n    \}else\{//custom\n      resultLimit = despilled\[others\[0]]*weights+despilled\[others\[1]]*(1-weights);\n    \}\n\n    //3. Protect tones\n    float prot1_result;\n    if(prot1_on==1&&(prot1\[0]!=prot1\[1]||prot1\[0]!=prot1\[2]||prot1\[1]!=prot1\[2]))\{\n      float cos_prot1_angle;\n      cos_prot1_angle = (src(0)*prot1\[0]+src(1)*prot1\[1]+src(2)*prot1\[2]) / (sqrt(prot1\[0]*prot1\[0]+prot1\[1]*prot1\[1]+prot1\[2]*prot1\[2]) * sqrt(src(0)*src(0)+src(1)*src(1)+src(2)*src(2)));\n      prot1_result = pow(clamp(cos_prot1_angle,0.0f,1.0f),1/pow(prot1_tolerance,prot1_falloff));\n      resultLimit = resultLimit*(1+prot1_result*prot1_mult);\n    \}\n    \n\n    //4. Calculate the despill and return the hue shift\n    for (int component = 0; component < dst.kComps; component++)\{\n      despilled\[component] = component==_clr?min(despilled\[component],resultLimit*limit):despilled\[component];\n    \}\n    if (lumaHueShift==1)\{\n      despilled = hueShift(despilled,-shift+autoShift);\n    \}else\{\n      despilled = hueRotate(despilled,-shift+autoShift);\n    \}\n\n    //5. Respill/restore despill values\n    float luma;\n    float4 spill = src()-despilled;\n    if(respill_math==0)\{\n      luma = y_convert_rec709(spill);\n    \}else if(respill_math==1)\{\n      luma = y_convert_ccir601(spill);\n    \}else if(respill_math==2)\{\n      luma = (spill\[0]+spill\[1]+spill\[2])/3;\n    \}else\{\n      luma = max(max(spill\[0],spill\[1]),spill\[2]);\n    \}\n\n    //6. Output (options)\n    if(prot1_preview==1 && prot1_on==1)\{\n      dst() = src()*clamp(prot1_result*prot1_mult,0.0f,1.0f);\n    \}else if(outmode==0)\{\n      dst() = despilled+luma*respill_color;\n      if(output_alpha==0)\{\n        dst(3)=src(3);\n      \}else\{\n        dst(3)=luma;\n      \}\n    \}else\{\n      if(output_alpha==0)\{\n        spill\[3]=src(3);\n      \}else\{\n        spill\[3]=luma;\n      \}\n      dst() = spill;\n    \}\n    //dst() = hueRotate(src(),shift-autoShift);\n    //dst() = autoShift;\n  \}\n\};"
  rebuild ""
  apDespillKernel_limit {{parent.tolerance}}
  apDespillKernel_shift {{parent.hue_offset}}
  apDespillKernel_weights {{(parent.custom_weight+1)/2}}
  apDespillKernel_outmode {{parent.out}}
  apDespillKernel_output_alpha {{parent.output_alpha}}
  apDespillKernel_clr {{parent.color}}
  apDespillKernel_mode {{parent.mode}}
  apDespillKernel_respill_math {{parent.respill_math}}
  apDespillKernel_respill_color {{parent.respill_color.r} {parent.respill_color.g} {parent.respill_color.b} 1}
  apDespillKernel_prot1_on {{parent.prot1_activate}}
  apDespillKernel_prot1_preview {{parent.prot1_preview}}
  apDespillKernel_prot1 {{parent.prot1} {parent.prot1} {parent.prot1}}
  apDespillKernel_prot1_tolerance {{parent.prot1_tolerance}}
  apDespillKernel_prot1_mult {{parent.prot1_effect}}
  apDespillKernel_prot1_falloff {{parent.prot1_falloff}}
  apDespillKernel_pickSpill {{parent.pick} {parent.pick} {parent.pick}}
  rebuild_finalise ""
  maxGPUMemory 60
  maxTileLines 8
  name apDespillKernel
  xpos 559
  ypos -582
 }
 Log2Lin {
  name Log2Lin2
  xpos 559
  ypos -520
  disable {{logspace}}
 }
 Colorspace {
  channels {{{parent.Colorspace5.channels}}}
  colorspace_in {{parent.Colorspace1.colorspace_out}}
  illuminant_in {{parent.Colorspace1.illuminant_out}}
  primary_in {{parent.Colorspace1.primary_out}}
  name Colorspace2
  label "\[value colorspace_in] >> \[value colorspace_out]"
  xpos 559
  ypos -494
 }
push $Nad3e950
 Merge2 {
  inputs 2+1
  operation copy
  bbox B
  name Merge
  xpos 449
  ypos -447
 }
 Output {
  name Output
  xpos 449
  ypos -400
 }
end_group
Dot {
 name Dot294
 selected true
 xpos -6781
 ypos -9031
}
set Nc110400 [stack 0]
push $Nad1a470
Dot {
 name Dot293
 selected true
 xpos -6199
 ypos -9462
}
Merge2 {
 inputs 2
 operation from
 name Merge13
 label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
 selected true
 xpos -6233
 ypos -9035
}
Saturation {
 saturation 0
 name Saturation1
 selected true
 xpos -6233
 ypos -8984
}
Dot {
 name Dot295
 selected true
 xpos -6199
 ypos -8893
}
Dot {
 name Dot296
 label "Restore Lum"
 note_font_size 41
 selected true
 xpos -6654
 ypos -8893
}
push $Nc110400
Merge2 {
 inputs 2
 operation plus
 output {rgba.red rgba.green rgba.blue -rgba.alpha}
 name Merge6
 selected true
 xpos -6815
 ypos -8897
}
Dot {
 name Dot297
 label "core \ndespill"
 note_font_size 60
 selected true
 xpos -6781
 ypos -8537
}
Dot {
 name Dot298
 selected true
 xpos -6781
 ypos -7516
}
Dot {
 name Dot299
 label "core \ndespill"
 note_font_size 60
 selected true
 xpos -5432
 ypos -7516
}
push $Nad081c0
Dot {
 name Dot300
 note_font_size 41
 selected true
 xpos -4903
 ypos -7635
}
push $Na1d0700
Remove {
 operation keep
 channels rgb
 name Remove34
 selected true
 xpos -5167
 ypos -9824
}
Dot {
 name Dot301
 selected true
 xpos -5133
 ypos -9475
}
set Nc16c660 [stack 0]
Group {
 name apDespill
 help "apDespill v1.0 by Adrian Pueyo\n\nGizmo to despill an image, with options to despill any hue (and not only the primaries), select different algorithms for des/respilling, and protect tones from the despill.\n\nIf you just want a basic despill, its default values should already be enough and the tool will avoid any extra calculations.\n\nadrianpueyo.com, 2014-2017"
 onCreate "n = nuke.thisNode()\nn\['tolerance'].setRange(0,2)\nn\['prot1_tolerance'].setFlag(0x00000004)\nn\['prot1_effect'].setFlag(0x00000004)"
 knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"color\":\n    if k.getValue() == 0:\n        n\[\"custom_weight\"].setLabel(\"green - blue\")\n    elif k.getValue() == 1:\n        n\[\"custom_weight\"].setLabel(\"red - blue\")\n    elif k.getValue() == 2:\n        n\[\"custom_weight\"].setLabel(\"red - green\")\n    n\[\"pick\"].setVisible(k.getValue() == 3)\nelif k.name() == \"mode\":\n    n\[\"custom_weight\"].setVisible(n\[\"mode\"].getValue()==3)\nelif k.name() in \[\"out\",\"output_alpha\"]:\n    n\[\"respill_math\"].setEnabled(n\[\"out\"].getValue()==0 or n\[\"output_alpha\"].getValue()==1)\n    n\[\"respill_color\"].setEnabled(n\[\"out\"].getValue()==0)\nelif k.name() == \"prot1_activate\":\n    protA = n\[\"prot1_activate\"].value()\n    n\[\"prot1_preview\"].setEnabled(protA)\n    n\[\"prot1\"].setVisible(protA)\n    n\[\"prot1_tolerance\"].setVisible(protA)\n    n\[\"prot1_falloff\"].setVisible(protA)\n    n\[\"prot1_effect\"].setVisible(protA)"
 tile_color 0x8b8b8bff
 label "BLB DRE seq"
 selected true
 xpos -5167
 ypos -9265
 addUserKnob {20 apDespill}
 addUserKnob {6 pick_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {41 "Local GPU: " T apDespillKernel.gpuName}
 addUserKnob {41 "Use GPU if Available" T apDespillKernel.useGPUIfAvailable}
 addUserKnob {41 vectorize l "Vectorize on CPU" -STARTLINE T apDespillKernel.vectorize}
 addUserKnob {26 ""}
 addUserKnob {4 color t "Select a primary as a starting point, or custom to show RGB controls to select any color." M {red green blue custom ""}}
 color blue
 addUserKnob {18 pick +HIDDEN}
 pick {0 0 0}
 addUserKnob {6 pick_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 pick_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 pick_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 pick_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 pick_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 pick_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 pick_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 pick_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 pick_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 pick_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 pick_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 dfg_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {4 out l output t "Quick switch to output the despilled image or the substracted one." M {despill spill}}
 addUserKnob {6 output_alpha l "output spill matte in alpha" t "Output the spill luminance in the alpha channel." -STARTLINE}
 output_alpha true
 addUserKnob {4 mode l "despill math" t "average = avg of other two channels\nmaximum = max of other two channels\nminimum = min of other two channels\ncustom = select custom weights" M {average maximum minimum custom}}
 addUserKnob {4 logLin l "Colorspace Log/Lin" -STARTLINE +INVISIBLE M {Log Lin ""}}
 logLin Lin
 addUserKnob {6 logspace l "Log Space" -STARTLINE}
 logspace true
 addUserKnob {7 custom_weight l "red - green" t "-1 = only capped by the first channel\n0 = capped by avg of both\n1 = only capped by the second channel" -STARTLINE +HIDDEN R -1 1}
 addUserKnob {41 colorspace_out l colorspace T Colorspace1.colorspace_out}
 addUserKnob {41 illuminant_out l "" -STARTLINE T Colorspace1.illuminant_out}
 addUserKnob {41 primary_out l "" -STARTLINE T Colorspace1.primary_out}
 addUserKnob {26 text l " " T " "}
 addUserKnob {7 hue_offset l "hue offset" t "Rotate the despill vectors to despill an arbitrary tone other than the primaries.\nNote: A rotation of +-120 degrees is the same as selecting another color channel." R -180 180}
 hue_offset -1.2
 addUserKnob {7 tolerance t "Use this to multiply the hue tolerance (the limiter value). You can move it all the way down to 0 to completely remove a hue from your image." R 0 2}
 tolerance 1.05
 addUserKnob {6 prot1_activate l "protect tones" t "Enable controls to select tones to protect from despilling." +STARTLINE}
 addUserKnob {6 prot1_preview l preview t "Output the protected tones." -STARTLINE +DISABLED}
 addUserKnob {18 prot1 l protect t "Pick the central hue to protect.\n(ctrl/cmd+alt+click)" +HIDDEN}
 prot1 {0 0 0}
 addUserKnob {6 prot1_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 prot1_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 prot1_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 prot1_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 prot1_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 prot1_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 prot1_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 prot1_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 prot1_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 prot1_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 prot1_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {7 prot1_tolerance l tolerance t "Amount of hues to include in the selection." +HIDDEN}
 prot1_tolerance 0.2
 addUserKnob {7 prot1_falloff l falloff t "Falloff for the hue selection. A higher falloff will make hues apart from the picked one lose weight more quickly." +HIDDEN R 0 4}
 prot1_falloff 2
 addUserKnob {7 prot1_effect l effect t "Multiplier for the hue protection, and for the spill limit value." +HIDDEN R 0 10}
 prot1_effect 1
 addUserKnob {26 respill_divider l "" +STARTLINE}
 addUserKnob {4 respill_math l "respill math" t "Settings for the way of desaturating the spill before adding it back." M {"Rec 709" "Ccir 601" Average Maximum "" ""}}
 addUserKnob {18 respill_color l "respill color" t "RGB multiplier for the desaturated spill when adding it back.\n\nNote: if used on non-degrained plates (which should be avoided anyway), any value other than 1 here will most likely produce grain artifacts." R 0 4}
 respill_color -3.5
 addUserKnob {6 respill_color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 respill_color_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 respill_color_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 respill_color_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 respill_color_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 respill_color_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 respill_color_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 respill_color_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 respill_color_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 respill_color_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 respill_color_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 ""}
 addUserKnob {41 maskChannelMask l mask T Merge.maskChannelMask}
 addUserKnob {41 inject -STARTLINE T Merge.inject}
 addUserKnob {41 invert_mask l invert -STARTLINE T Merge.invert_mask}
 addUserKnob {41 fringe -STARTLINE T Merge.fringe}
 addUserKnob {41 mix T Merge.mix}
 addUserKnob {26 version_author l "" t "apDespill v1.0\n14 March, 2017" +STARTLINE T "<span style=\"color:#666\"><br/><b>apDespill v1.0</b> - <a href=\"http://www.adrianpueyo.com\" style=\"color:#666;text-decoration: none;\">adrianpueyo.com</a>, 2014-2017</span>"}
 addUserKnob {20 GPU_Settings l "GPU Settings"}
 addUserKnob {41 maxGPUMemory l "Percentage of GPU memory to use" T apDespillKernel.maxGPUMemory}
 addUserKnob {41 maxTileLines l "Percentage of image height per tile" T apDespillKernel.maxTileLines}
}
 Input {
  inputs 0
  name Inputmask
  xpos 339
  ypos -447
  number 1
 }
 Input {
  inputs 0
  name Inputimg
  xpos 449
  ypos -764
 }
set Nc18fef0 [stack 0]
 Colorspace {
  illuminant_out F2
  primary_out ACES
  name Colorspace1
  label "\[value colorspace_in] >> \[value colorspace_out]"
  xpos 559
  ypos -703
 }
 Log2Lin {
  operation lin2log
  name Log2Lin1
  xpos 559
  ypos -665
  disable {{logspace}}
 }
 Shuffle {
  name Shuffle
  xpos 559
  ypos -608
  disable {{"\[exists parent.input0]"}}
 }
 BlinkScript {
  ProgramGroup 1
  KernelDescription "2 \"apDespillKernel\" iterate pixelWise 86d17838f15464a9e9273cd415388c19006f9163a6efd15e7ad521c828dc89ac 2 \"src\" Read Point \"dst\" Write Point 17 \"limit\" Float 1 AACAPw== \"shift\" Float 1 AAAAAA== \"weights\" Float 1 AAAAAA== \"outmode\" Int 1 AAAAAA== \"output_alpha\" Int 1 AAAAAA== \"clr\" Int 1 AAAAAA== \"mode\" Int 1 AAAAAA== \"respill_math\" Int 1 AAAAAA== \"respill_color\" Float 4 AAAAAAAAAAAAAAAAAAAAAA== \"prot1_on\" Int 1 AAAAAA== \"prot1_preview\" Int 1 AAAAAA== \"prot1\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"prot1_tolerance\" Float 1 AAAAAA== \"prot1_mult\" Float 1 AAAAAA== \"prot1_falloff\" Float 1 AAAAAA== \"lumaHueShift\" Int 1 AAAAAA== \"pickSpill\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== 17 \"limit\" 1 1 \"shift\" 1 1 \"weights\" 1 1 \"outmode\" 1 1 \"output_alpha\" 1 1 \"clr\" 1 1 \"mode\" 1 1 \"respill_math\" 1 1 \"respill_color\" 4 1 \"prot1_on\" 1 1 \"prot1_preview\" 1 1 \"prot1\" 3 1 \"prot1_tolerance\" 1 1 \"prot1_mult\" 1 1 \"prot1_falloff\" 1 1 \"lumaHueShift\" 1 1 \"pickSpill\" 3 1 3 \"_usePicked\" Int 1 1 AAAAAA== \"_clr\" Int 1 1 AAAAAA== \"_ret\" Int 1 1 AAAAAA=="
  kernelSource "//---------------------------------------------------------\n// apDespillKernel - apDespill v1.0 by Adrian Pueyo\n//\n// Despill an image, with options to despill any hue (and\n// not only the primaries), select different algorithms for\n// des/respilling, and protect tones from the despill.\n//\n// adrianpueyo.com, 2014-2017\n// ---------------------------------------------------------\n\nstatic inline float y_convert_ccir601(const float4 in)\{\n  return in.x * 0.299f + in.y * 0.587f + in.z * 0.114f;\n\}\n\nstatic inline float y_convert_rec709(const float4 in)\{\n  return in.x * 0.2125f + in.y * 0.7154f + in.z * 0.0721f;\n\}\n\nstatic inline float4 hueShift(const float4 in, const float H)\{\n  if(H==0.0f)\{\n    return in;\n  \}else\{\n    float U = cos(H*PI/180);\n    float W = sin(H*PI/180);\n    float3 ret;\n    ret.x = (.299+.701*U+.168*W)*in.x + (.587-.587*U+.330*W)*in.y + (.114-.114*U-.497*W)*in.z;\n    ret.y = (.299-.299*U-.328*W)*in.x + (.587+.413*U+.035*W)*in.y + (.114-.114*U+.292*W)*in.z;\n    ret.z = (.299-.3*U+1.25*W)*in.x + (.587-.588*U-1.05*W)*in.y + (.114+.886*U-.203*W)*in.z;\n    return float4(ret.x,ret.y,ret.z,in\[3]);\n  \}\n\}\n\nstatic inline float4 hueRotate(const float4 in, const float H)\{\n  if(H==0.0f)\{\n    return in;\n  \}else\{\n    float cosH = cos(H*PI/180);\n    float sinH = sin(H*PI/180);\n    float3 ret;\n    ret.x = (in.x+in.y+in.z)*(1-cosH)/3 + in.x*cosH + (-in.y/sqrt(3.0f)+in.z/sqrt(3.0f))*sinH;\n    ret.y = (in.x+in.y+in.z)*(1-cosH)/3 + in.y*cosH + (in.x/sqrt(3.0f)-in.z/sqrt(3.0f))*sinH;\n    ret.z = (in.x+in.y+in.z)*(1-cosH)/3 + in.z*cosH + (-in.x/sqrt(3.0f)+in.y/sqrt(3.0f))*sinH;\n    return float4(ret.x,ret.y,ret.z,in\[3]);\n  \}\n\}\n\nfloat3 vecToPlane(float3 v1, float3 v2 = float3(1.0f,1.0f,1.0f))\{\n  float3 v1onv2;\n  v1onv2 = v2 * float((float(dot(v2,v1))/float(dot(v2,v2)))); //Projection of vector on another (plane's normal)\n  return v1-v1onv2; //Projection of vector on plane\n\}\n\nstatic inline float colorAngle(const float3 v1, const float3 v2)\{\n  const float3 vN=float3(1.0f,1.0f,1.0f);\n  float ang = acos(float(dot(v1,v2))/float(sqrt(dot(v1,v1)*dot(v2,v2))));\n  float3 crs = cross(v1,v2);\n  if (dot(vN, crs) > 0) \{\n    ang = -ang;\n  \}\n  return ang;\n\}\n\nkernel apDespillKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> src;\n  Image<eWrite> dst;\n\n  param:\n    float limit;\n    float shift;\n    float weights;\n    int outmode;//0=despill,1=spill\n    int output_alpha;\n    int clr; //0=red,1=green,2=blue\n    int mode; //0=average,1=maximum,2=minimum,3=custom\n    int respill_math; //0=Rec709,1=Ccir601,2=Avg,3=Max\n    float4 respill_color;\n    int prot1_on;\n    int prot1_preview;\n    float3 prot1;\n    float prot1_tolerance;\n    float prot1_mult;\n    float prot1_falloff;\n    int lumaHueShift;//If disabled, the hue is just rotated without the luma coefficients\n    float3 pickSpill;\n  local:\n    int _usePicked;\n    int _clr;\n    int _ret;\n\n  void define() \{\n    defineParam(limit, \"limit\", 1.0f);\n    defineParam(shift, \"shift\", 0.0f);\n  \}\n\n  void init() \{\n    _ret = 0;\n    if(clr!=3)\{//red green or blue\n      _usePicked = 0;\n      _clr = clr;\n    \}else if(pickSpill.x==pickSpill.y && pickSpill.x==pickSpill.z)\{\n      _ret = 1;//if \"custom\" selected but has a gray value, avoid any calculations\n    \}else\{\n      _usePicked = 1;\n      _clr = 0;\n    \}\n  \}\n\n  void process() \{\n\n    if(_ret == 1)\{ dst()=src(); return; \}//Avoid any calculations if no despill selected\n    //0. Calculate autoShift if picked spill is not 0\n    float autoShift = 0.0f;\n    if(_usePicked==1)\{\n      float3 vNorm = float3(1.0f,1.0f,1.0f);\n      autoShift = colorAngle(vecToPlane(pickSpill,vNorm),vecToPlane(float3(1.0f,0.0f,0.0f),vNorm));\n      autoShift = autoShift*180/PI;//to deg\n    \}\n\n    //1. HueShift IN\n    float4 despilled;\n    if (lumaHueShift==1)\{\n      despilled = hueShift(src(),shift-autoShift);\n    \}else\{\n      despilled = hueRotate(src(),shift-autoShift);\n    \}\n\n    //2. Calculate the limit\n    float resultLimit = 0.0f;\n    int2 others;\n    if(_clr==0)\{//If red (and if _usePicked, also set red)\n      others = int2(1,2);\n    \}else if(_clr==1)\{\n      others=int2(0,2);\n    \}else if(_clr==2)\{\n      others=int2(0,1);\n    \}\n\n    if(mode==0)\{//average\n      resultLimit = (despilled\[others\[0]]+despilled\[others\[1]])/2;\n    \}else if(mode==1)\{//max\n      resultLimit = max(despilled\[others\[0]],despilled\[others\[1]]);\n    \}else if(mode==2)\{//min\n      resultLimit = min(despilled\[others\[0]],despilled\[others\[1]]);\n    \}else\{//custom\n      resultLimit = despilled\[others\[0]]*weights+despilled\[others\[1]]*(1-weights);\n    \}\n\n    //3. Protect tones\n    float prot1_result;\n    if(prot1_on==1&&(prot1\[0]!=prot1\[1]||prot1\[0]!=prot1\[2]||prot1\[1]!=prot1\[2]))\{\n      float cos_prot1_angle;\n      cos_prot1_angle = (src(0)*prot1\[0]+src(1)*prot1\[1]+src(2)*prot1\[2]) / (sqrt(prot1\[0]*prot1\[0]+prot1\[1]*prot1\[1]+prot1\[2]*prot1\[2]) * sqrt(src(0)*src(0)+src(1)*src(1)+src(2)*src(2)));\n      prot1_result = pow(clamp(cos_prot1_angle,0.0f,1.0f),1/pow(prot1_tolerance,prot1_falloff));\n      resultLimit = resultLimit*(1+prot1_result*prot1_mult);\n    \}\n    \n\n    //4. Calculate the despill and return the hue shift\n    for (int component = 0; component < dst.kComps; component++)\{\n      despilled\[component] = component==_clr?min(despilled\[component],resultLimit*limit):despilled\[component];\n    \}\n    if (lumaHueShift==1)\{\n      despilled = hueShift(despilled,-shift+autoShift);\n    \}else\{\n      despilled = hueRotate(despilled,-shift+autoShift);\n    \}\n\n    //5. Respill/restore despill values\n    float luma;\n    float4 spill = src()-despilled;\n    if(respill_math==0)\{\n      luma = y_convert_rec709(spill);\n    \}else if(respill_math==1)\{\n      luma = y_convert_ccir601(spill);\n    \}else if(respill_math==2)\{\n      luma = (spill\[0]+spill\[1]+spill\[2])/3;\n    \}else\{\n      luma = max(max(spill\[0],spill\[1]),spill\[2]);\n    \}\n\n    //6. Output (options)\n    if(prot1_preview==1 && prot1_on==1)\{\n      dst() = src()*clamp(prot1_result*prot1_mult,0.0f,1.0f);\n    \}else if(outmode==0)\{\n      dst() = despilled+luma*respill_color;\n      if(output_alpha==0)\{\n        dst(3)=src(3);\n      \}else\{\n        dst(3)=luma;\n      \}\n    \}else\{\n      if(output_alpha==0)\{\n        spill\[3]=src(3);\n      \}else\{\n        spill\[3]=luma;\n      \}\n      dst() = spill;\n    \}\n    //dst() = hueRotate(src(),shift-autoShift);\n    //dst() = autoShift;\n  \}\n\};"
  rebuild ""
  apDespillKernel_limit {{parent.tolerance}}
  apDespillKernel_shift {{parent.hue_offset}}
  apDespillKernel_weights {{(parent.custom_weight+1)/2}}
  apDespillKernel_outmode {{parent.out}}
  apDespillKernel_output_alpha {{parent.output_alpha}}
  apDespillKernel_clr {{parent.color}}
  apDespillKernel_mode {{parent.mode}}
  apDespillKernel_respill_math {{parent.respill_math}}
  apDespillKernel_respill_color {{parent.respill_color.r} {parent.respill_color.g} {parent.respill_color.b} 1}
  apDespillKernel_prot1_on {{parent.prot1_activate}}
  apDespillKernel_prot1_preview {{parent.prot1_preview}}
  apDespillKernel_prot1 {{parent.prot1} {parent.prot1} {parent.prot1}}
  apDespillKernel_prot1_tolerance {{parent.prot1_tolerance}}
  apDespillKernel_prot1_mult {{parent.prot1_effect}}
  apDespillKernel_prot1_falloff {{parent.prot1_falloff}}
  apDespillKernel_pickSpill {{parent.pick} {parent.pick} {parent.pick}}
  rebuild_finalise ""
  maxGPUMemory 60
  maxTileLines 8
  name apDespillKernel
  xpos 559
  ypos -582
 }
 Log2Lin {
  name Log2Lin2
  xpos 559
  ypos -520
  disable {{logspace}}
 }
 Colorspace {
  channels {{{parent.Colorspace5.channels}}}
  colorspace_in {{parent.Colorspace1.colorspace_out}}
  illuminant_in {{parent.Colorspace1.illuminant_out}}
  primary_in {{parent.Colorspace1.primary_out}}
  name Colorspace2
  label "\[value colorspace_in] >> \[value colorspace_out]"
  xpos 559
  ypos -494
 }
push $Nc18fef0
 Merge2 {
  inputs 2+1
  operation copy
  bbox B
  name Merge
  xpos 449
  ypos -447
 }
 Output {
  name Output
  xpos 449
  ypos -400
 }
end_group
set Nc171230 [stack 0]
Shuffle {
 red alpha
 green alpha
 blue alpha
 name Shuffle18
 tile_color 0xffffffff
 selected true
 xpos -5041
 ypos -9259
}
Grade {
 channels rgba
 blackpoint 0.0001
 whitepoint 0.01
 name Grade2
 selected true
 xpos -5041
 ypos -9207
}
push $Nc171230
Saturation {
 inputs 1+1
 saturation 0.67
 name Saturation4
 selected true
 xpos -5167
 ypos -9207
}
Dot {
 name Dot303
 selected true
 xpos -5133
 ypos -8919
}
set Nc263a40 [stack 0]
push $Nc16c660
Dot {
 name Dot302
 selected true
 xpos -4519
 ypos -9475
}
Merge2 {
 inputs 2
 operation from
 name Merge5
 label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
 selected true
 xpos -4553
 ypos -8923
}
Clamp {
 channels rgba
 maximum_enable false
 name Clamp1
 selected true
 xpos -4553
 ypos -8897
}
Saturation {
 saturation 0
 name Saturation2
 selected true
 xpos -4553
 ypos -8871
}
Clamp {
 channels rgba
 maximum_enable false
 name Clamp3
 selected true
 xpos -4553
 ypos -8845
}
Shuffle {
 green red
 blue red
 alpha red
 name Shuffle11
 tile_color 0x93000000
 selected true
 xpos -4553
 ypos -8819
}
Dot {
 name Dot304
 label "despill\nmatte"
 note_font_size 60
 selected true
 xpos -4519
 ypos -8742
}
set Nc2b69c0 [stack 0]
Dot {
 name Dot305
 label "despill\nMatte"
 note_font_size 60
 selected true
 xpos -4519
 ypos -8545
}
push $Nc263a40
Dot {
 name Dot306
 selected true
 xpos -5133
 ypos -8743
}
set Nc2c00f0 [stack 0]
add_layer {despill despill.red}
Copy {
 inputs 2
 from0 rgba.red
 to0 despill.red
 name Copy7
 selected true
 xpos -5167
 ypos -8555
}
Dot {
 name Dot307
 label "edge\ndespill"
 note_font_size 60
 selected true
 xpos -5133
 ypos -7793
}
Multiply {
 inputs 1+1
 channels despill
 value 0
 name Multiply2
 label "\[value value]"
 selected true
 xpos -5167
 ypos -7651
}
Keymix {
 inputs 3
 channels rgb
 name Keymix3
 selected true
 xpos -5167
 ypos -7520
}
add_layer {despill_RGB despill_RGB.red despill_RGB.green despill_RGB.blue despill_RGB.alpha}
Shuffle {
 black red
 white green
 red2 blue
 green2 black
 out2 despill_RGB
 name Shuffle26
 label "\[value in] → \[value out2]"
 selected true
 xpos -5167
 ypos -7447
}
Copy {
 inputs 2
 channels all
 name Copy12
 selected true
 xpos -5167
 ypos -6960
}
CopyBBox {
 inputs 2
 name CopyBBox3
 selected true
 xpos -5167
 ypos -6898
}
Copy {
 inputs 2
 from0 rgba.alpha
 to0 rgba.alpha
 bbox B
 name Copy14
 selected true
 xpos -5167
 ypos -6643
}
Copy {
 inputs 2
 channels cleanplate
 bbox B
 name Copy15
 selected true
 xpos -5167
 ypos -6287
}
Dot {
 name Dot313
 note_font_size 41
 selected true
 xpos -5133
 ypos -5883
}
Dot {
 name Dot314
 note_font_size 41
 selected true
 xpos -5133
 ypos -5422
}
Dot {
 name Dot315
 note_font_size 41
 selected true
 xpos -5133
 ypos -5096
}
Dot {
 name Dot15
 note_font_size 41
 selected true
 xpos -5133
 ypos -4574
}
set Nc33c7f0 [stack 0]
Dot {
 name Dot7
 note_font_size 41
 selected true
 xpos -4869
 ypos -4574
}
set Nc341340 [stack 0]
Dot {
 name Dot108
 note_font_size 41
 selected true
 xpos -4678
 ypos -4574
}
set Nc345e90 [stack 0]
Shuffle {
 in despill
 name Shuffle23
 label "\[value in]"
 selected true
 xpos -4712
 ypos -4530
}
Remove {
 operation keep
 channels rgba
 name Remove2
 selected true
 xpos -4712
 ypos -4492
}
NoOp {
 name Anchor_30be3b7c88
 help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated Sep 27 2019"
 onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.anchorOnCreate()\n    except:\n        pass"
 knobChanged stamps.anchorKnobChanged()
 autolabel "nuke.thisNode().knob(\"title\").value()"
 tile_color 0xffffff01
 note_font_size 20
 selected true
 xpos -4712
 ypos -4441
 addUserKnob {20 anchor_tab l "Anchor Stamp"}
 addUserKnob {26 identifier -STARTLINE +HIDDEN T anchor}
 addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
 title "despill Mask"
 addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T Despill}
 addUserKnob {26 prev_name l "" +STARTLINE +HIDDEN T Anchor_30be3b7c88}
 addUserKnob {3 showing l "" +STARTLINE +HIDDEN}
 addUserKnob {1 tags l Tags t "Comma-separated tags you can define for each Anchor, that will help you find it when invoking the Stamp Selector by pressing the Stamps shortkey with nothing selected."}
 tags 2D,
 addUserKnob {26 line1 l "" +STARTLINE}
 addUserKnob {26 stamps_label l Stamps: T " "}
 addUserKnob {22 createStamp l new t "Create a new Stamp for this Anchor." -STARTLINE T stamps.stampCreateWired(nuke.thisNode())}
 addUserKnob {22 selectStamps l select t "Reconnect all of this Anchor's Stamps." -STARTLINE T stamps.wiredSelectSimilar(nuke.thisNode().name())}
 addUserKnob {22 reconnectStamps l reconnect -STARTLINE T stamps.anchorReconnectWired()}
 addUserKnob {22 zoomNext l "zoom next" t "Navigate to this Anchor's next Stamp on the Node Graph." -STARTLINE T stamps.wiredZoomNext(nuke.thisNode().name())}
 addUserKnob {26 line2 l "" +STARTLINE}
 addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
 addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated Sep 27 2019." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.0</big></b></a>"}
}
NoOp {
 name Stamp40
 help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated Sep 27 2019"
 onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
 knobChanged "import stamps; stamps.wiredKnobChanged()"
 autolabel "nuke.thisNode().knob(\"title\").value()"
 tile_color 0x1000001
 note_font "Bitstream Vera Sans"
 note_font_size 20
 selected true
 xpos -4855
 ypos -4049
 hide_input true
 addUserKnob {20 wired_tab l "Wired Stamp"}
 addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
 addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
 addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
 addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
 title "despill Mask"
 addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T "despill Mask"}
 addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
 addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i>Advanced Keying Template</i>"}
 addUserKnob {26 line1 l "" +STARTLINE}
 addUserKnob {26 anchor_label l Anchor: T " "}
 addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
 addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
 addUserKnob {26 stamps_label l Stamps: T " "}
 addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
 addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
 addUserKnob {26 space_1 l "" +STARTLINE T " "}
 addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
 addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
 addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
 addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
 addUserKnob {26 space_2 l "" +STARTLINE T " "}
 addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
 addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
 addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
 addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
 addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
 addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
 addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
 addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
 addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
 addUserKnob {1 anchor l Anchor}
 anchor Anchor_30be3b7c88
 addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
 addUserKnob {20 advanced_reconnection_1 l "Advanced Reconnection" +INVISIBLE n -1}
 addUserKnob {26 line2 l "" +STARTLINE}
 addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
 addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated Sep 27 2019." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.0</big></b></a>"}
}
Grade {
 channels rgba
 multiply 4
 black_clamp false
 name Grade4
 selected true
 xpos -4855
 ypos -3970
}
set Nc375020 [stack 0]
Dot {
 name Dot318
 label "despill\nmatte"
 note_font_size 41
 selected true
 xpos -4821
 ypos -3836
}
set Nc3858d0 [stack 0]
Dot {
 name Dot319
 note_font_size 41
 selected true
 xpos -4988
 ypos -3836
}
Dot {
 name Dot320
 note_font_size 41
 selected true
 xpos -4988
 ypos -3526
}
push $Na186b90
NoOp {
 name Stamp42
 help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated Sep 27 2019"
 onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
 knobChanged "import stamps; stamps.wiredKnobChanged()"
 autolabel "nuke.thisNode().knob(\"title\").value()"
 tile_color 0x1000001
 note_font "Bitstream Vera Sans"
 note_font_size 20
 selected true
 xpos -4690
 ypos -3530
 hide_input true
 addUserKnob {20 wired_tab l "Wired Stamp"}
 addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
 addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
 addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
 addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
 title "BG Before Key"
 addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T "BG Before Key"}
 addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
 addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." +HIDDEN T " "}
 addUserKnob {26 line1 l "" +STARTLINE}
 addUserKnob {26 anchor_label l Anchor: T " "}
 addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
 addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
 addUserKnob {26 stamps_label l Stamps: T " "}
 addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
 addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
 addUserKnob {26 space_1 l "" +STARTLINE T " "}
 addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
 addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
 addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
 addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
 addUserKnob {26 space_2 l "" +STARTLINE T " "}
 addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
 addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
 addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
 addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
 addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
 addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
 addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
 addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
 addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
 addUserKnob {1 anchor l Anchor}
 anchor Anchor_3cad2b60ea
 addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
 addUserKnob {20 advanced_reconnection_1 l "Advanced Reconnection" +INVISIBLE n -1}
 addUserKnob {26 line2 l "" +STARTLINE}
 addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
 addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated Sep 27 2019." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.0</big></b></a>"}
}
Dot {
 name Dot20
 label BG
 note_font_size 101
 selected true
 xpos -4656
 ypos -3438
}
push $Na186b90
NoOp {
 name Stamp41
 help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated Sep 27 2019"
 onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
 knobChanged "import stamps; stamps.wiredKnobChanged()"
 autolabel "nuke.thisNode().knob(\"title\").value()"
 tile_color 0x1000001
 note_font "Bitstream Vera Sans"
 note_font_size 20
 selected true
 xpos -4483
 ypos -4012
 hide_input true
 addUserKnob {20 wired_tab l "Wired Stamp"}
 addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
 addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
 addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
 addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
 title "BG Before Key"
 addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T "BG Before Key"}
 addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
 addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." +HIDDEN T " "}
 addUserKnob {26 line1 l "" +STARTLINE}
 addUserKnob {26 anchor_label l Anchor: T " "}
 addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
 addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
 addUserKnob {26 stamps_label l Stamps: T " "}
 addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
 addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
 addUserKnob {26 space_1 l "" +STARTLINE T " "}
 addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
 addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
 addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
 addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
 addUserKnob {26 space_2 l "" +STARTLINE T " "}
 addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
 addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
 addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
 addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
 addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
 addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
 addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
 addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
 addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
 addUserKnob {1 anchor l Anchor}
 anchor Anchor_3cad2b60ea
 addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
 addUserKnob {20 advanced_reconnection_1 l "Advanced Reconnection" +INVISIBLE n -1}
 addUserKnob {26 line2 l "" +STARTLINE}
 addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
 addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated Sep 27 2019." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.0</big></b></a>"}
}
Dot {
 name Dot321
 label BG
 note_font_size 101
 selected true
 xpos -4449
 ypos -3917
}
Grade {
 blackpoint 0.008
 whitepoint 0.225
 black_clamp false
 name Grade6
 label "BG Prep"
 selected true
 xpos -4483
 ypos -3838
}
Dot {
 name Dot322
 selected true
 xpos -4449
 ypos -3749
}
push $Nc3858d0
Merge2 {
 inputs 2
 operation multiply
 name Merge36
 selected true
 xpos -4855
 ypos -3753
}
Shuffle {
 alpha black
 name Shuffle40
 label "\[value in]"
 selected true
 xpos -4855
 ypos -3708
}
push $Nc375020
Shuffle {
 green red
 blue red
 alpha red
 name Shuffle41
 label "\[value in]"
 selected true
 xpos -4998
 ypos -3976
}
Grade {
 channels rgba
 whitepoint 0.5
 black_clamp false
 white_clamp true
 name Grade7
 selected true
 xpos -4998
 ypos -3922
}
push $Nc33c7f0
Remove {
 operation keep
 channels rgba
 channels2 GS_Plate
 name Remove6
 selected true
 xpos -5167
 ypos -4483
}
Saturation {
 inputs 1+1
 saturation 0.5
 name Saturation3
 label "change if necessary"
 selected true
 xpos -5167
 ypos -3928
}
Merge2 {
 inputs 2
 operation plus
 bbox B
 output {rgba.red rgba.green rgba.blue -rgba.alpha}
 name Merge49
 selected true
 xpos -5167
 ypos -3702
}
Group {
 inputs 3
 name BlacksMatch
 help "Choose a black point color or plug an image /constant you wish to be your blackpoint into BlackColor input.\n\nUse Mult Range to control how far above the blackpoint color to affect the lows\n\nUse the RollOff gamma to add fall off to the bottom of the curve\n\nTurn on the preview Plotscan and move the sampler over a region to see what your settings are doing to a linear 0-1 ramp.  This will help you see if you have weird curves, clamping or other funky problems as you adjust settings"
 knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == \"inputChange\":\n    nsd = nuke.toNode(\"SwitchDefault\")\n    n\[\"defaultBlack\"].setEnabled(nsd\[\"which\"].getValue()==1)\n\nif k.name() == \"previewPlotScan\":\n    p = n.knob(\"previewPlotScan\").value()\n    if p == True:\n        n.knob(\"plotscanSampler\").setVisible(True)\n    else:\n        n.knob(\"plotscanSampler\").setVisible(False)"
 tile_color 0x1c1c1cff
 note_font "Helvetica Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
 selected true
 xpos -5167
 ypos -3442
 addUserKnob {20 BlacksMatch}
 addUserKnob {6 default_black_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 premultInput l "Premultiplied Input" +STARTLINE}
 addUserKnob {4 mergeOp l Operation: t "Plus and Screen do the same thing with our operation, so I only included a hypot between plus/screen and hypot.  Hypot raises the mult by x2 because I thought that gave more pleasising results.  It will probably be a harsher curve (more towards clamp) than the plus/screen result)." M {Plus/Screen Hypot "" ""}}
 addUserKnob {18 defaultBlack l "Default Black" +DISABLED}
 defaultBlack {0.05 0.05 0.05}
 addUserKnob {6 defaultBlack_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 defaultBlack_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 defaultBlack_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 defaultBlack_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 defaultBlack_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 defaultBlack_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 defaultBlack_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 ""}
 addUserKnob {7 multBase l "Mult Low Range" t "This is the Multiplier for the top of the \"toe\" curve.  It is multiplying the BlackPoint color by this number and setting it as the highest point weird the curve will influence the midtones and the highlights" R 1.5 10}
 multBase 4
 addUserKnob {7 rolloffGamma l "Rolloff Gamma" t "This controls the bottom of the curve, the falloff to where it is bending toward the \"cut off point\" which is out black color.  A lower value will act more like a clamp and a higher value will act more like a plus." R 0.1 1}
 rolloffGamma 0.35
 addUserKnob {4 minVal l "Min Value is:" M {"Toe Result" "Clamp Result" "" ""}}
 addUserKnob {6 previewPlotScan l "Preview PlotScan" t "Click to overlay a plotscan graph to show you how your black color is influenced by your settings." +STARTLINE}
 addUserKnob {12 plotscanSampler l "PlotScan Sampler" +HIDDEN}
 plotscanSampler {200 200}
 addUserKnob {6 color_rgb_panelDropped l "panel dropped state" +HIDDEN +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {41 maskChannelMask l mask -STARTLINE T MergeKeymix.maskChannelMask}
 addUserKnob {41 inject -STARTLINE T MergeKeymix.inject}
 addUserKnob {41 invert_mask l invert -STARTLINE T MergeKeymix.invert_mask}
 addUserKnob {41 fringe -STARTLINE T MergeKeymix.fringe}
 addUserKnob {41 mix T MergeKeymix.mix}
 addUserKnob {20 info l Info}
 addUserKnob {26 creator l Creator: T "<b><big>Tony Lyons"}
 addUserKnob {26 desc l Name: T BlacksMatch}
 addUserKnob {26 ver l Version: T v10}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x556a5000
  label "This Creates a \nPer Channel Key\nBased on the Blackpoint"
  note_font_size 30
  note_font_color 0xffffffff
  xpos 991
  ypos -77
  bdwidth 314
  bdheight 421
 }
 StickyNote {
  inputs 0
  name StickyNote2
  tile_color 0xff
  label green
  note_font_size 41
  note_font_color 0xffffffff
  xpos 177
  ypos 466
 }
 StickyNote {
  inputs 0
  name StickyNote1
  tile_color 0xff
  label red
  note_font_size 41
  note_font_color 0xffffffff
  xpos 188
  ypos 350
 }
 StickyNote {
  inputs 0
  name StickyNote3
  tile_color 0xff
  label blue
  note_font_size 41
  note_font_color 0xffffffff
  xpos 186
  ypos 570
 }
 StickyNote {
  inputs 0
  name StickyNote4
  tile_color 0xff
  label "min will be \nblack color"
  note_font_size 31
  note_font_color 0xffffffff
  xpos 143
  ypos 733
 }
 Input {
  inputs 0
  name Inputimg
  xpos 322
  ypos -550
 }
 Dot {
  name Dot17
  xpos 356
  ypos -418
 }
set Nc45b630 [stack 0]
 AddChannels {
  channels rgba
  color 1
  name AddChannels1
  xpos 322
  ypos -365
 }
 Dot {
  name Dot5
  note_font_size 41
  xpos 356
  ypos -288
 }
set Nc4690d0 [stack 0]
 Grade {
  channels rgba
  white 0
  multiply 0
  add {{defaultBlack.r} {defaultBlack.g} {defaultBlack.b} 0}
  black_clamp false
  name Grade1
  label color
  xpos 922
  ypos -295
 }
 Input {
  inputs 0
  name InputBlackColor
  xpos 1138
  ypos -569
  number 1
 }
 Switch {
  inputs 2
  which {{"!\[exists parent.input1]"}}
  name SwitchDefault
  xpos 1138
  ypos -291
 }
 Dot {
  name Dot26
  label "Black Color"
  note_font_size 41
  xpos 1172
  ypos -212
 }
 Dot {
  name Dot4
  note_font_size 41
  xpos 1172
  ypos -151
 }
set Nc490250 [stack 0]
 Dot {
  name Dot36
  note_font_size 41
  xpos 1631
  ypos -151
 }
set Nc494dd0 [stack 0]
 Dot {
  name Dot16
  note_font_size 41
  xpos 2140
  ypos -151
 }
set Nc499920 [stack 0]
 Crop {
  box {{plotscanSampler.x-2} {plotscanSampler.y-2} {plotscanSampler.x+2} {plotscanSampler.x+2}}
  reformat true
  crop false
  name Crop1
  xpos 2432
  ypos -154
  addUserKnob {20 User}
  addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  addUserKnob {22 cropToBbox_1 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
 }
 Blur {
  channels rgb
  size 16
  name Blur1
  label "\[value size]"
  xpos 2432
  ypos -130
 }
 Reformat {
  format "512 512 0 0 512 512 1 square_512"
  name Reformat4
  xpos 2432
  ypos -92
 }
 Dot {
  name Dot12
  note_font_size 41
  xpos 2466
  ypos -43
 }
set Nc4c5e70 [stack 0]
 Dot {
  name Dot47
  note_font_size 41
  xpos 2917
  ypos -43
 }
set Nc4caa90 [stack 0]
 Dot {
  name Dot42
  label "Black Color"
  note_font_size 41
  xpos 2917
  ypos 286
 }
 Dot {
  name Dot43
  note_font_size 41
  xpos 2917
  ypos 366
 }
set Nc4d4130 [stack 0]
 Dot {
  name Dot44
  note_font_size 41
  xpos 2917
  ypos 480
 }
set Nc4d8d90 [stack 0]
 Dot {
  name Dot45
  note_font_size 41
  xpos 2917
  ypos 588
 }
set Nc4dd830 [stack 0]
 Dot {
  name Dot31
  note_font_size 41
  xpos 2917
  ypos 656
 }
set Nc4e2420 [stack 0]
push $Nc4e2420
push $Nc4caa90
 Dot {
  name Dot11
  label "Black Color"
  note_font_size 41
  xpos 3426
  ypos -43
 }
 Multiply {
  channels rgb
  value 2
  name Multiply6
  label "mult black color"
  xpos 3392
  ypos 77
 }
 Reformat {
  inputs 0
  format "512 512 0 0 512 512 1 square_512"
  pbb true
  name Reformat1
  xpos 2711
  ypos 61
 }
 Ramp {
  p0 {0 0}
  p1 {512 0}
  name Ramp1
  xpos 2711
  ypos 93
 }
 Dot {
  name Dot1
  note_font_size 41
  xpos 2745
  ypos 154
 }
set Nc514980 [stack 0]
 Dot {
  name Dot7
  note_font_size 41
  xpos 3138
  ypos 154
 }
set Nc519540 [stack 0]
 MergeExpression {
  inputs 2
  expr0 Br/Ar
  expr1 Bg/Ag
  expr2 Bb/Ab
  name MergeDivide2
  xpos 3392
  ypos 151
 }
 Invert {
  channels rgb
  name Invert5
  xpos 3392
  ypos 175
 }
 Clamp {
  channels rgb
  name Clamp4
  xpos 3392
  ypos 199
 }
 Gamma {
  channels rgb
  value 0.5
  name Gamma4
  xpos 3392
  ypos 223
 }
 Dot {
  name Dot39
  xpos 3426
  ypos 366
 }
set Nc5523e0 [stack 0]
 Dot {
  name Dot40
  xpos 3426
  ypos 480
 }
set Nc556fd0 [stack 0]
 Dot {
  name Dot41
  xpos 3426
  ypos 588
 }
 Shuffle {
  red blue
  green blue
  alpha blue
  name Shuffle11
  tile_color 0x3fbfff
  label "\[value in] \[ expr \{ \[value out2] == \"none\" ? \" \" : \[concat --> \[value out2]] \}]"
  xpos 3277
  ypos 581
 }
push $Nc4dd830
push $Nc556fd0
 Shuffle {
  red green
  blue green
  alpha green
  name Shuffle12
  tile_color 0xbf00ff
  label "\[value in] \[ expr \{ \[value out2] == \"none\" ? \" \" : \[concat --> \[value out2]] \}]"
  xpos 3276
  ypos 473
 }
push $Nc4d8d90
push $Nc5523e0
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle13
  tile_color 0xbf0000ff
  label "\[value in] \[ expr \{ \[value out2] == \"none\" ? \" \" : \[concat --> \[value out2]] \}]"
  xpos 3270
  ypos 359
 }
push $Nc4d4130
push $Nc519540
 Merge2 {
  inputs 2+1
  operation {{parent.Settings.mergeOpNum}}
  bbox B
  Achannels {rgba.red -rgba.green -rgba.blue -rgba.alpha}
  Bchannels {rgba.red -rgba.green -rgba.blue -rgba.alpha}
  output {rgba.red -rgba.green -rgba.blue -rgba.alpha}
  maskChannelInput -rgba.red
  name Merge14
  label red
  xpos 3104
  ypos 359
 }
 Merge2 {
  inputs 2+1
  operation {{parent.Settings.mergeOpNum}}
  bbox B
  Achannels {-rgba.red rgba.green -rgba.blue -rgba.alpha}
  Bchannels {-rgba.red rgba.green -rgba.blue -rgba.alpha}
  output {-rgba.red rgba.green -rgba.blue -rgba.alpha}
  maskChannelInput -rgba.red
  name Merge15
  label green
  xpos 3104
  ypos 473
 }
 Merge2 {
  inputs 2+1
  operation {{parent.Settings.mergeOpNum}}
  bbox B
  Achannels {-rgba.red -rgba.green rgba.blue -rgba.alpha}
  Bchannels {-rgba.red -rgba.green rgba.blue -rgba.alpha}
  output {-rgba.red -rgba.green rgba.blue -rgba.alpha}
  maskChannelInput -rgba.red
  name Merge16
  label blue
  xpos 3104
  ypos 581
 }
 Merge2 {
  inputs 2
  operation max
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge18
  label "Set Min Color\nto Blackpoint"
  xpos 3104
  ypos 644
 }
 Dot {
  name Dot46
  note_font_size 41
  xpos 3138
  ypos 742
 }
 Switch {
  inputs 2
  which {{minVal}}
  name SwitchMinColor1
  xpos 2883
  ypos 739
 }
push $Nc4c5e70
 Multiply {
  channels rgb
  value {{multBase}}
  name Multiply3
  label "mult black color"
  xpos 2432
  ypos 63
 }
 Multiply {
  channels rgb
  value 2
  name Multiply4
  label "hypot Extra Mult\n"
  xpos 2432
  ypos 95
  disable {{"mergeOp == 1 ? 0 : 1"}}
 }
push $Nc514980
 MergeExpression {
  inputs 2
  expr0 Br/Ar
  expr1 Bg/Ag
  expr2 Bb/Ab
  name MergeDivide1
  xpos 2432
  ypos 151
 }
 Invert {
  channels rgb
  name Invert2
  xpos 2432
  ypos 175
 }
 Clamp {
  channels rgb
  name Clamp2
  xpos 2432
  ypos 199
 }
 Gamma {
  channels rgb
  value {{rolloffGamma}}
  name Gamma2
  xpos 2432
  ypos 223
 }
 Dot {
  name Dot6
  xpos 2466
  ypos 366
 }
set Nc62ad00 [stack 0]
 Dot {
  name Dot9
  xpos 2466
  ypos 480
 }
set Nc62f910 [stack 0]
 Dot {
  name Dot10
  xpos 2466
  ypos 588
 }
 Shuffle {
  red blue
  green blue
  alpha blue
  name Shuffle4
  tile_color 0x3fbfff
  label "\[value in] \[ expr \{ \[value out2] == \"none\" ? \" \" : \[concat --> \[value out2]] \}]"
  xpos 2511
  ypos 581
 }
push $Nc4dd830
push $Nc62f910
 Shuffle {
  red green
  blue green
  alpha green
  name Shuffle5
  tile_color 0xbf00ff
  label "\[value in] \[ expr \{ \[value out2] == \"none\" ? \" \" : \[concat --> \[value out2]] \}]"
  xpos 2511
  ypos 473
 }
push $Nc4d8d90
push $Nc62ad00
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle6
  tile_color 0xbf0000ff
  label "\[value in] \[ expr \{ \[value out2] == \"none\" ? \" \" : \[concat --> \[value out2]] \}]"
  xpos 2517
  ypos 359
 }
push $Nc4d4130
push $Nc514980
 Merge2 {
  inputs 2+1
  operation {{parent.Settings.mergeOpNum}}
  bbox B
  Achannels {rgba.red -rgba.green -rgba.blue -rgba.alpha}
  Bchannels {rgba.red -rgba.green -rgba.blue -rgba.alpha}
  output {rgba.red -rgba.green -rgba.blue -rgba.alpha}
  maskChannelInput -rgba.red
  name Merge2
  label red
  xpos 2711
  ypos 359
 }
 Merge2 {
  inputs 2+1
  operation {{parent.Settings.mergeOpNum}}
  bbox B
  Achannels {-rgba.red rgba.green -rgba.blue -rgba.alpha}
  Bchannels {-rgba.red rgba.green -rgba.blue -rgba.alpha}
  output {-rgba.red rgba.green -rgba.blue -rgba.alpha}
  maskChannelInput -rgba.red
  name Merge6
  label green
  xpos 2711
  ypos 473
 }
 Merge2 {
  inputs 2+1
  operation {{parent.Settings.mergeOpNum}}
  bbox B
  Achannels {-rgba.red -rgba.green rgba.blue -rgba.alpha}
  Bchannels {-rgba.red -rgba.green rgba.blue -rgba.alpha}
  output {-rgba.red -rgba.green rgba.blue -rgba.alpha}
  maskChannelInput -rgba.red
  name Merge7
  label blue
  xpos 2711
  ypos 581
 }
 Merge2 {
  inputs 2
  operation max
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge8
  label "Set Min Color\nto Blackpoint"
  xpos 2711
  ypos 730
 }
 Group {
  name PlotScanline
  tile_color 0x9c0000ff
  xpos 2711
  ypos 805
  addUserKnob {20 Controls}
  addUserKnob {4 mode l "Sampling method" M {"Slice Per Pixel (faster)" "Slice Area (slower)" "Full Scanline" "" "" ""}}
  mode "Full Scanline"
  addUserKnob {6 add2image l "Add to original" +STARTLINE}
  addUserKnob {6 Normalize -STARTLINE}
  addUserKnob {6 tonemap l "Tone Map (HDRI)" -STARTLINE}
  addUserKnob {6 curve l "Plot as curve" +STARTLINE}
  curve true
  addUserKnob {3 curveFat l "Curve Thickness" -STARTLINE}
  addUserKnob {3 sa l "Sample Area" t "Disabled when using pr pixel method."}
  sa 1
  addUserKnob {7 lift l Lift R -1 1}
  addUserKnob {7 scale l Scale R 0 5}
  scale 1
  addUserKnob {26 ""}
  addUserKnob {12 p1 l "Start Point"}
  p1 {376 418}
  addUserKnob {12 p2 l "End Point" -STARTLINE}
  p2 {428.5 425.5}
  addUserKnob {26 ""}
  addUserKnob {26 "" l "About " T "Plot Scanline v0.4 | theo@euqahuba.com\nUse P1 to select your scanline and/or you start slice."}
 }
  Input {
   inputs 0
   name Input1
   xpos -480
   ypos 62
  }
set Nc6b7870 [stack 0]
  Expression {
   temp_name0 length
   temp_expr0 sqrt(r*r+g*g+b*b)
   expr0 r/length
   expr1 g/length
   expr2 b/length
   name Normalize
   xpos -480
   ypos 108
   disable {{1-parent.Normalize i}}
  }
  Expression {
   expr0 r/(r+1)
   expr1 g/(g+1)
   expr2 b/(b+1)
   name tonamap
   xpos -480
   ypos 134
   disable {{1-parent.tonemap i}}
  }
set Nc6ca290 [stack 0]
  Expression {
   temp_name0 rExpr
   temp_expr0 "min(max(0,\r\nceil(r(x,parent.p1.y)-((y/height+parent.lift)*parent.scale))),1)"
   temp_name1 gExpr
   temp_expr1 "min(max(0,\r\nceil(g(x,parent.p1.y)-((y/height+parent.lift)*parent.scale))),1)"
   temp_name2 bExpr
   temp_expr2 "min(max(0,\r\nceil(b(x,parent.p1.y)-((y/height+parent.lift)*parent.scale))),1)"
   expr0 rExpr
   expr1 gExpr
   expr2 bExpr
   expr3 0
   name scanline
   xpos -302
   ypos 193
   addUserKnob {20 User}
  }
push $Nc6ca290
  Expression {
   temp_name0 rExpr
   temp_expr0 "min(max(0,\r\nceil(r((x/width)*(parent.p2.x-parent.p1.x)+parent.p1.x,(x/width)*(parent.p2.y-parent.p1.y)+parent.p1.y,parent.sa,parent.sa)-((y/height+parent.lift)*parent.scale))),1)"
   temp_name1 gExpr
   temp_expr1 "min(max(0,\r\nceil(g((x/width)*(parent.p2.x-parent.p1.x)+parent.p1.x,(x/width)*(parent.p2.y-parent.p1.y)+parent.p1.y,parent.sa,parent.sa)-((y/height+parent.lift)*parent.scale))),1)"
   temp_name2 bExpr
   temp_expr2 "min(max(0,\r\nceil(b((x/width)*(parent.p2.x-parent.p1.x)+parent.p1.x,(x/width)*(parent.p2.y-parent.p1.y)+parent.p1.y,parent.sa,parent.sa)-((y/height+parent.lift)*parent.scale))),1)"
   expr0 rExpr
   expr1 gExpr
   expr2 bExpr
   expr3 0
   name Expression_highQuality
   xpos -515
   ypos 197
   addUserKnob {20 User}
  }
push $Nc6ca290
  Expression {
   temp_name0 rExpr
   temp_expr0 "min(max(0,\r\nceil(r((x/width)*(parent.p2.x-parent.p1.x)+parent.p1.x,(x/width)*(parent.p2.y-parent.p1.y)+parent.p1.y)-((y/height+parent.lift)*parent.scale))),1)"
   temp_name1 gExpr
   temp_expr1 "min(max(0,\r\nceil(g((x/width)*(parent.p2.x-parent.p1.x)+parent.p1.x,(x/width)*(parent.p2.y-parent.p1.y)+parent.p1.y)-((y/height+parent.lift)*parent.scale))),1)"
   temp_name2 bExpr
   temp_expr2 "min(max(0,\r\nceil(b((x/width)*(parent.p2.x-parent.p1.x)+parent.p1.x,(x/width)*(parent.p2.y-parent.p1.y)+parent.p1.y)-((y/height+parent.lift)*parent.scale))),1)"
   expr0 rExpr
   expr1 gExpr
   expr2 bExpr
   expr3 0
   name perPixel
   xpos -419
   ypos 201
   addUserKnob {20 User}
  }
  Switch {
   inputs 3
   which {{parent.mode i}}
   name Switch2
   xpos -480
   ypos 253
  }
  Matrix {
   matrix {
       {0 1 0}
       {1 -4 1}
       {0 1 0}
     }
   name Matrix2
   xpos -480
   ypos 284
   disable {{-1+parent.curve i x70 1}}
  }
  Dilate {
   size {{parent.curveFat}}
   name Dilate1
   xpos -480
   ypos 326
   disable {{-1+parent.curve.main}}
  }
  Clamp {
   name Clamp1
   xpos -480
   ypos 383
  }
set Nc722e80 [stack 0]
push $Nc6b7870
  Dot {
   name Dot1
   xpos -556
   ypos 66
  }
  Clamp {
   maximum 331
   name Clamp2
   xpos -590
   ypos 352
  }
  Merge2 {
   inputs 2
   operation plus
   bbox intersection
   name Merge1
   xpos -590
   ypos 394
  }
  Dot {
   name Dot2
   xpos -556
   ypos 433
  }
push $Nc722e80
  Switch {
   inputs 2
   which {{parent.add2image i}}
   name Switch1
   xpos -480
   ypos 430
  }
  Output {
   name Output1
   xpos -480
   ypos 470
  }
 end_group
 Dot {
  name Dot15
  note_font_size 41
  xpos 2745
  ypos 857
 }
set Nc766420 [stack 0]
 Shuffle {
  red white
  green white
  blue white
  alpha white
  name Shuffle7
  label "\[value in] \[ expr \{ \[value out2] == \"none\" ? \" \" : \[concat --> \[value out2]] \}]"
  xpos 2821
  ypos 850
 }
 BlackOutside {
  name BlackOutside1
  xpos 2821
  ypos 882
 }
 Dilate {
  channels rgba
  size -2
  name Dilate1
  xpos 2821
  ypos 910
 }
 Invert {
  name Invert3
  xpos 2821
  ypos 934
 }
push $Nc766420
 Merge2 {
  inputs 2
  name Merge9
  label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
  xpos 2711
  ypos 938
 }
 Group {
  name BinaryAlpha
  tile_color 0x2a2a2aff
  label "(\[value an] --> \[value output1])"
  note_font Verdana
  note_font_color 0xfffff9ff
  xpos 2711
  ypos 983
  addUserKnob {20 BinaryAlpha}
  addUserKnob {4 an l Analyze: M {rgb rgba alpha "" "" ""}}
  addUserKnob {4 output1 l Output: M {rgba alpha "" "" "" ""}}
  output1 alpha
  addUserKnob {20 info l Info}
  addUserKnob {26 creator l Creator: T "<b><big>Tony Lyons"}
  addUserKnob {26 desc l Description: t "Analyzes channel input and creates a binary result 0 or 1 and outputs it into output channel" T BinaryAlpha}
  addUserKnob {26 ver l Version: T v03}
 }
  Input {
   inputs 0
   name Input
   xpos -398
   ypos 275
  }
  Expression {
   temp_name0 rgb_an
   temp_expr0 "r !=0 || g!=0 || b!=0?1:0"
   temp_name1 rgba_an
   temp_expr1 "r!=0 || g!=0 || b!=0 || a!=0?1:0"
   temp_name2 alpha_an
   temp_expr2 a!=0?1:0
   expr3 "parent.an == 0 ? rgb_an : parent.an == 1 ? rgba_an : alpha_an"
   name Expression
   xpos -398
   ypos 341
  }
  Shuffle {
   red alpha
   green alpha
   blue alpha
   name Shuffle
   label "\[value in]"
   xpos -398
   ypos 367
   disable {{parent.output1}}
  }
  Output {
   name Output1
   xpos -398
   ypos 456
  }
 end_group
 Reformat {
  type "to box"
  box_height {{"\[exists parent.input0] ? parent.input.height : root.format.height"}}
  resize height
  filter Impulse
  pbb true
  name Reformat2
  xpos 2711
  ypos 1041
 }
 Reformat {
  type "to box"
  box_width {{"\[exists parent.input0] ? parent.input.width : root.format.width"}}
  box_height {{input.height}}
  resize none
  filter Impulse
  black_outside true
  pbb true
  name Reformat3
  xpos 2711
  ypos 1081
 }
 Dilate {
  channels rgba
  size 1
  name Dilate2
  xpos 2711
  ypos 1121
 }
 Dot {
  name Dot14
  note_font_size 41
  xpos 2745
  ypos 1192
 }
 Input {
  inputs 0
  name Inputmask
  xpos 864
  ypos 878
  number 2
 }
 Dot {
  name Dot29
  xpos 898
  ypos 1015
 }
push $Nc494dd0
 Dot {
  name Dot33
  label "Black Color"
  note_font_size 41
  xpos 1631
  ypos 295
 }
 Dot {
  name Dot37
  note_font_size 41
  xpos 1631
  ypos 360
 }
set Nc817a00 [stack 0]
 Dot {
  name Dot34
  note_font_size 41
  xpos 1631
  ypos 474
 }
set Nc81c620 [stack 0]
 Dot {
  name Dot35
  note_font_size 41
  xpos 1631
  ypos 582
 }
set Nc821170 [stack 0]
 Dot {
  name Dot13
  note_font_size 41
  xpos 1631
  ypos 674
 }
set Nc825cc0 [stack 0]
push $Nc825cc0
push $Nc499920
 Multiply {
  channels rgb
  value 2
  name Multiply7
  label "mult black color"
  xpos 2106
  ypos 87
 }
push $Nc4690d0
 Unpremult {
  name Unpremult1
  xpos 322
  ypos -16
  disable {{"! premultInput"}}
 }
 Dot {
  name Dot18
  xpos 356
  ypos 145
 }
set Nc83e720 [stack 0]
 Dot {
  name Dot22
  note_font_size 41
  xpos 1028
  ypos 145
 }
set Nc8432f0 [stack 0]
 Dot {
  name Dot32
  note_font_size 41
  xpos 1852
  ypos 145
 }
set Nc847e40 [stack 0]
 MergeExpression {
  inputs 2
  expr0 Br/Ar
  expr1 Bg/Ag
  expr2 Bb/Ab
  name MergeDivide3
  xpos 2106
  ypos 142
 }
 Invert {
  channels rgb
  name Invert4
  xpos 2106
  ypos 166
 }
 Clamp {
  channels rgb
  name Clamp3
  xpos 2106
  ypos 190
 }
 Gamma {
  channels rgb
  value 0.51
  name Gamma3
  xpos 2106
  ypos 214
 }
 Dot {
  name Dot24
  xpos 2140
  ypos 360
 }
set Nc87f9d0 [stack 0]
 Dot {
  name Dot25
  xpos 2140
  ypos 474
 }
set Nc8845c0 [stack 0]
 Dot {
  name Dot27
  xpos 2140
  ypos 582
 }
 Shuffle {
  red blue
  green blue
  alpha blue
  name Shuffle8
  tile_color 0x3fbfff
  label "\[value in] \[ expr \{ \[value out2] == \"none\" ? \" \" : \[concat --> \[value out2]] \}]"
  xpos 1990
  ypos 575
 }
push $Nc821170
push $Nc8845c0
 Shuffle {
  red green
  blue green
  alpha green
  name Shuffle9
  tile_color 0xbf00ff
  label "\[value in] \[ expr \{ \[value out2] == \"none\" ? \" \" : \[concat --> \[value out2]] \}]"
  xpos 1990
  ypos 467
 }
push $Nc81c620
push $Nc87f9d0
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle10
  tile_color 0xbf0000ff
  label "\[value in] \[ expr \{ \[value out2] == \"none\" ? \" \" : \[concat --> \[value out2]] \}]"
  xpos 1984
  ypos 353
 }
push $Nc817a00
push $Nc847e40
 Merge2 {
  inputs 2+1
  operation {{parent.Settings.mergeOpNum}}
  bbox B
  Achannels {rgba.red -rgba.green -rgba.blue -rgba.alpha}
  Bchannels {rgba.red -rgba.green -rgba.blue -rgba.alpha}
  output {rgba.red -rgba.green -rgba.blue -rgba.alpha}
  maskChannelInput -rgba.red
  name Merge11
  label red
  xpos 1818
  ypos 353
 }
 Merge2 {
  inputs 2+1
  operation {{parent.Settings.mergeOpNum}}
  bbox B
  Achannels {-rgba.red rgba.green -rgba.blue -rgba.alpha}
  Bchannels {-rgba.red rgba.green -rgba.blue -rgba.alpha}
  output {-rgba.red rgba.green -rgba.blue -rgba.alpha}
  maskChannelInput -rgba.red
  name Merge12
  label green
  xpos 1818
  ypos 467
 }
 Merge2 {
  inputs 2+1
  operation {{parent.Settings.mergeOpNum}}
  bbox B
  Achannels {-rgba.red -rgba.green rgba.blue -rgba.alpha}
  Bchannels {-rgba.red -rgba.green rgba.blue -rgba.alpha}
  output {-rgba.red -rgba.green rgba.blue -rgba.alpha}
  maskChannelInput -rgba.red
  name Merge13
  label blue
  xpos 1818
  ypos 575
 }
 Merge2 {
  inputs 2
  operation max
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge17
  label "Set Min Color\nto Blackpoint"
  xpos 1818
  ypos 662
 }
 Dot {
  name Dot38
  note_font_size 41
  xpos 1852
  ypos 760
 }
 Switch {
  inputs 2
  which {{minVal}}
  name SwitchMinColor
  xpos 1597
  ypos 757
 }
push $Nc490250
 Multiply {
  channels rgb
  value {{multBase}}
  name Multiply1
  label "mult black color"
  xpos 1138
  ypos 52
 }
 Multiply {
  channels rgb
  value 2
  name Multiply2
  label "hypot Extra Mult\n"
  xpos 1138
  ypos 84
  disable {{"mergeOp == 1 ? 0 : 1"}}
 }
push $Nc8432f0
 MergeExpression {
  inputs 2
  expr0 Br/Ar
  expr1 Bg/Ag
  expr2 Bb/Ab
  name MergeDivide
  xpos 1138
  ypos 194
 }
 Invert {
  channels rgb
  name Invert1
  xpos 1138
  ypos 239
 }
 Clamp {
  channels rgb
  name Clamp1
  xpos 1138
  ypos 263
 }
 Gamma {
  channels rgb
  value {{rolloffGamma}}
  name Gamma1
  xpos 1138
  ypos 287
 }
 Dot {
  name Dot19
  xpos 1172
  ypos 364
 }
set Nc9584c0 [stack 0]
 Dot {
  name Dot20
  xpos 1172
  ypos 478
 }
set Nc95d0d0 [stack 0]
 Dot {
  name Dot21
  xpos 1172
  ypos 586
 }
 Shuffle {
  red blue
  green blue
  alpha blue
  name Shuffle3
  tile_color 0x3fbfff
  label "\[value in] \[ expr \{ \[value out2] == \"none\" ? \" \" : \[concat --> \[value out2]] \}]"
  xpos 1022
  ypos 579
 }
push $Nc490250
 Dot {
  name Dot23
  xpos 706
  ypos -151
 }
 Dot {
  name Dot8
  label "Black Color"
  note_font_size 41
  xpos 706
  ypos 293
 }
set Nc97b8f0 [stack 0]
 Dot {
  name Dot2
  note_font_size 41
  xpos 706
  ypos 404
 }
set Nc980440 [stack 0]
 Dot {
  name Dot3
  note_font_size 41
  xpos 706
  ypos 523
 }
push $Nc95d0d0
 Shuffle {
  red green
  blue green
  alpha green
  name Shuffle2
  tile_color 0xbf00ff
  label "\[value in] \[ expr \{ \[value out2] == \"none\" ? \" \" : \[concat --> \[value out2]] \}]"
  xpos 1022
  ypos 471
 }
push $Nc980440
push $Nc9584c0
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle1
  tile_color 0xbf0000ff
  label "\[value in] \[ expr \{ \[value out2] == \"none\" ? \" \" : \[concat --> \[value out2]] \}]"
  xpos 1016
  ypos 357
 }
push $Nc97b8f0
push $Nc83e720
 Merge2 {
  inputs 2+1
  operation {{parent.Settings.mergeOpNum}}
  bbox B
  Achannels {rgba.red -rgba.green -rgba.blue -rgba.alpha}
  Bchannels {rgba.red -rgba.green -rgba.blue -rgba.alpha}
  output {rgba.red -rgba.green -rgba.blue -rgba.alpha}
  maskChannelInput -rgba.red
  name Merge3
  label red
  xpos 322
  ypos 357
 }
 Merge2 {
  inputs 2+1
  operation {{parent.Settings.mergeOpNum}}
  bbox B
  Achannels {-rgba.red rgba.green -rgba.blue -rgba.alpha}
  Bchannels {-rgba.red rgba.green -rgba.blue -rgba.alpha}
  output {-rgba.red rgba.green -rgba.blue -rgba.alpha}
  maskChannelInput -rgba.red
  name Merge4
  label green
  xpos 322
  ypos 471
 }
 Merge2 {
  inputs 2+1
  operation {{parent.Settings.mergeOpNum}}
  bbox B
  Achannels {-rgba.red -rgba.green rgba.blue -rgba.alpha}
  Bchannels {-rgba.red -rgba.green rgba.blue -rgba.alpha}
  output {-rgba.red -rgba.green rgba.blue -rgba.alpha}
  maskChannelInput -rgba.red
  name Merge5
  label blue
  xpos 322
  ypos 579
 }
 Merge2 {
  inputs 2
  operation max
  bbox B
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge1
  label "Set Min Color\nto Blackpoint"
  xpos 322
  ypos 748
 }
 Premult {
  name Premult4
  xpos 322
  ypos 881
  disable {{"! premultInput"}}
 }
push $Nc45b630
 Dot {
  name Dot28
  xpos -146
  ypos -418
 }
 Dot {
  name Dot30
  xpos -146
  ypos 1015
 }
 Merge2 {
  inputs 2+1
  operation copy
  bbox B
  Achannels {rgba.red rgba.green rgba.blue -rgba.alpha}
  Bchannels {rgba.red rgba.green rgba.blue -rgba.alpha}
  output {rgba.red rgba.green rgba.blue -rgba.alpha}
  name MergeKeymix
  label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
  xpos 322
  ypos 1012
 }
 Merge2 {
  inputs 2
  name Merge10
  label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
  xpos 322
  ypos 1189
  disable {{!previewPlotScan}}
 }
 Output {
  name Output1
  xpos 322
  ypos 1395
 }
 NoOp {
  inputs 0
  name Settings
  note_font_size 51
  xpos 2494
  ypos -414
  addUserKnob {20 User}
  addUserKnob {7 mergeOpNum l "Merge Op Num"}
  mergeOpNum {{"mergeOp == 0 ? 24 : 13"}}
 }
end_group
Premult {
 name Premult2
 selected true
 xpos -5167
 ypos -2997
}
Group {
 inputs 2
 name LightWrapPro_Beta
 help "Adds exponentially blurred lightwrap\n\nAdds a bright highlight wrap and an overall wrap"
 tile_color 0x1e252eff
 label "(\[value outputView])"
 note_font "DejaVu Sans Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
 note_font_color 0xb7e6ffff
 selected true
 xpos -5167
 ypos -2546
 mapsize {0.15 0.15}
 addUserKnob {20 LightWrapPro}
 addUserKnob {26 ""}
 addUserKnob {4 outputView l "Output View" t "Chose one to view while adjusting" M {"Final Output" "Light Flare Key" "Light Flare" "Wrap All" "Effect Only" "" "" "" "" "" ""}}
 addUserKnob {6 premultiplied l "A premultiplied" -STARTLINE}
 premultiplied true
 addUserKnob {26 highlightKey l " <b><u>Highlight Key</u></b>" T " "}
 addUserKnob {6 smoothKey l "Smooth Key" -STARTLINE}
 addUserKnob {7 blackPt l Black R 0 4}
 blackPt 1
 addUserKnob {7 whitePt l White R 0 4}
 whitePt 2
 addUserKnob {26 "" l "<b><u>Light Flare</u></b>"}
 addUserKnob {41 output2_2 l Operation: T ExponBlurSimple4.output2}
 addUserKnob {41 steps_2 l "  Steps" -STARTLINE T ExponBlurSimple4.steps}
 addUserKnob {7 WrapFlare_amount l Amount R 0 2}
 WrapFlare_amount 0.36
 addUserKnob {14 WrapFlare_size l "Blur Size" R 0 100}
 WrapFlare_size 3
 addUserKnob {6 Mult_Flare_panelDropped l "panel dropped state" +HIDDEN +STARTLINE}
 addUserKnob {6 Mult_Flare_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 Mult_Flare_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 Mult_Flare_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 Mult_Flare_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 Mult_Flare_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 Mult_Flare_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 Mult_Flare_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 Mult_Flare_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 Mult_Flare_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 "" l "<b><u>Wrap All</u></b>"}
 addUserKnob {41 output2 l Operation: T ExponBlurSimple1.output2}
 addUserKnob {41 steps_1 l "  Steps" -STARTLINE T ExponBlurSimple1.steps}
 addUserKnob {7 WrapAll_amount l Amount R 0 2}
 WrapAll_amount 0.3
 addUserKnob {14 WrapAll_size l "Blur Size" R 0 100}
 WrapAll_size 30
 addUserKnob {6 WrapAllMult_panelDropped l "panel dropped state" +HIDDEN +STARTLINE}
 addUserKnob {6 WrapAllMult_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 WrapAllMult_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 WrapAllMult_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 WrapAllMult_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 WrapAllMult_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 WrapAllMult_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 WrapAllMult_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 WrapAllMult_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 WrapAllMult_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 blendEdges l "<b><u>Blend Edges</u></b>"}
 addUserKnob {7 iColor_amount l Amount}
 addUserKnob {6 ColorBleedMult_panelDropped l "panel dropped state" +HIDDEN +STARTLINE}
 addUserKnob {6 ColorBleedMult_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 ColorBleedMult_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 ColorBleedMult_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 ColorBleedMult_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 ColorBleedMult_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 ColorBleedMult_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 ColorBleedMult_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 ColorBleedMult_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 ColorBleedMult_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 bleedColor_1 l "<b><u>Bleed Color</u></b>"}
 addUserKnob {7 BGwashAmount l Amount -STARTLINE}
 addUserKnob {6 pblacks l "Preserve Luminance" +STARTLINE}
 pblacks true
 addUserKnob {26 ""}
 addUserKnob {26 _1 l mask T ""}
 addUserKnob {41 maskChannelInput l "" -STARTLINE T MergeCopyLightWrapPro.maskChannelInput}
 addUserKnob {41 inject -STARTLINE T MergeCopyLightWrapPro.inject}
 addUserKnob {41 invert_mask l invert -STARTLINE T MergeCopyLightWrapPro.invert_mask}
 addUserKnob {41 fringe -STARTLINE T MergeCopyLightWrapPro.fringe}
 addUserKnob {41 mix T MergeCopyLightWrapPro.mix}
 addUserKnob {20 info l Info}
 addUserKnob {26 creator l Creator: T "<b><big>Tony Lyons"}
 addUserKnob {26 desc l Description: t "\n\n" T LightWrapPro}
 addUserKnob {26 ver l Version: T v04}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x402f27ff
  label "Bleed Color"
  note_font_size 60
  note_font_color 0xffffffff
  xpos -286
  ypos 2054
  bdwidth 756
  bdheight 815
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x39464200
  label "highlight key"
  note_font_size 40
  note_font_color 0xffffffff
  xpos 1662
  ypos 135
  bdwidth 279
  bdheight 356
 }
 Input {
  inputs 0
  name Inputmask
  xpos 1887
  ypos 3438
  number 2
 }
 Input {
  inputs 0
  name FG
  xpos -158
  ypos 56
 }
 AddChannels {
  channels rgba
  name AddChannels1
  xpos -158
  ypos 111
 }
 Dot {
  name Dot1
  xpos -124
  ypos 378
 }
set N10625390 [stack 0]
 Dot {
  name Dot7
  xpos -570
  ypos 378
 }
 Dot {
  name Dot46
  xpos -570
  ypos 2965
 }
set N10d092d0 [stack 0]
 Dot {
  name Dot15
  xpos 915
  ypos 2965
 }
set N110af230 [stack 0]
push $N10625390
 Input {
  inputs 0
  name BG
  label "\n"
  xpos 2264
  ypos 48
  number 1
 }
 AddChannels {
  channels rgba
  name AddChannels2
  xpos 2264
  ypos 119
 }
 Dot {
  name Dot2
  xpos 2298
  ypos 235
 }
set N11c92f90 [stack 0]
 Dot {
  name Dot3
  xpos 1736
  ypos 235
 }
set N11d21ab0 [stack 0]
 Dot {
  name Dot20
  xpos 1059
  ypos 237
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  bbox B
  name Copy3
  xpos 1025
  ypos 368
 }
 Invert {
  channels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
  name Invert1
  xpos 1025
  ypos 420
 }
 Premult {
  name Premult2
  xpos 1025
  ypos 476
 }
set Nfe332d0 [stack 0]
 Dot {
  name Dot9
  xpos 1059
  ypos 689
 }
set N1107f020 [stack 0]
push $N11d21ab0
 Group {
  name lumaKeyer
  tile_color 0x421010ff
  xpos 1821
  ypos 371
  addUserKnob {20 User l lumaKeyer}
  addUserKnob {7 black}
  black {{parent.blackPt}}
  addUserKnob {7 white R 0 3}
  white {{parent.whitePt}}
  addUserKnob {6 invert +STARTLINE}
  addUserKnob {26 ""}
  addUserKnob {22 btn l DerekVFX.ca T "import os\nimport sys\n\ntry:\n    import subprocess\n    def _run(cmd, shell, wait):\n        opener = subprocess.Popen(cmd, shell=shell)\n        if wait:\n            opener.wait()\n        return opener.pid\nexcept ImportError:\n    import popen2\n    def _run(cmd, shell, wait):\n        opener = popen2.Popen3(cmd)\n        if wait:\n            opener.wait()\n        return opener.pid\n\ndef _open(url, wait=0):\n    if sys.platform == \"darwin\":\n        cmd = \[\"open\", url]\n    elif hasattr(os, \"startfile\"):\n        return os.startfile(url)\n    elif os.environ.has_key(\"KDE_FULL_SESSION\") or os.environ.has_key(\"KDE_MULTIHEAD\") or \\\n        os.environ.has_key(\"GNOME_DESKTOP_SESSION_ID\") or os.environ.has_key(\"GNOME_KEYRING_SOCKET\"):\n        cmd = \[\"xdg-open\", url]\n    else:\n        raise OSError, \"Desktop not supported.\"\n\n    return _run(cmd, 0, wait)\n\n_open('http://www.derekvfx.ca/')" +STARTLINE}
 }
  Input {
   inputs 0
   name Input1
   xpos 29
   ypos -241
  }
set N11bec680 [stack 0]
  Colorspace {
   colorspace_out HSL
   name Colorspace1
   xpos -45
   ypos -179
  }
  Expression {
   expr3 smoothstep(parent.black,parent.white,b)
   name Expression1
   selected true
   xpos -45
   ypos -132
  }
  Expression {
   expr3 1-a
   name Expression2
   xpos -45
   ypos -106
   disable {{"parent.invert == 0"}}
  }
set N1103f8e0 [stack 0]
push $N11bec680
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   xpos 57
   ypos -79
  }
  Output {
   name Output1
   xpos 63
   ypos -8
  }
push $N1103f8e0
  Viewer {
   frame_range 1-100
   name Viewer1
   xpos -176
   ypos -62
   addUserKnob {20 User}
   addUserKnob {6 toAddBtn -STARTLINE}
   toAddBtn true
   addUserKnob {6 toAddBtn_1 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn_2 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn_3 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn_4 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn_5 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn_6 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn -STARTLINE}
   toAddBtn true
  }
 end_group
push $N11d21ab0
 Keyer {
  operation "luminance key"
  range {{parent.blackPt} {parent.whitePt} {range.B} {range.B}}
  name Keyer2
  xpos 1702
  ypos 361
 }
 Switch {
  inputs 2
  which {{parent.smoothKey}}
  name Switch2
  label "\[value which]"
  xpos 1702
  ypos 419
 }
 Dot {
  name Dot4
  note_font_size 41
  xpos 1736
  ypos 495
 }
set N10fbc7f0 [stack 0]
 Premult {
  name Premult1
  xpos 1702
  ypos 610
 }
 Merge2 {
  inputs 2
  operation mask
  name Merge3
  xpos 1702
  ypos 686
 }
 Dot {
  name Dot6
  xpos 1736
  ypos 1017
 }
 Group {
  name ExponBlurSimple1
  onCreate "n = nuke.thisNode()\nn.knob('size').setRange(-100, 100)\nn.knob('adjustBBoxPixels').setRange(0, 400)\nn.knob('adjustBBoxPercent').setRange(1, 2)\nn.knob('safeBBoxPixels').setRange(0, 400)\nn.knob('safeBBoxPercent').setRange(1, 2)"
  knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == \"includeOriginal\":\n    if n.knob('includeOriginal').getValue() == 1:\n        merge = nuke.toNode(\"Merge1\")\n        original = nuke.toNode('Original')\n        AvgMult = nuke.toNode(\"AverageMult\")\n        steps = int(n.knob('steps').getValue())\n        merge.setInput(steps+1, original)\n        AvgMult\['whitepoint'].setValue(2 if steps<2 else steps+1)\n        \n    else:\n        merge.setInput(steps+1, None)\n        AvgMult\['whitepoint'].setValue(2 if steps<2 else steps)\n        \nelif k.name() == \"steps\":\n    \n    s = int(k.value())\n    if s<1:\n        k.setValue(1)\n    else:\n        start = nuke.toNode(\"Start\")\n        end   = nuke.toNode(\"End\")\n        b1    = nuke.toNode(\"Blur1\")\n        merge = nuke.toNode(\"Merge1\")\n        AvgMult = nuke.toNode(\"AverageMult\")\n        \n        b1x   = b1.xpos()\n        b1y   = b1.ypos()\n        b1n   = b1.name()\n        \n        steps = int(n.knob('steps').getValue())\n        size  = n.knob('size').getValue()\n        mult  = n.knob('mult').getValue()\n        \n        #b1.setInput(0, start)\n        for i in range(1,merge.inputs()):\n            merge.setInput(i,None)\n        merge.setInput(0, b1)\n        \[nuke.delete(i) for i in nuke.allNodes() if i.xpos()>start.xpos()]\n        for i in range(1,steps):\n            # Blur\n            b = nuke.nodes.Blur()\n            b.setXYpos(b1x+i*100,b1y)\n            b.setInput(0,start)\n            b\[\"channels\"].setValue(\"rgba\")\n            b\[\"crop\"].setValue(0)\n            b\[\"size\"].setValue(0, 1)\n            b\[\"size\"].setExpression(\"(Blur1.size)*(mult)**%s\"%(i))\n            b\[\"label\"].setValue(\"\[value size]\")\n            merge.setInput(i if i<2 else i+1, b)\n            AvgMult\['whitepoint'].setValue(i if i<2 else i+1)\n            \n        if n.knob('includeOriginal').getValue() == 1:\n            merge = nuke.toNode(\"Merge1\")\n            original = nuke.toNode('Original')\n            AvgMult = nuke.toNode(\"AverageMult\")\n            steps = int(n.knob('steps').getValue())\n            merge.setInput(steps+1, original)\n            AvgMult\['whitepoint'].setValue(2 if steps<2 else steps+1)\n            \nelif k.name() == \"output2\":\n    if n.knob(\"output2\").getValue() == 4:\n        n.knob('AvgMaxOriginal').setVisible(True)\n    else:\n        n.knob('AvgMaxOriginal').setVisible(False)\n        \nelif k.name() == \"safeBBox\":\n    if n.knob(\"safeBBox\").getValue() == 0:\n        n.knob('safeBBoxText').setVisible(False)\n        n.knob('safetyBBoxMethod').setVisible(False)\n        n.knob('safeBBoxPixels').setVisible(False)\n        n.knob('safeBBoxPercent').setVisible(False)\n        \n    elif n.knob(\"safeBBox\").getValue() == 1:\n        n.knob('safetyBBoxMethod').setVisible(True)\n        n.knob('safeBBoxText').setVisible(True)\n        if n.knob('safetyBBoxMethod').value() == \"pixels\":\n            n.knob('safeBBoxPixels').setVisible(True)\n            n.knob('safeBBoxPercent').setVisible(False)\n        elif n.knob('safetyBBoxMethod').value() == \"percent\":\n            n.knob('safeBBoxPixels').setVisible(False)\n            n.knob('safeBBoxPercent').setVisible(True)\n            \nelif k.name() == \"safetyBBoxMethod\":\n    if n.knob(\"safetyBBoxMethod\").value() == \"pixels\":\n        n.knob('safeBBoxPixels').setVisible(True)\n        n.knob('safeBBoxPercent').setVisible(False)\n    elif n.knob(\"safetyBBoxMethod\").value() == \"percent\":\n        n.knob('safeBBoxPixels').setVisible(False)\n        n.knob('safeBBoxPercent').setVisible(True)\n        \nelif k.name() == \"adjustBBoxExtra\":\n    if n.knob(\"adjustBBoxExtra\").value() == \"pixels\":\n        n.knob('adjustBBoxPixels').setVisible(True)\n        n.knob('adjustBBoxPercent').setVisible(False)\n    elif n.knob(\"adjustBBoxExtra\").value() == \"percent\":\n        n.knob('adjustBBoxPixels').setVisible(False)\n        n.knob('adjustBBoxPercent').setVisible(True)\n"
  tile_color 0xcc804eff
  label "(\[value output2])"
  note_font "Verdana Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
  note_font_color 0xffffffff
  xpos 1702
  ypos 1117
  addUserKnob {20 ExponBlurSimple}
  addUserKnob {41 channels T Shuffle1.in}
  addUserKnob {41 maskChannelMask_1 l area T Multiply1.maskChannelMask}
  addUserKnob {41 inject_1 l inject -STARTLINE T Multiply1.inject}
  addUserKnob {41 invert_mask_1 l invert -STARTLINE T Multiply1.invert_mask}
  addUserKnob {41 fringe_1 l fringe -STARTLINE T Multiply1.fringe}
  addUserKnob {26 ""}
  addUserKnob {4 output2 l Operation: M {Screen Plus Over Hypot Average Max Min "" "" "" "" ""}}
  output2 Over
  addUserKnob {3 steps l "  Steps" -STARTLINE}
  steps 6
  addUserKnob {3 mergeNumber -STARTLINE +INVISIBLE}
  mergeNumber {{"output2 == 0 ? 25 : output2 == 1 ? 24 : output2 == 2 ? 22 : output2 == 3 ? 13 : output2 == 4 ? 24 : output2 == 5 ? 17 : 18"}}
  addUserKnob {26 text l " " -STARTLINE T " "}
  addUserKnob {6 includeOriginal l "Include Original?" -STARTLINE}
  addUserKnob {6 AvgMaxOriginal l "Use Max of Average and Original" +HIDDEN +STARTLINE}
  addUserKnob {14 size l Size R -100 100}
  size {{parent.WrapFlare_size} {parent.WrapFlare_size}}
  addUserKnob {7 mult l Multiplier R 1 8}
  mult 2
  addUserKnob {26 text_1 l " " T " "}
  addUserKnob {14 postBlur l "Post Blur" R 0 100}
  addUserKnob {26 ""}
  addUserKnob {41 maskChannelMask l mask T MergeKeymix.maskChannelMask}
  addUserKnob {41 inject -STARTLINE T MergeKeymix.inject}
  addUserKnob {41 invert_mask l invert -STARTLINE T MergeKeymix.invert_mask}
  addUserKnob {41 fringe -STARTLINE T MergeKeymix.fringe}
  addUserKnob {4 bbox l BBox: M {union intersectionMask A B "input format" "" "" "" "" "" "" "" ""}}
  addUserKnob {6 blackOutside l "Black Outside" -STARTLINE}
  addUserKnob {6 safeBBox l "Safe BBox" t "If the output BBox is larger than the input format and the input box combined. the result will be max of the input/format bbox plus a safety \"buffer\" in pixels or percent \n\nTurning off might make your BBox grow exponentially with high blur values" -STARTLINE}
  safeBBox true
  addUserKnob {26 safeBBoxText l " " T " "}
  addUserKnob {4 safetyBBoxMethod l "Safe BBox Buffer" -STARTLINE M {pixels percent "" "" "" "" "" "" "" "" "" "" "" "" ""}}
  safetyBBoxMethod percent
  addUserKnob {14 safeBBoxPixels l "" -STARTLINE +HIDDEN R 0 400}
  safeBBoxPixels 100
  addUserKnob {14 safeBBoxPercent l "" -STARTLINE R 1 2}
  safeBBoxPercent 1.1
  addUserKnob {26 text_3 l " " T " "}
  addUserKnob {4 adjustBBoxExtra l "Extra BBox Adjust" -STARTLINE M {pixels percent "" "" "" "" "" "" "" "" "" "" "" "" ""}}
  addUserKnob {14 adjustBBoxPixels l "" -STARTLINE R 0 400}
  addUserKnob {14 adjustBBoxPercent l "" -STARTLINE +HIDDEN R 1 2}
  adjustBBoxPercent 1
  addUserKnob {41 mix T MergeKeymix.mix}
  addUserKnob {20 info l Info}
  addUserKnob {26 creator l Creator: T "Tony Lyons"}
  addUserKnob {26 desc l Description: t "Add description and tooltip for gizmo" T ExponBlurSimple}
  addUserKnob {26 ver l Version: T v02}
 }
  BackdropNode {
   inputs 0
   name BackdropNode1
   tile_color 0x535e5a00
   label "BBox Management"
   note_font_size 30
   note_font_color 0xffffffff
   xpos -529
   ypos 492
   bdwidth 341
   bdheight 525
  }
  Input {
   inputs 0
   name Inputimg
   xpos 0
   ypos -969
  }
  Dot {
   name Dot16
   note_font_size 41
   xpos 34
   ypos -802
  }
set N11c85580 [stack 0]
  Dot {
   name Dot2
   note_font_size 41
   xpos -367
   ypos -802
  }
  Dot {
   name Dot18
   label B
   note_font_size 41
   xpos -367
   ypos 434
  }
  Dot {
   name Dot11
   note_font_size 41
   xpos -367
   ypos 623
  }
set N10820db0 [stack 0]
  Dot {
   name Dot3
   note_font_size 41
   xpos -367
   ypos 675
  }
set N10d0f2b0 [stack 0]
  Dot {
   name Dot8
   note_font_size 41
   xpos -463
   ypos 675
  }
  Dot {
   name Dot15
   note_font_size 41
   xpos -463
   ypos 831
  }
push $N11c85580
  Dot {
   name Dot1
   note_font_size 41
   xpos 461
   ypos -802
  }
  Shuffle {
   name Shuffle1
   label "\[value in]"
   xpos 427
   ypos -756
  }
  Remove {
   operation keep
   channels rgba
   name Remove1
   xpos 427
   ypos -718
  }
  Dot {
   name Dot21
   note_font_size 41
   xpos 461
   ypos -597
  }
set N1108d150 [stack 0]
  Invert {
   channels rgba
   name Invert1
   xpos 695
   ypos -601
   disable {{"parent.size < 0 ? 0 : 1"}}
  }
set N1107f810 [stack 0]
  Dot {
   name Dot4
   note_font_size 41
   xpos 540
   ypos -543
  }
  NoOp {
   name Original
   xpos 506
   ypos -327
  }
  Dot {
   name Dot5
   note_font_size 41
   xpos 540
   ypos 14
  }
  Crop {
   inputs 0
   box {{input.format.x} {input.format.y} {input.format.r} {input.format.t}}
   reformat true
   crop false
   name Crop1
   xpos 210
   ypos -750
   addUserKnob {20 User}
   addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  }
  AddChannels {
   channels rgba
   name AddChannels2
   xpos 210
   ypos -724
  }
push $N11c85580
  Merge2 {
   inputs 2
   name Merge3
   label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
   xpos 83
   ypos -671
  }
  NoOp {
   name BBoxInput
   xpos 83
   ypos -628
   addUserKnob {20 User}
   addUserKnob {15 bbox}
   bbox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
  }
  Input {
   inputs 0
   name Inputarea
   xpos 289
   ypos -638
   number 2
  }
  AddChannels {
   channels alpha
   color 1
   name AddChannels1
   xpos 289
   ypos -580
  }
  Invert {
   channels rgba
   name Invert3
   xpos 289
   ypos -503
  }
push $N1107f810
  Multiply {
   inputs 1+1
   channels rgba
   value 0
   name Multiply1
   label "\[value value]"
   xpos 695
   ypos -509
  }
  NoOp {
   name Start
   xpos 695
   ypos -450
  }
set N10cbc770 [stack 0]
  Blur {
   channels rgba
   size {{(Blur1.size)*(mult)**5} {(Blur1.size)*(mult)**5}}
   crop false
   name Blur6
   label "\[value size]"
   xpos 1195
   ypos -370
  }
push $N10cbc770
  Blur {
   channels rgba
   size {{(Blur1.size)*(mult)**4} {(Blur1.size)*(mult)**4}}
   crop false
   name Blur5
   label "\[value size]"
   xpos 1095
   ypos -370
  }
push $N10cbc770
  Blur {
   channels rgba
   size {{(Blur1.size)*(mult)**3} {(Blur1.size)*(mult)**3}}
   crop false
   name Blur4
   label "\[value size]"
   xpos 995
   ypos -370
  }
push $N10cbc770
  Blur {
   channels rgba
   size {{(Blur1.size)*(mult)**2} {(Blur1.size)*(mult)**2}}
   crop false
   name Blur3
   label "\[value size]"
   xpos 895
   ypos -370
  }
push 0
push $N10cbc770
  Blur {
   channels rgba
   size {{(Blur1.size)*(mult)**1} {(Blur1.size)*(mult)**1}}
   crop false
   name Blur2
   label "\[value size]"
   xpos 795
   ypos -370
  }
push $N10cbc770
  Blur {
   channels rgba
   size {{parent.size.w} {parent.size.h}}
   name Blur1
   label "\[value size]"
   xpos 695
   ypos -370
  }
  Merge2 {
   inputs 6+1
   operation {{parent.mergeNumber}}
   name Merge1
   label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
   xpos 695
   ypos -256
  }
  NoOp {
   name End
   xpos 695
   ypos -230
  }
set N11be52e0 [stack 0]
  CopyBBox {
   inputs 2
   name CopyBBox1
   xpos 585
   ypos -175
  }
  Group {
   name BBoxToFormat
   onCreate "n = nuke.thisNode()\ninputFormat = n.knob(\"inputFormat\")\ninputBBox = n.knob(\"inputBBox\")\ncrop = nuke.toNode(\"Crop6\")\ncropb = crop.knob('box')\noutputBBox = n.knob('outputBBox')\noutputBBoxCenter = n.knob(\"outputBBoxCenter\")\n\ninputFormat.setFlag(0x0000000000008000)\ninputBBox.setFlag(0x0000000000008000)\ncropb.setFlag(0x0000000000008000)\noutputBBox.setFlag(0x0000000000008000)\noutputBBoxCenter.setFlag(0x0000000000008000)\n\nn = nuke.thisNode()\nn.knob(\"overscan\").setRange(0,400)\nn.knob(\"overscanPercent\").setRange(1,4)"
   tile_color 0xa57aaaff
   note_font "Verdana Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
   note_font_color 0xffffffff
   xpos 585
   ypos -151
   addUserKnob {20 CropBBox}
   addUserKnob {4 type l Type +INVISIBLE M {"To Format" "To BBox"}}
   addUserKnob {41 intersect T Crop6.intersect}
   addUserKnob {6 blackOutside l "Black Outside" -STARTLINE}
   addUserKnob {4 overscanType l "Overscan Type:" M {Pixels Percentage}}
   overscanType {{parent.safetyBBoxMethod}}
   addUserKnob {14 overscan l Overscan R 0 400}
   overscan {{parent.safeBBoxPixels} {parent.safeBBoxPixels}}
   addUserKnob {14 overscanPercent l "Overscan Percent" R 1 4}
   overscanPercent {{parent.safeBBoxPercent} {parent.safeBBoxPercent}}
   addUserKnob {20 inputBbox l "BBox Data" n 1}
   addUserKnob {15 inputFormat l "Input Format"}
   inputFormat {0 0 {input.width} {input.height}}
   addUserKnob {15 inputBBox l "Input BBox"}
   inputBBox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
   addUserKnob {12 outputBBoxCenter l OutputBBoxCenter}
   outputBBoxCenter {{OutputBBox1.outputBBoxCenter.w} {OutputBBox1.outputBBoxCenter.h}}
   addUserKnob {15 outputBBox l "Output BBox"}
   outputBBox {{OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox}}
   addUserKnob {20 endGroup n -1}
   addUserKnob {20 info_1 l Info}
   addUserKnob {26 creator l Creator: T "<b><big>Tony Lyons"}
   addUserKnob {26 desc l Description: t "crop to inputformat\n\ndisplays values of input bbox" T CropBBox}
   addUserKnob {26 ver l Version: T v02}
  }
   Input {
    inputs 0
    name Input
    xpos 261
    ypos 394
   }
   Dot {
    name Dot2
    note_font_size 41
    xpos 295
    ypos 462
   }
set N11d57e60 [stack 0]
   Dot {
    name Dot1
    note_font_size 41
    xpos -160
    ypos 462
   }
set N11139810 [stack 0]
push $N11d57e60
   Crop {
    box {{parent.inputBBox} {parent.inputBBox} {parent.inputBBox} {parent.inputBBox}}
    crop {{parent.blackOutside}}
    name Crop6
    xpos 261
    ypos 510
    addUserKnob {20 User}
    addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_1 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_2 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_3 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_4 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_5 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_6 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_7 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_8 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_9 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_10 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_11 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_12 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_13 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_14 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_15 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_16 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_17 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_18 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_19 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   }
set N1113e3d0 [stack 0]
   Remove {
    operation keep
    channels none
    name Remove1
    xpos 120
    ypos 504
   }
set N11bfd6f0 [stack 0]
   Transform {
    scale {{parent.overscanPercent} {parent.overscanPercent}}
    center {{((input.bbox.r-input.bbox.x)/2)+input.bbox.x} {((input.bbox.t-input.bbox.y)/2)+input.bbox.y}}
    shutteroffset centred
    name Transform1
    selected true
    xpos 120
    ypos 553
   }
push $N11bfd6f0
   AdjBBox {
    numpixels {{parent.overscan} {parent.overscan}}
    name AdjBBox1
    xpos -5
    ypos 510
   }
   Switch {
    inputs 2
    which {{overscanType}}
    name Switch2
    label "\[value which]"
    xpos -5
    ypos 549
   }
   Merge2 {
    inputs 2
    bbox intersection
    Achannels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
    Bchannels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
    output {-rgba.red -rgba.green -rgba.blue rgba.alpha}
    name Merge1
    xpos -5
    ypos 647
    disable {{!parent.Crop6.intersect}}
   }
push $N11139810
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos -194
    ypos 653
   }
   BlackOutside {
    name BlackOutside1
    xpos -194
    ypos 692
    disable {{!parent.blackOutside}}
   }
   Dot {
    name Dot4
    note_font_size 41
    xpos -160
    ypos 769
   }
push $N1113e3d0
   Switch {
    inputs 2
    which {{"overscanType == 0 ? overscan.w != 0 || overscan.h != 0 : overscanPercent.w != 1 || overscanPercent.h != 1 ? 1 : 0"}}
    name Switch1
    label "\[value which]"
    xpos 261
    ypos 759
   }
set N11b931f0 [stack 0]
   Output {
    name Output1
    xpos 261
    ypos 921
   }
push $N11b931f0
   NoOp {
    name OutputBBox1
    xpos 378
    ypos 821
    addUserKnob {20 User}
    addUserKnob {15 OutputBBox l "Output BBox"}
    OutputBBox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
    addUserKnob {14 outputBBoxCenter l "Output BBox Center" R 0 100}
    outputBBoxCenter {{OutputBBox.x+(OutputBBox.r-OutputBBox.x)/2} {OutputBBox.y+(OutputBBox.t-OutputBBox.y)/2}}
   }
  end_group
push $N11be52e0
  Merge2 {
   inputs 2
   bbox intersection
   name Merge4
   xpos 585
   ypos -127
  }
push $N11be52e0
  CopyBBox {
   inputs 2
   name CopyBBox2
   xpos 585
   ypos -101
  }
push $N11be52e0
  Switch {
   inputs 2
   which {{"parent.safeBBox && ((BBoxResult.bbox.x < BBoxInput.bbox.x || BBoxResult.bbox.y < BBoxInput.bbox.y || BBoxResult.bbox.r > BBoxInput.bbox.r || BBoxResult.bbox.t > BBoxInput.bbox.t))"}}
   name Switch2
   label "\[value which]"
   xpos 695
   ypos -106
  }
  Grade {
   channels rgba
   whitepoint 6
   black_clamp false
   name AverageMult
   xpos 695
   ypos -37
   disable {{"output2 == 4 ? 0 : 1"}}
  }
  Merge2 {
   inputs 2
   operation max
   name Merge2
   label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
   xpos 695
   ypos 10
   disable {{"output2 == 4 && includeOriginal == 1 && AvgMaxOriginal == 1 ? 0 : 1"}}
  }
  Blur {
   channels rgba
   size {{postBlur} {postBlur}}
   name BlurOriginal
   label "\[value size]"
   xpos 695
   ypos 59
  }
  Invert {
   channels rgba
   name Invert2
   xpos 695
   ypos 97
   disable {{"parent.size < 0 ? 0 : 1"}}
  }
push $N1108d150
  Switch {
   inputs 2
   which {{"parent.size == 0 ? 0 : 1"}}
   name Switch1
   label "\[value which]"
   xpos 427
   ypos 93
  }
push $N11c85580
  ShuffleCopy {
   inputs 2
   in2 none
   black red
   white green
   red2 blue
   green2 alpha
   out none
   out2 {{{parent.Shuffle1.in}}}
   name ShuffleCopy1
   xpos 0
   ypos 97
  }
  Dot {
   name Dot17
   label A
   note_font_size 41
   xpos 34
   ypos 455
  }
  Dot {
   name Dot7
   note_font_size 41
   xpos 34
   ypos 585
  }
set N11e0c110 [stack 0]
  Dot {
   name Dot12
   note_font_size 41
   xpos -260
   ypos 585
  }
  Dot {
   name Dot13
   note_font_size 41
   xpos -260
   ypos 799
  }
push $N10820db0
  Input {
   inputs 0
   name Inputmask
   xpos 346
   ypos 325
   number 1
  }
  Dot {
   name Dot19
   label Mask
   note_font_size 41
   xpos 380
   ypos 438
  }
set N11e1efc0 [stack 0]
  Dot {
   name Dot20
   note_font_size 41
   xpos 270
   ypos 438
  }
push $N11e0c110
  Merge2 {
   inputs 2
   bbox intersection
   Achannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
   Bchannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
   output {rgba.red -rgba.green -rgba.blue rgba.alpha}
   name MergeIntersection
   xpos 236
   ypos 575
   disable {{"!\[exists parent.input1]"}}
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
   Bchannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
   output {rgba.red -rgba.green -rgba.blue rgba.alpha}
   name MergeUnion
   xpos 236
   ypos 613
   disable {{"!\[exists parent.input1]"}}
  }
  Dot {
   name Dot6
   label "intersection\nof (Mask and A) + B"
   note_font_size 14
   note_font_color 0xffffffff
   xpos 270
   ypos 773
  }
push $N11e1efc0
  Dot {
   name Dot10
   note_font_size 41
   xpos 380
   ypos 675
  }
push $N11e0c110
push $N10d0f2b0
  Merge2 {
   inputs 2+1
   operation copy
   Achannels none
   Bchannels none
   output none
   also_merge all
   name MergeKeymix
   xpos 0
   ypos 665
  }
  Dot {
   name Dot14
   note_font_size 41
   xpos 34
   ypos 747
  }
set N11e62fb0 [stack 0]
push $N10d0f2b0
  CopyBBox {
   inputs 2
   name CopyBBoxUnion
   xpos -401
   ypos 743
   disable {{parent.bbox==0?0:1}}
  }
  CopyBBox {
   inputs 2
   name CopyBBoxIntersection
   xpos -401
   ypos 769
   disable {{"parent.bbox==1 ? 0 : 1"}}
  }
  CopyBBox {
   inputs 2
   name CopyBBoxA
   xpos -401
   ypos 795
   disable {{"parent.bbox==2 ? 0 : 1"}}
  }
  CopyBBox {
   inputs 2
   name CopyBBoxB
   xpos -401
   ypos 827
   disable {{"parent.bbox==3 ? 0 : 1"}}
  }
  Crop {
   box {0 0 {parent.width} {parent.height}}
   crop false
   name CopyBBoxFormat
   xpos -401
   ypos 853
   disable {{"parent.bbox==4 ? 0 : 1"}}
   addUserKnob {20 User}
   addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_1 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_2 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_3 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_4 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_5 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_6 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_7 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_8 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_9 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_10 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_11 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  }
set N11e86ba0 [stack 0]
  Transform {
   scale {{parent.adjustBBoxPercent} {parent.adjustBBoxPercent}}
   center {{((input.bbox.r-input.bbox.x)/2)+input.bbox.x} {((input.bbox.t-input.bbox.y)/2)+input.bbox.y}}
   black_outside false
   shutteroffset centred
   name TransformBBoxAdjustPercent
   xpos -516
   ypos 898
  }
push $N11e86ba0
  AdjBBox {
   numpixels {{parent.adjustBBoxPixels} {parent.adjustBBoxPixels}}
   name AdjBBoxPixels
   xpos -401
   ypos 901
  }
  Switch {
   inputs 2
   which {{adjustBBoxExtra}}
   name Switch3
   xpos -401
   ypos 940
  }
  Dot {
   name Dot9
   note_font_size 41
   xpos -367
   ypos 993
  }
push $N11e62fb0
  CopyBBox {
   inputs 2
   name CopyBBox
   xpos 0
   ypos 989
  }
  BlackOutside {
   name BlackOutside1
   xpos 0
   ypos 1015
   disable {{!parent.blackOutside}}
  }
  Output {
   name Output1
   xpos 0
   ypos 1155
  }
push $N11be52e0
  NoOp {
   name BBoxResult
   xpos 588
   ypos -223
   addUserKnob {20 User}
   addUserKnob {15 bbox}
   bbox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
  }
 end_group
 Grade {
  channels all
  white {{WrapFlare_amount/10}}
  name FlareAmount
  xpos 1702
  ypos 1377
 }
 Dot {
  name Dot25
  label "LIGHT FLARE"
  note_font_size 61
  xpos 1736
  ypos 1801
 }
set N11ee14d0 [stack 0]
 Merge2 {
  inputs 2
  operation mask
  name Merge13
  xpos 1708
  ypos 2955
 }
set N11ee6050 [stack 0]
push $N110af230
push $N1107f020
 Group {
  name ExponBlurSimple4
  onCreate "n = nuke.thisNode()\nn.knob('size').setRange(-100, 100)\nn.knob('adjustBBoxPixels').setRange(0, 400)\nn.knob('adjustBBoxPercent').setRange(1, 2)\nn.knob('safeBBoxPixels').setRange(0, 400)\nn.knob('safeBBoxPercent').setRange(1, 2)"
  knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == \"includeOriginal\":\n    if n.knob('includeOriginal').getValue() == 1:\n        merge = nuke.toNode(\"Merge1\")\n        original = nuke.toNode('Original')\n        AvgMult = nuke.toNode(\"AverageMult\")\n        steps = int(n.knob('steps').getValue())\n        merge.setInput(steps+1, original)\n        AvgMult\['whitepoint'].setValue(2 if steps<2 else steps+1)\n        \n    else:\n        merge.setInput(steps+1, None)\n        AvgMult\['whitepoint'].setValue(2 if steps<2 else steps)\n        \nelif k.name() == \"steps\":\n    \n    s = int(k.value())\n    if s<1:\n        k.setValue(1)\n    else:\n        start = nuke.toNode(\"Start\")\n        end   = nuke.toNode(\"End\")\n        b1    = nuke.toNode(\"Blur1\")\n        merge = nuke.toNode(\"Merge1\")\n        AvgMult = nuke.toNode(\"AverageMult\")\n        \n        b1x   = b1.xpos()\n        b1y   = b1.ypos()\n        b1n   = b1.name()\n        \n        steps = int(n.knob('steps').getValue())\n        size  = n.knob('size').getValue()\n        mult  = n.knob('mult').getValue()\n        \n        #b1.setInput(0, start)\n        for i in range(1,merge.inputs()):\n            merge.setInput(i,None)\n        merge.setInput(0, b1)\n        \[nuke.delete(i) for i in nuke.allNodes() if i.xpos()>start.xpos()]\n        for i in range(1,steps):\n            # Blur\n            b = nuke.nodes.Blur()\n            b.setXYpos(b1x+i*100,b1y)\n            b.setInput(0,start)\n            b\[\"channels\"].setValue(\"rgba\")\n            b\[\"crop\"].setValue(0)\n            b\[\"size\"].setValue(0, 1)\n            b\[\"size\"].setExpression(\"(Blur1.size)*(mult)**%s\"%(i))\n            b\[\"label\"].setValue(\"\[value size]\")\n            merge.setInput(i if i<2 else i+1, b)\n            AvgMult\['whitepoint'].setValue(i if i<2 else i+1)\n            \n        if n.knob('includeOriginal').getValue() == 1:\n            merge = nuke.toNode(\"Merge1\")\n            original = nuke.toNode('Original')\n            AvgMult = nuke.toNode(\"AverageMult\")\n            steps = int(n.knob('steps').getValue())\n            merge.setInput(steps+1, original)\n            AvgMult\['whitepoint'].setValue(2 if steps<2 else steps+1)\n            \nelif k.name() == \"output2\":\n    if n.knob(\"output2\").getValue() == 4:\n        n.knob('AvgMaxOriginal').setVisible(True)\n    else:\n        n.knob('AvgMaxOriginal').setVisible(False)\n        \nelif k.name() == \"safeBBox\":\n    if n.knob(\"safeBBox\").getValue() == 0:\n        n.knob('safeBBoxText').setVisible(False)\n        n.knob('safetyBBoxMethod').setVisible(False)\n        n.knob('safeBBoxPixels').setVisible(False)\n        n.knob('safeBBoxPercent').setVisible(False)\n        \n    elif n.knob(\"safeBBox\").getValue() == 1:\n        n.knob('safetyBBoxMethod').setVisible(True)\n        n.knob('safeBBoxText').setVisible(True)\n        if n.knob('safetyBBoxMethod').value() == \"pixels\":\n            n.knob('safeBBoxPixels').setVisible(True)\n            n.knob('safeBBoxPercent').setVisible(False)\n        elif n.knob('safetyBBoxMethod').value() == \"percent\":\n            n.knob('safeBBoxPixels').setVisible(False)\n            n.knob('safeBBoxPercent').setVisible(True)\n            \nelif k.name() == \"safetyBBoxMethod\":\n    if n.knob(\"safetyBBoxMethod\").value() == \"pixels\":\n        n.knob('safeBBoxPixels').setVisible(True)\n        n.knob('safeBBoxPercent').setVisible(False)\n    elif n.knob(\"safetyBBoxMethod\").value() == \"percent\":\n        n.knob('safeBBoxPixels').setVisible(False)\n        n.knob('safeBBoxPercent').setVisible(True)\n        \nelif k.name() == \"adjustBBoxExtra\":\n    if n.knob(\"adjustBBoxExtra\").value() == \"pixels\":\n        n.knob('adjustBBoxPixels').setVisible(True)\n        n.knob('adjustBBoxPercent').setVisible(False)\n    elif n.knob(\"adjustBBoxExtra\").value() == \"percent\":\n        n.knob('adjustBBoxPixels').setVisible(False)\n        n.knob('adjustBBoxPercent').setVisible(True)\n"
  tile_color 0xcc804eff
  label "(\[value output2])"
  note_font "Verdana Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
  note_font_color 0xffffffff
  xpos 1025
  ypos 1100
  addUserKnob {20 ExponBlurSimple}
  addUserKnob {41 channels T Shuffle1.in}
  addUserKnob {41 maskChannelMask_1 l area T Multiply1.maskChannelMask}
  addUserKnob {41 inject_1 l inject -STARTLINE T Multiply1.inject}
  addUserKnob {41 invert_mask_1 l invert -STARTLINE T Multiply1.invert_mask}
  addUserKnob {41 fringe_1 l fringe -STARTLINE T Multiply1.fringe}
  addUserKnob {26 ""}
  addUserKnob {4 output2 l Operation: M {Screen Plus Over Hypot Average Max Min "" "" "" "" ""}}
  output2 Plus
  addUserKnob {3 steps l "  Steps" -STARTLINE}
  steps 6
  addUserKnob {3 mergeNumber -STARTLINE +INVISIBLE}
  mergeNumber {{"output2 == 0 ? 25 : output2 == 1 ? 24 : output2 == 2 ? 22 : output2 == 3 ? 13 : output2 == 4 ? 24 : output2 == 5 ? 17 : 18"}}
  addUserKnob {26 text l " " -STARTLINE T " "}
  addUserKnob {6 includeOriginal l "Include Original?" -STARTLINE}
  includeOriginal true
  addUserKnob {6 AvgMaxOriginal l "Use Max of Average and Original" +HIDDEN +STARTLINE}
  addUserKnob {14 size l Size R -100 100}
  size {{parent.WrapAll_size} {parent.WrapAll_size}}
  addUserKnob {7 mult l Multiplier R 1 8}
  mult 2
  addUserKnob {26 text_1 l " " T " "}
  addUserKnob {14 postBlur l "Post Blur" R 0 100}
  addUserKnob {26 ""}
  addUserKnob {41 maskChannelMask l mask T MergeKeymix.maskChannelMask}
  addUserKnob {41 inject -STARTLINE T MergeKeymix.inject}
  addUserKnob {41 invert_mask l invert -STARTLINE T MergeKeymix.invert_mask}
  addUserKnob {41 fringe -STARTLINE T MergeKeymix.fringe}
  addUserKnob {4 bbox l BBox: M {union intersectionMask A B "input format" "" "" "" "" "" "" "" ""}}
  addUserKnob {6 blackOutside l "Black Outside" -STARTLINE}
  addUserKnob {6 safeBBox l "Safe BBox" t "If the output BBox is larger than the input format and the input box combined. the result will be max of the input/format bbox plus a safety \"buffer\" in pixels or percent \n\nTurning off might make your BBox grow exponentially with high blur values" -STARTLINE}
  safeBBox true
  addUserKnob {26 safeBBoxText l " " T " "}
  addUserKnob {4 safetyBBoxMethod l "Safe BBox Buffer" -STARTLINE M {pixels percent "" "" "" "" "" "" "" "" "" "" "" "" ""}}
  safetyBBoxMethod percent
  addUserKnob {14 safeBBoxPixels l "" -STARTLINE +HIDDEN R 0 400}
  safeBBoxPixels 100
  addUserKnob {14 safeBBoxPercent l "" -STARTLINE R 1 2}
  safeBBoxPercent 1.1
  addUserKnob {26 text_3 l " " T " "}
  addUserKnob {4 adjustBBoxExtra l "Extra BBox Adjust" -STARTLINE M {pixels percent "" "" "" "" "" "" "" "" "" "" "" "" ""}}
  addUserKnob {14 adjustBBoxPixels l "" -STARTLINE R 0 400}
  addUserKnob {14 adjustBBoxPercent l "" -STARTLINE +HIDDEN R 1 2}
  adjustBBoxPercent 1
  addUserKnob {41 mix T MergeKeymix.mix}
  addUserKnob {20 info l Info}
  addUserKnob {26 creator l Creator: T "Tony Lyons"}
  addUserKnob {26 desc l Description: t "Add description and tooltip for gizmo" T ExponBlurSimple}
  addUserKnob {26 ver l Version: T v02}
 }
  BackdropNode {
   inputs 0
   name BackdropNode1
   tile_color 0x535e5a00
   label "BBox Management"
   note_font_size 30
   note_font_color 0xffffffff
   xpos -529
   ypos 492
   bdwidth 341
   bdheight 525
  }
  Input {
   inputs 0
   name Inputimg
   xpos 0
   ypos -969
  }
  Dot {
   name Dot16
   note_font_size 41
   xpos 34
   ypos -802
  }
set N11f129a0 [stack 0]
  Dot {
   name Dot2
   note_font_size 41
   xpos -367
   ypos -802
  }
  Dot {
   name Dot18
   label B
   note_font_size 41
   xpos -367
   ypos 434
  }
  Dot {
   name Dot11
   note_font_size 41
   xpos -367
   ypos 623
  }
set N11f20c10 [stack 0]
  Dot {
   name Dot3
   note_font_size 41
   xpos -367
   ypos 675
  }
set N11f25750 [stack 0]
  Dot {
   name Dot8
   note_font_size 41
   xpos -463
   ypos 675
  }
  Dot {
   name Dot15
   note_font_size 41
   xpos -463
   ypos 831
  }
push $N11f129a0
  Dot {
   name Dot1
   note_font_size 41
   xpos 461
   ypos -802
  }
  Shuffle {
   name Shuffle1
   label "\[value in]"
   xpos 427
   ypos -756
  }
  Remove {
   operation keep
   channels rgba
   name Remove1
   xpos 427
   ypos -718
  }
  Dot {
   name Dot21
   note_font_size 41
   xpos 461
   ypos -597
  }
set N11f515d0 [stack 0]
  Invert {
   channels rgba
   name Invert1
   xpos 695
   ypos -601
   disable {{"parent.size < 0 ? 0 : 1"}}
  }
set N11f56130 [stack 0]
  Dot {
   name Dot4
   note_font_size 41
   xpos 540
   ypos -543
  }
  NoOp {
   name Original
   xpos 506
   ypos -327
  }
set N11f66750 [stack 0]
  Dot {
   name Dot5
   note_font_size 41
   xpos 540
   ypos 14
  }
  Crop {
   inputs 0
   box {{input.format.x} {input.format.y} {input.format.r} {input.format.t}}
   reformat true
   crop false
   name Crop1
   xpos 210
   ypos -750
   addUserKnob {20 User}
   addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  }
  AddChannels {
   channels rgba
   name AddChannels2
   xpos 210
   ypos -724
  }
push $N11f129a0
  Merge2 {
   inputs 2
   name Merge3
   label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
   xpos 83
   ypos -671
  }
  NoOp {
   name BBoxInput
   xpos 83
   ypos -628
   addUserKnob {20 User}
   addUserKnob {15 bbox}
   bbox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
  }
push $N11f66750
  Input {
   inputs 0
   name Inputarea
   xpos 289
   ypos -638
   number 2
  }
  AddChannels {
   channels alpha
   color 1
   name AddChannels1
   xpos 289
   ypos -580
  }
  Invert {
   channels rgba
   name Invert3
   xpos 289
   ypos -503
  }
push $N11f56130
  Multiply {
   inputs 1+1
   channels rgba
   value 0
   name Multiply1
   label "\[value value]"
   xpos 695
   ypos -509
  }
  NoOp {
   name Start
   xpos 695
   ypos -450
  }
set N11fbed10 [stack 0]
  Blur {
   channels rgba
   size {{(Blur1.size)*(mult)**5} {(Blur1.size)*(mult)**5}}
   crop false
   name Blur6
   label "\[value size]"
   xpos 1195
   ypos -370
  }
push $N11fbed10
  Blur {
   channels rgba
   size {{(Blur1.size)*(mult)**4} {(Blur1.size)*(mult)**4}}
   crop false
   name Blur5
   label "\[value size]"
   xpos 1095
   ypos -370
  }
push $N11fbed10
  Blur {
   channels rgba
   size {{(Blur1.size)*(mult)**3} {(Blur1.size)*(mult)**3}}
   crop false
   name Blur4
   label "\[value size]"
   xpos 995
   ypos -370
  }
push $N11fbed10
  Blur {
   channels rgba
   size {{(Blur1.size)*(mult)**2} {(Blur1.size)*(mult)**2}}
   crop false
   name Blur3
   label "\[value size]"
   xpos 895
   ypos -370
  }
push 0
push $N11fbed10
  Blur {
   channels rgba
   size {{(Blur1.size)*(mult)**1} {(Blur1.size)*(mult)**1}}
   crop false
   name Blur2
   label "\[value size]"
   xpos 795
   ypos -370
  }
push $N11fbed10
  Blur {
   channels rgba
   size {{parent.size.w} {parent.size.h}}
   name Blur1
   label "\[value size]"
   xpos 695
   ypos -370
  }
  Merge2 {
   inputs 7+1
   operation {{parent.mergeNumber}}
   name Merge1
   label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
   xpos 695
   ypos -256
  }
  NoOp {
   name End
   xpos 695
   ypos -230
  }
set N12018af0 [stack 0]
  CopyBBox {
   inputs 2
   name CopyBBox1
   xpos 585
   ypos -175
  }
  Group {
   name BBoxToFormat
   onCreate "n = nuke.thisNode()\ninputFormat = n.knob(\"inputFormat\")\ninputBBox = n.knob(\"inputBBox\")\ncrop = nuke.toNode(\"Crop6\")\ncropb = crop.knob('box')\noutputBBox = n.knob('outputBBox')\noutputBBoxCenter = n.knob(\"outputBBoxCenter\")\n\ninputFormat.setFlag(0x0000000000008000)\ninputBBox.setFlag(0x0000000000008000)\ncropb.setFlag(0x0000000000008000)\noutputBBox.setFlag(0x0000000000008000)\noutputBBoxCenter.setFlag(0x0000000000008000)\n\nn = nuke.thisNode()\nn.knob(\"overscan\").setRange(0,400)\nn.knob(\"overscanPercent\").setRange(1,4)"
   tile_color 0xa57aaaff
   note_font "Verdana Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
   note_font_color 0xffffffff
   xpos 585
   ypos -151
   addUserKnob {20 CropBBox}
   addUserKnob {4 type l Type +INVISIBLE M {"To Format" "To BBox"}}
   addUserKnob {41 intersect T Crop6.intersect}
   addUserKnob {6 blackOutside l "Black Outside" -STARTLINE}
   addUserKnob {4 overscanType l "Overscan Type:" M {Pixels Percentage}}
   overscanType {{parent.safetyBBoxMethod}}
   addUserKnob {14 overscan l Overscan R 0 400}
   overscan {{parent.safeBBoxPixels} {parent.safeBBoxPixels}}
   addUserKnob {14 overscanPercent l "Overscan Percent" R 1 4}
   overscanPercent {{parent.safeBBoxPercent} {parent.safeBBoxPercent}}
   addUserKnob {20 inputBbox l "BBox Data" n 1}
   addUserKnob {15 inputFormat l "Input Format"}
   inputFormat {0 0 {input.width} {input.height}}
   addUserKnob {15 inputBBox l "Input BBox"}
   inputBBox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
   addUserKnob {12 outputBBoxCenter l OutputBBoxCenter}
   outputBBoxCenter {{OutputBBox1.outputBBoxCenter.w} {OutputBBox1.outputBBoxCenter.h}}
   addUserKnob {15 outputBBox l "Output BBox"}
   outputBBox {{OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox}}
   addUserKnob {20 endGroup n -1}
   addUserKnob {20 info_1 l Info}
   addUserKnob {26 creator l Creator: T "<b><big>Tony Lyons"}
   addUserKnob {26 desc l Description: t "crop to inputformat\n\ndisplays values of input bbox" T CropBBox}
   addUserKnob {26 ver l Version: T v02}
  }
   Input {
    inputs 0
    name Input
    xpos 261
    ypos 394
   }
   Dot {
    name Dot2
    note_font_size 41
    xpos 295
    ypos 462
   }
set N120389c0 [stack 0]
   Dot {
    name Dot1
    note_font_size 41
    xpos -160
    ypos 462
   }
set N1203d510 [stack 0]
push $N120389c0
   Crop {
    box {{parent.inputBBox} {parent.inputBBox} {parent.inputBBox} {parent.inputBBox}}
    crop {{parent.blackOutside}}
    name Crop6
    xpos 261
    ypos 510
    addUserKnob {20 User}
    addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_1 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_2 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_3 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_4 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_5 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_6 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_7 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_8 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_9 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_10 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_11 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_12 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_13 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_14 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_15 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_16 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_17 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_18 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_19 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   }
set N120420d0 [stack 0]
   Remove {
    operation keep
    channels none
    name Remove1
    xpos 120
    ypos 504
   }
set N120503e0 [stack 0]
   Transform {
    scale {{parent.overscanPercent} {parent.overscanPercent}}
    center {{((input.bbox.r-input.bbox.x)/2)+input.bbox.x} {((input.bbox.t-input.bbox.y)/2)+input.bbox.y}}
    shutteroffset centred
    name Transform1
    selected true
    xpos 120
    ypos 553
   }
push $N120503e0
   AdjBBox {
    numpixels {{parent.overscan} {parent.overscan}}
    name AdjBBox1
    xpos -5
    ypos 510
   }
   Switch {
    inputs 2
    which {{overscanType}}
    name Switch2
    label "\[value which]"
    xpos -5
    ypos 549
   }
   Merge2 {
    inputs 2
    bbox intersection
    Achannels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
    Bchannels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
    output {-rgba.red -rgba.green -rgba.blue rgba.alpha}
    name Merge1
    xpos -5
    ypos 647
    disable {{!parent.Crop6.intersect}}
   }
push $N1203d510
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos -194
    ypos 653
   }
   BlackOutside {
    name BlackOutside1
    xpos -194
    ypos 692
    disable {{!parent.blackOutside}}
   }
   Dot {
    name Dot4
    note_font_size 41
    xpos -160
    ypos 769
   }
push $N120420d0
   Switch {
    inputs 2
    which {{"overscanType == 0 ? overscan.w != 0 || overscan.h != 0 : overscanPercent.w != 1 || overscanPercent.h != 1 ? 1 : 0"}}
    name Switch1
    label "\[value which]"
    xpos 261
    ypos 759
   }
set N1209c0c0 [stack 0]
   Output {
    name Output1
    xpos 261
    ypos 921
   }
push $N1209c0c0
   NoOp {
    name OutputBBox1
    xpos 378
    ypos 821
    addUserKnob {20 User}
    addUserKnob {15 OutputBBox l "Output BBox"}
    OutputBBox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
    addUserKnob {14 outputBBoxCenter l "Output BBox Center" R 0 100}
    outputBBoxCenter {{OutputBBox.x+(OutputBBox.r-OutputBBox.x)/2} {OutputBBox.y+(OutputBBox.t-OutputBBox.y)/2}}
   }
  end_group
push $N12018af0
  Merge2 {
   inputs 2
   bbox intersection
   name Merge4
   xpos 585
   ypos -127
  }
push $N12018af0
  CopyBBox {
   inputs 2
   name CopyBBox2
   xpos 585
   ypos -101
  }
push $N12018af0
  Switch {
   inputs 2
   which {{"parent.safeBBox && ((BBoxResult.bbox.x < BBoxInput.bbox.x || BBoxResult.bbox.y < BBoxInput.bbox.y || BBoxResult.bbox.r > BBoxInput.bbox.r || BBoxResult.bbox.t > BBoxInput.bbox.t))"}}
   name Switch2
   label "\[value which]"
   xpos 695
   ypos -106
  }
  Grade {
   channels rgba
   whitepoint 7
   black_clamp false
   name AverageMult
   xpos 695
   ypos -37
   disable {{"output2 == 4 ? 0 : 1"}}
  }
  Merge2 {
   inputs 2
   operation max
   name Merge2
   label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
   xpos 695
   ypos 10
   disable {{"output2 == 4 && includeOriginal == 1 && AvgMaxOriginal == 1 ? 0 : 1"}}
  }
  Blur {
   channels rgba
   size {{postBlur} {postBlur}}
   name BlurOriginal
   label "\[value size]"
   xpos 695
   ypos 59
  }
  Invert {
   channels rgba
   name Invert2
   xpos 695
   ypos 97
   disable {{"parent.size < 0 ? 0 : 1"}}
  }
push $N11f515d0
  Switch {
   inputs 2
   which {{"parent.size == 0 ? 0 : 1"}}
   name Switch1
   label "\[value which]"
   xpos 427
   ypos 93
  }
push $N11f129a0
  ShuffleCopy {
   inputs 2
   in2 none
   black red
   white green
   red2 blue
   green2 alpha
   out none
   out2 {{{parent.Shuffle1.in}}}
   name ShuffleCopy1
   xpos 0
   ypos 97
  }
  Dot {
   name Dot17
   label A
   note_font_size 41
   xpos 34
   ypos 455
  }
  Dot {
   name Dot7
   note_font_size 41
   xpos 34
   ypos 585
  }
set N12126a10 [stack 0]
  Dot {
   name Dot12
   note_font_size 41
   xpos -260
   ypos 585
  }
  Dot {
   name Dot13
   note_font_size 41
   xpos -260
   ypos 799
  }
push $N11f20c10
  Input {
   inputs 0
   name Inputmask
   xpos 346
   ypos 325
   number 1
  }
  Dot {
   name Dot19
   label Mask
   note_font_size 41
   xpos 380
   ypos 438
  }
set N12139950 [stack 0]
  Dot {
   name Dot20
   note_font_size 41
   xpos 270
   ypos 438
  }
push $N12126a10
  Merge2 {
   inputs 2
   bbox intersection
   Achannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
   Bchannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
   output {rgba.red -rgba.green -rgba.blue rgba.alpha}
   name MergeIntersection
   xpos 236
   ypos 575
   disable {{"!\[exists parent.input1]"}}
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
   Bchannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
   output {rgba.red -rgba.green -rgba.blue rgba.alpha}
   name MergeUnion
   xpos 236
   ypos 613
   disable {{"!\[exists parent.input1]"}}
  }
  Dot {
   name Dot6
   label "intersection\nof (Mask and A) + B"
   note_font_size 14
   note_font_color 0xffffffff
   xpos 270
   ypos 773
  }
push $N12139950
  Dot {
   name Dot10
   note_font_size 41
   xpos 380
   ypos 675
  }
push $N12126a10
push $N11f25750
  Merge2 {
   inputs 2+1
   operation copy
   Achannels none
   Bchannels none
   output none
   also_merge all
   name MergeKeymix
   xpos 0
   ypos 665
  }
  Dot {
   name Dot14
   note_font_size 41
   xpos 34
   ypos 747
  }
set N1217d8a0 [stack 0]
push $N11f25750
  CopyBBox {
   inputs 2
   name CopyBBoxUnion
   xpos -401
   ypos 743
   disable {{parent.bbox==0?0:1}}
  }
  CopyBBox {
   inputs 2
   name CopyBBoxIntersection
   xpos -401
   ypos 769
   disable {{"parent.bbox==1 ? 0 : 1"}}
  }
  CopyBBox {
   inputs 2
   name CopyBBoxA
   xpos -401
   ypos 795
   disable {{"parent.bbox==2 ? 0 : 1"}}
  }
  CopyBBox {
   inputs 2
   name CopyBBoxB
   xpos -401
   ypos 827
   disable {{"parent.bbox==3 ? 0 : 1"}}
  }
  Crop {
   box {0 0 {parent.width} {parent.height}}
   crop false
   name CopyBBoxFormat
   xpos -401
   ypos 853
   disable {{"parent.bbox==4 ? 0 : 1"}}
   addUserKnob {20 User}
   addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_1 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_2 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_3 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_4 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_5 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_6 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_7 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_8 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_9 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_10 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_11 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  }
set N121a1490 [stack 0]
  Transform {
   scale {{parent.adjustBBoxPercent} {parent.adjustBBoxPercent}}
   center {{((input.bbox.r-input.bbox.x)/2)+input.bbox.x} {((input.bbox.t-input.bbox.y)/2)+input.bbox.y}}
   black_outside false
   shutteroffset centred
   name TransformBBoxAdjustPercent
   xpos -516
   ypos 898
  }
push $N121a1490
  AdjBBox {
   numpixels {{parent.adjustBBoxPixels} {parent.adjustBBoxPixels}}
   name AdjBBoxPixels
   xpos -401
   ypos 901
  }
  Switch {
   inputs 2
   which {{adjustBBoxExtra}}
   name Switch3
   xpos -401
   ypos 940
  }
  Dot {
   name Dot9
   note_font_size 41
   xpos -367
   ypos 993
  }
push $N1217d8a0
  CopyBBox {
   inputs 2
   name CopyBBox
   xpos 0
   ypos 989
  }
  BlackOutside {
   name BlackOutside1
   xpos 0
   ypos 1015
   disable {{!parent.blackOutside}}
  }
  Output {
   name Output1
   xpos 0
   ypos 1155
  }
push $N12018af0
  NoOp {
   name BBoxResult
   xpos 588
   ypos -223
   addUserKnob {20 User}
   addUserKnob {15 bbox}
   bbox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
  }
 end_group
 Dot {
  name Dot40
  note_font_size 41
  xpos 1059
  ypos 1277
 }
set N121eb740 [stack 0]
 Grade {
  channels all
  white {{WrapAll_amount/10}}
  name GradeBgWrapAmount
  xpos 1025
  ypos 1383
 }
 Dot {
  name Dot37
  label "WRAP ALL"
  note_font_size 61
  xpos 1059
  ypos 1692
 }
set N122009f0 [stack 0]
 Merge2 {
  inputs 2
  operation mask
  name Merge7
  xpos 1025
  ypos 3079
 }
set N12205720 [stack 0]
 Merge2 {
  inputs 2
  name Merge1
  xpos 1537
  ypos 3079
 }
push $N12205720
push $N11ee6050
push $N10fbc7f0
 Dot {
  name Dot21
  xpos 2147
  ypos 495
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle1
  label alphaOnly
  note_font Helvetica
  xpos 2113
  ypos 547
 }
 Dot {
  name Dot23
  xpos 2147
  ypos 3257
 }
push $N121eb740
 Dot {
  name Dot29
  note_font_size 41
  xpos 829
  ypos 1277
 }
set N12240aa0 [stack 0]
 Dot {
  name Dot33
  note_font_size 41
  xpos 829
  ypos 2726
 }
push $N10625390
 Unpremult {
  name Unpremult1
  xpos -158
  ypos 1184
  disable {{premultiplied*-1+1 i x1 1}}
 }
set N1224a1c0 [stack 0]
 Dot {
  name Dot13
  xpos -324
  ypos 1188
 }
 Dot {
  name Dot14
  xpos -324
  ypos 1871
 }
push $N11ee14d0
push $N122009f0
push $N1107f020
 Dot {
  name Dot10
  xpos 350
  ypos 689
 }
 Clamp {
  minimum 0.001
  maximum 100
  name Clamp1
  xpos 316
  ypos 996
 }
 Dot {
  name Dot24
  xpos 350
  ypos 1517
 }
push $N12240aa0
push $N1224a1c0
 Dot {
  name Dot12
  xpos 29
  ypos 1188
 }
 Group {
  inputs 2
  name ColorCopy_v01_
  tile_color 0x9e3c6300
  xpos -5
  ypos 1273
  addUserKnob {20 "" l User}
  addUserKnob {6 hue -STARTLINE}
  hue true
  addUserKnob {6 saturation -STARTLINE}
  saturation true
  addUserKnob {6 value -STARTLINE}
  addUserKnob {7 huemix l "hue mix"}
  huemix 1
  addUserKnob {7 satmix l "saturation mix"}
  satmix 1
  addUserKnob {7 valmix l "value mix"}
  addUserKnob {4 bbox M {"A side" "B side"}}
  bbox "B side"
 }
  Input {
   inputs 0
   name B
   xpos -150
   ypos -450
  }
set N122974f0 [stack 0]
  Dot {
   name Dot1
   tile_color 0xc0c0c000
   xpos -264
   ypos -380
  }
  Input {
   inputs 0
   name A
   xpos 235
   ypos -469
   number 1
  }
  Colorspace {
   colorspace_out HSV
   name Colorspace5
   xpos 235
   ypos -405
  }
set N122a56e0 [stack 0]
  Dot {
   name Dot2
   tile_color 0xc0c0c000
   xpos 214
   ypos 114
  }
push $N122a56e0
push $N122a56e0
push $N122a56e0
push $N122974f0
  Colorspace {
   colorspace_out HSV
   name Colorspace4
   xpos -150
   ypos -394
  }
set N122c2e60 [stack 0]
  Copy {
   inputs 2
   from0 rgba.red
   to0 rgba.red
   bbox A
   name ChannelCopy3
   tile_color 0x9e3c6300
   label "(red -> red)"
   xpos -30
   ypos -270
   disable {{1-parent.hue}}
  }
push $N122c2e60
  Dissolve {
   inputs 2
   channels {rgba.red -rgba.green -rgba.blue none}
   which {{parent.huemix}}
   name Dissolve1
   label (red)
   xpos -150
   ypos -225
  }
set N122e9ca0 [stack 0]
  Copy {
   inputs 2
   from0 rgba.green
   to0 rgba.green
   bbox A
   name ChannelCopy4
   tile_color 0x9e3c6300
   label "(green -> green)"
   xpos -29
   ypos -198
   disable {{1-parent.saturation i}}
  }
push $N122e9ca0
  Dissolve {
   inputs 2
   channels {-rgba.red rgba.green -rgba.blue none}
   which {{parent.satmix}}
   name Dissolve2
   label (green)
   xpos -150
   ypos -136
  }
set N12303030 [stack 0]
  Copy {
   inputs 2
   from0 rgba.blue
   to0 rgba.blue
   bbox A
   name ChannelCopy1
   tile_color 0x9e3c6300
   label "(blue -> blue)"
   xpos -26
   ypos -88
   disable {{1-parent.value}}
  }
push $N12303030
  Dissolve {
   inputs 2
   channels {-rgba.red -rgba.green rgba.blue none}
   which {{parent.valmix}}
   name Dissolve3
   label (blue)
   xpos -150
   ypos -16
  }
  Colorspace {
   colorspace_in HSV
   name Colorspace6
   xpos -150
   ypos 63
  }
  CopyBBox {
   inputs 2
   name CopyBBox2
   tile_color 0x9e3c6300
   xpos -150
   ypos 111
  }
set N12340170 [stack 0]
  CopyBBox {
   inputs 2
   name CopyBBox1
   tile_color 0x9e3c6300
   xpos -298
   ypos 111
   disable {{1-(parent.bbox==1)}}
  }
  Output {
   name Output1
   xpos -298
   ypos 183
  }
push $N12340170
  Viewer {
   frame_range 1,26
   roi {40 40 600 440}
   input_process false
   name Viewer1
   tile_color 0xff00f200
   xpos -343
   ypos -321
   hide_input true
   addUserKnob {20 User}
   addUserKnob {6 toAddBtn -STARTLINE}
   toAddBtn true
   addUserKnob {6 toAddBtn_1 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn_2 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn_3 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn_4 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn_5 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn_6 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn_7 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn_8 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn_9 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn_10 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn_11 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn_12 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn -STARTLINE}
   toAddBtn true
  }
 end_group
 Dot {
  name Dot36
  label "BLEND EDGES"
  note_font_size 45
  xpos 29
  ypos 1411
 }
push $N1224a1c0
 Merge2 {
  inputs 2+1
  operation copy
  output {rgba.red rgba.green rgba.blue -rgba.alpha}
  mix {{parent.iColor_amount}}
  name Merge10
  label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
  xpos -152
  ypos 1513
 }
 Merge2 {
  inputs 2
  bbox B
  name Merge5
  xpos -152
  ypos 1688
 }
 Merge2 {
  inputs 2
  bbox B
  name Merge6
  xpos -152
  ypos 1797
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy1
  xpos -152
  ypos 1861
 }
 Dot {
  name Dot32
  note_font_size 41
  xpos -118
  ypos 2247
 }
set N123bd4a0 [stack 0]
 Premult {
  name Premult4
  xpos 58
  ypos 2243
  disable {{premultiplied*-1+1 i}}
 }
set N123c1df0 [stack 0]
push $N11c92f90
 Dot {
  name Dot35
  xpos 2298
  ypos 2172
 }
 Shuffle {
  alpha white
  name Shuffle2
  label "\[value in]"
  xpos 225
  ypos 2162
 }
 Merge2 {
  inputs 2
  operation stencil
  bbox B
  name Merge8
  label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
  xpos 225
  ypos 2243
 }
 Colorspace {
  colorspace_out AlexaV3LogC
  name Colorspace3
  label "\[value colorspace_in] >> \[value colorspace_out]"
  xpos 225
  ypos 2302
 }
 Group {
  name ExponBlurSimple5
  onCreate "n = nuke.thisNode()\nn.knob('size').setRange(-100, 100)\nn.knob('adjustBBoxPixels').setRange(0, 400)\nn.knob('adjustBBoxPercent').setRange(1, 2)\nn.knob('safeBBoxPixels').setRange(0, 400)\nn.knob('safeBBoxPercent').setRange(1, 2)"
  knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == \"includeOriginal\":\n    if n.knob('includeOriginal').getValue() == 1:\n        merge = nuke.toNode(\"Merge1\")\n        original = nuke.toNode('Original')\n        AvgMult = nuke.toNode(\"AverageMult\")\n        steps = int(n.knob('steps').getValue())\n        merge.setInput(steps+1, original)\n        AvgMult\['whitepoint'].setValue(2 if steps<2 else steps+1)\n        \n    else:\n        merge.setInput(steps+1, None)\n        AvgMult\['whitepoint'].setValue(2 if steps<2 else steps)\n        \nelif k.name() == \"steps\":\n    \n    s = int(k.value())\n    if s<1:\n        k.setValue(1)\n    else:\n        start = nuke.toNode(\"Start\")\n        end   = nuke.toNode(\"End\")\n        b1    = nuke.toNode(\"Blur1\")\n        merge = nuke.toNode(\"Merge1\")\n        AvgMult = nuke.toNode(\"AverageMult\")\n        \n        b1x   = b1.xpos()\n        b1y   = b1.ypos()\n        b1n   = b1.name()\n        \n        steps = int(n.knob('steps').getValue())\n        size  = n.knob('size').getValue()\n        mult  = n.knob('mult').getValue()\n        \n        #b1.setInput(0, start)\n        for i in range(1,merge.inputs()):\n            merge.setInput(i,None)\n        merge.setInput(0, b1)\n        \[nuke.delete(i) for i in nuke.allNodes() if i.xpos()>start.xpos()]\n        for i in range(1,steps):\n            # Blur\n            b = nuke.nodes.Blur()\n            b.setXYpos(b1x+i*100,b1y)\n            b.setInput(0,start)\n            b\[\"channels\"].setValue(\"rgba\")\n            b\[\"crop\"].setValue(0)\n            b\[\"size\"].setValue(0, 1)\n            b\[\"size\"].setExpression(\"(Blur1.size)*(mult)**%s\"%(i))\n            b\[\"label\"].setValue(\"\[value size]\")\n            merge.setInput(i if i<2 else i+1, b)\n            AvgMult\['whitepoint'].setValue(i if i<2 else i+1)\n            \n        if n.knob('includeOriginal').getValue() == 1:\n            merge = nuke.toNode(\"Merge1\")\n            original = nuke.toNode('Original')\n            AvgMult = nuke.toNode(\"AverageMult\")\n            steps = int(n.knob('steps').getValue())\n            merge.setInput(steps+1, original)\n            AvgMult\['whitepoint'].setValue(2 if steps<2 else steps+1)\n            \nelif k.name() == \"output2\":\n    if n.knob(\"output2\").getValue() == 4:\n        n.knob('AvgMaxOriginal').setVisible(True)\n    else:\n        n.knob('AvgMaxOriginal').setVisible(False)\n        \nelif k.name() == \"safeBBox\":\n    if n.knob(\"safeBBox\").getValue() == 0:\n        n.knob('safeBBoxText').setVisible(False)\n        n.knob('safetyBBoxMethod').setVisible(False)\n        n.knob('safeBBoxPixels').setVisible(False)\n        n.knob('safeBBoxPercent').setVisible(False)\n        \n    elif n.knob(\"safeBBox\").getValue() == 1:\n        n.knob('safetyBBoxMethod').setVisible(True)\n        n.knob('safeBBoxText').setVisible(True)\n        if n.knob('safetyBBoxMethod').value() == \"pixels\":\n            n.knob('safeBBoxPixels').setVisible(True)\n            n.knob('safeBBoxPercent').setVisible(False)\n        elif n.knob('safetyBBoxMethod').value() == \"percent\":\n            n.knob('safeBBoxPixels').setVisible(False)\n            n.knob('safeBBoxPercent').setVisible(True)\n            \nelif k.name() == \"safetyBBoxMethod\":\n    if n.knob(\"safetyBBoxMethod\").value() == \"pixels\":\n        n.knob('safeBBoxPixels').setVisible(True)\n        n.knob('safeBBoxPercent').setVisible(False)\n    elif n.knob(\"safetyBBoxMethod\").value() == \"percent\":\n        n.knob('safeBBoxPixels').setVisible(False)\n        n.knob('safeBBoxPercent').setVisible(True)\n        \nelif k.name() == \"adjustBBoxExtra\":\n    if n.knob(\"adjustBBoxExtra\").value() == \"pixels\":\n        n.knob('adjustBBoxPixels').setVisible(True)\n        n.knob('adjustBBoxPercent').setVisible(False)\n    elif n.knob(\"adjustBBoxExtra\").value() == \"percent\":\n        n.knob('adjustBBoxPixels').setVisible(False)\n        n.knob('adjustBBoxPercent').setVisible(True)\n"
  tile_color 0xcc804eff
  label "(\[value output2])"
  note_font "Verdana Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
  note_font_color 0xffffffff
  xpos 225
  ypos 2366
  addUserKnob {20 ExponBlurSimple}
  addUserKnob {41 channels T Shuffle1.in}
  addUserKnob {41 maskChannelMask_1 l area T Multiply1.maskChannelMask}
  addUserKnob {41 inject_1 l inject -STARTLINE T Multiply1.inject}
  addUserKnob {41 invert_mask_1 l invert -STARTLINE T Multiply1.invert_mask}
  addUserKnob {41 fringe_1 l fringe -STARTLINE T Multiply1.fringe}
  addUserKnob {26 ""}
  addUserKnob {4 output2 l Operation: M {Screen Plus Over Hypot Average Max Min "" "" "" "" ""}}
  output2 Average
  addUserKnob {3 steps l "  Steps" -STARTLINE}
  steps 5
  addUserKnob {3 mergeNumber -STARTLINE +INVISIBLE}
  mergeNumber {{"output2 == 0 ? 25 : output2 == 1 ? 24 : output2 == 2 ? 22 : output2 == 3 ? 13 : output2 == 4 ? 24 : output2 == 5 ? 17 : 18"}}
  addUserKnob {26 text l " " -STARTLINE T " "}
  addUserKnob {6 includeOriginal l "Include Original?" -STARTLINE}
  addUserKnob {6 AvgMaxOriginal l "Use Max of Average and Original" +STARTLINE}
  addUserKnob {14 size l Size R -100 100}
  size {{parent.ExponBlurSimple2.size} {parent.ExponBlurSimple2.size}}
  addUserKnob {7 mult l Multiplier R 1 8}
  mult 2
  addUserKnob {26 text_1 l " " T " "}
  addUserKnob {14 postBlur l "Post Blur" R 0 100}
  postBlur {{parent.ExponBlurSimple2.postBlur} {parent.ExponBlurSimple2.postBlur}}
  addUserKnob {26 ""}
  addUserKnob {41 maskChannelMask l mask T MergeKeymix.maskChannelMask}
  addUserKnob {41 inject -STARTLINE T MergeKeymix.inject}
  addUserKnob {41 invert_mask l invert -STARTLINE T MergeKeymix.invert_mask}
  addUserKnob {41 fringe -STARTLINE T MergeKeymix.fringe}
  addUserKnob {4 bbox l BBox: M {union intersectionMask A B "input format" "" "" "" "" "" "" "" ""}}
  addUserKnob {6 blackOutside l "Black Outside" -STARTLINE}
  addUserKnob {6 safeBBox l "Safe BBox" t "If the output BBox is larger than the input format and the input box combined. the result will be max of the input/format bbox plus a safety \"buffer\" in pixels or percent \n\nTurning off might make your BBox grow exponentially with high blur values" -STARTLINE}
  safeBBox true
  addUserKnob {26 safeBBoxText l " " T " "}
  addUserKnob {4 safetyBBoxMethod l "Safe BBox Buffer" -STARTLINE M {pixels percent "" "" "" "" "" "" "" "" "" "" "" "" ""}}
  safetyBBoxMethod percent
  addUserKnob {14 safeBBoxPixels l "" -STARTLINE +HIDDEN R 0 400}
  safeBBoxPixels 100
  addUserKnob {14 safeBBoxPercent l "" -STARTLINE R 1 2}
  safeBBoxPercent 1.1
  addUserKnob {26 text_3 l " " T " "}
  addUserKnob {4 adjustBBoxExtra l "Extra BBox Adjust" -STARTLINE M {pixels percent "" "" "" "" "" "" "" "" "" "" "" "" ""}}
  addUserKnob {14 adjustBBoxPixels l "" -STARTLINE R 0 400}
  addUserKnob {14 adjustBBoxPercent l "" -STARTLINE +HIDDEN R 1 2}
  adjustBBoxPercent 1
  addUserKnob {41 mix T MergeKeymix.mix}
  addUserKnob {20 info l Info}
  addUserKnob {26 creator l Creator: T "Tony Lyons"}
  addUserKnob {26 desc l Description: t "Add description and tooltip for gizmo" T ExponBlurSimple}
  addUserKnob {26 ver l Version: T v02}
 }
  BackdropNode {
   inputs 0
   name BackdropNode1
   tile_color 0x535e5a00
   label "BBox Management"
   note_font_size 30
   note_font_color 0xffffffff
   xpos -529
   ypos 492
   bdwidth 341
   bdheight 525
  }
  Input {
   inputs 0
   name Inputimg
   xpos 0
   ypos -969
  }
  Dot {
   name Dot16
   note_font_size 41
   xpos 34
   ypos -802
  }
set N12421870 [stack 0]
  Dot {
   name Dot2
   note_font_size 41
   xpos -367
   ypos -802
  }
  Dot {
   name Dot18
   label B
   note_font_size 41
   xpos -367
   ypos 434
  }
  Dot {
   name Dot11
   note_font_size 41
   xpos -367
   ypos 623
  }
set N1242fab0 [stack 0]
  Dot {
   name Dot3
   note_font_size 41
   xpos -367
   ypos 675
  }
set N124346c0 [stack 0]
  Dot {
   name Dot8
   note_font_size 41
   xpos -463
   ypos 675
  }
  Dot {
   name Dot15
   note_font_size 41
   xpos -463
   ypos 831
  }
push $N12421870
  Dot {
   name Dot1
   note_font_size 41
   xpos 461
   ypos -802
  }
  Shuffle {
   name Shuffle1
   label "\[value in]"
   xpos 427
   ypos -756
  }
  Remove {
   operation keep
   channels rgba
   name Remove1
   xpos 427
   ypos -718
  }
  Dot {
   name Dot21
   note_font_size 41
   xpos 461
   ypos -597
  }
set N124604c0 [stack 0]
  Invert {
   channels rgba
   name Invert1
   xpos 695
   ypos -601
   disable {{"parent.size < 0 ? 0 : 1"}}
  }
set N12465020 [stack 0]
  Dot {
   name Dot4
   note_font_size 41
   xpos 540
   ypos -543
  }
  NoOp {
   name Original
   xpos 506
   ypos -327
  }
set N12475640 [stack 0]
  Dot {
   name Dot5
   note_font_size 41
   xpos 540
   ypos 14
  }
  Crop {
   inputs 0
   box {{input.format.x} {input.format.y} {input.format.r} {input.format.t}}
   reformat true
   crop false
   name Crop1
   xpos 210
   ypos -750
   addUserKnob {20 User}
   addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  }
  AddChannels {
   channels rgba
   name AddChannels2
   xpos 210
   ypos -724
  }
push $N12421870
  Merge2 {
   inputs 2
   name Merge3
   label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
   xpos 83
   ypos -671
  }
  NoOp {
   name BBoxInput
   xpos 83
   ypos -628
   addUserKnob {20 User}
   addUserKnob {15 bbox}
   bbox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
  }
push $N12475640
  Input {
   inputs 0
   name Inputarea
   xpos 289
   ypos -638
   number 2
  }
  AddChannels {
   channels alpha
   color 1
   name AddChannels1
   xpos 289
   ypos -580
  }
  Invert {
   channels rgba
   name Invert3
   xpos 289
   ypos -503
  }
push $N12465020
  Multiply {
   inputs 1+1
   channels rgba
   value 0
   name Multiply1
   label "\[value value]"
   xpos 695
   ypos -509
  }
  NoOp {
   name Start
   xpos 695
   ypos -450
  }
set N124cdc10 [stack 0]
  Blur {
   channels rgba
   size {{(Blur1.size)*(mult)**4} {(Blur1.size)*(mult)**4}}
   crop false
   name Blur5
   label "\[value size]"
   xpos 1095
   ypos -370
  }
push $N124cdc10
  Blur {
   channels rgba
   size {{(Blur1.size)*(mult)**3} {(Blur1.size)*(mult)**3}}
   crop false
   name Blur4
   label "\[value size]"
   xpos 995
   ypos -370
  }
push $N124cdc10
  Blur {
   channels rgba
   size {{(Blur1.size)*(mult)**2} {(Blur1.size)*(mult)**2}}
   crop false
   name Blur3
   label "\[value size]"
   xpos 895
   ypos -370
  }
push 0
push $N124cdc10
  Blur {
   channels rgba
   size {{(Blur1.size)*(mult)**1} {(Blur1.size)*(mult)**1}}
   crop false
   name Blur2
   label "\[value size]"
   xpos 795
   ypos -370
  }
push $N124cdc10
  Blur {
   channels rgba
   size {{parent.size.w} {parent.size.h}}
   name Blur1
   label "\[value size]"
   xpos 695
   ypos -370
  }
  Merge2 {
   inputs 6+1
   operation {{parent.mergeNumber}}
   name Merge1
   label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
   xpos 695
   ypos -256
  }
  NoOp {
   name End
   xpos 695
   ypos -230
  }
set N12527a30 [stack 0]
  CopyBBox {
   inputs 2
   name CopyBBox1
   xpos 585
   ypos -175
  }
  Group {
   name BBoxToFormat
   onCreate "n = nuke.thisNode()\ninputFormat = n.knob(\"inputFormat\")\ninputBBox = n.knob(\"inputBBox\")\ncrop = nuke.toNode(\"Crop6\")\ncropb = crop.knob('box')\noutputBBox = n.knob('outputBBox')\noutputBBoxCenter = n.knob(\"outputBBoxCenter\")\n\ninputFormat.setFlag(0x0000000000008000)\ninputBBox.setFlag(0x0000000000008000)\ncropb.setFlag(0x0000000000008000)\noutputBBox.setFlag(0x0000000000008000)\noutputBBoxCenter.setFlag(0x0000000000008000)\n\nn = nuke.thisNode()\nn.knob(\"overscan\").setRange(0,400)\nn.knob(\"overscanPercent\").setRange(1,4)"
   tile_color 0xa57aaaff
   note_font "Verdana Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
   note_font_color 0xffffffff
   xpos 585
   ypos -151
   addUserKnob {20 CropBBox}
   addUserKnob {4 type l Type +INVISIBLE M {"To Format" "To BBox"}}
   addUserKnob {41 intersect T Crop6.intersect}
   addUserKnob {6 blackOutside l "Black Outside" -STARTLINE}
   addUserKnob {4 overscanType l "Overscan Type:" M {Pixels Percentage}}
   overscanType {{parent.safetyBBoxMethod}}
   addUserKnob {14 overscan l Overscan R 0 400}
   overscan {{parent.safeBBoxPixels} {parent.safeBBoxPixels}}
   addUserKnob {14 overscanPercent l "Overscan Percent" R 1 4}
   overscanPercent {{parent.safeBBoxPercent} {parent.safeBBoxPercent}}
   addUserKnob {20 inputBbox l "BBox Data" n 1}
   addUserKnob {15 inputFormat l "Input Format"}
   inputFormat {0 0 {input.width} {input.height}}
   addUserKnob {15 inputBBox l "Input BBox"}
   inputBBox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
   addUserKnob {12 outputBBoxCenter l OutputBBoxCenter}
   outputBBoxCenter {{OutputBBox1.outputBBoxCenter.w} {OutputBBox1.outputBBoxCenter.h}}
   addUserKnob {15 outputBBox l "Output BBox"}
   outputBBox {{OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox}}
   addUserKnob {20 endGroup n -1}
   addUserKnob {20 info_1 l Info}
   addUserKnob {26 creator l Creator: T "<b><big>Tony Lyons"}
   addUserKnob {26 desc l Description: t "crop to inputformat\n\ndisplays values of input bbox" T CropBBox}
   addUserKnob {26 ver l Version: T v02}
  }
   Input {
    inputs 0
    name Input
    xpos 261
    ypos 394
   }
   Dot {
    name Dot2
    note_font_size 41
    xpos 295
    ypos 462
   }
set N12548910 [stack 0]
   Dot {
    name Dot1
    note_font_size 41
    xpos -160
    ypos 462
   }
set N1254d460 [stack 0]
push $N12548910
   Crop {
    box {{parent.inputBBox} {parent.inputBBox} {parent.inputBBox} {parent.inputBBox}}
    crop {{parent.blackOutside}}
    name Crop6
    xpos 261
    ypos 510
    addUserKnob {20 User}
    addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_1 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_2 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_3 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_4 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_5 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_6 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_7 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_8 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_9 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_10 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_11 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_12 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_13 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_14 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_15 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_16 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_17 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_18 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_19 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   }
set N12552020 [stack 0]
   Remove {
    operation keep
    channels none
    name Remove1
    xpos 120
    ypos 504
   }
set N125603b0 [stack 0]
   Transform {
    scale {{parent.overscanPercent} {parent.overscanPercent}}
    center {{((input.bbox.r-input.bbox.x)/2)+input.bbox.x} {((input.bbox.t-input.bbox.y)/2)+input.bbox.y}}
    shutteroffset centred
    name Transform1
    selected true
    xpos 120
    ypos 553
   }
push $N125603b0
   AdjBBox {
    numpixels {{parent.overscan} {parent.overscan}}
    name AdjBBox1
    xpos -5
    ypos 510
   }
   Switch {
    inputs 2
    which {{overscanType}}
    name Switch2
    label "\[value which]"
    xpos -5
    ypos 549
   }
   Merge2 {
    inputs 2
    bbox intersection
    Achannels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
    Bchannels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
    output {-rgba.red -rgba.green -rgba.blue rgba.alpha}
    name Merge1
    xpos -5
    ypos 647
    disable {{!parent.Crop6.intersect}}
   }
push $N1254d460
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos -194
    ypos 653
   }
   BlackOutside {
    name BlackOutside1
    xpos -194
    ypos 692
    disable {{!parent.blackOutside}}
   }
   Dot {
    name Dot4
    note_font_size 41
    xpos -160
    ypos 769
   }
push $N12552020
   Switch {
    inputs 2
    which {{"overscanType == 0 ? overscan.w != 0 || overscan.h != 0 : overscanPercent.w != 1 || overscanPercent.h != 1 ? 1 : 0"}}
    name Switch1
    label "\[value which]"
    xpos 261
    ypos 759
   }
set N125ac040 [stack 0]
   Output {
    name Output1
    xpos 261
    ypos 921
   }
push $N125ac040
   NoOp {
    name OutputBBox1
    xpos 378
    ypos 821
    addUserKnob {20 User}
    addUserKnob {15 OutputBBox l "Output BBox"}
    OutputBBox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
    addUserKnob {14 outputBBoxCenter l "Output BBox Center" R 0 100}
    outputBBoxCenter {{OutputBBox.x+(OutputBBox.r-OutputBBox.x)/2} {OutputBBox.y+(OutputBBox.t-OutputBBox.y)/2}}
   }
  end_group
push $N12527a30
  Merge2 {
   inputs 2
   bbox intersection
   name Merge4
   xpos 585
   ypos -127
  }
push $N12527a30
  CopyBBox {
   inputs 2
   name CopyBBox2
   xpos 585
   ypos -101
  }
push $N12527a30
  Switch {
   inputs 2
   which {{"parent.safeBBox && ((BBoxResult.bbox.x < BBoxInput.bbox.x || BBoxResult.bbox.y < BBoxInput.bbox.y || BBoxResult.bbox.r > BBoxInput.bbox.r || BBoxResult.bbox.t > BBoxInput.bbox.t))"}}
   name Switch2
   label "\[value which]"
   xpos 695
   ypos -106
  }
  Grade {
   channels rgba
   whitepoint 6
   black_clamp false
   name AverageMult
   xpos 695
   ypos -37
   disable {{"output2 == 4 ? 0 : 1"}}
  }
  Merge2 {
   inputs 2
   operation max
   name Merge2
   label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
   xpos 695
   ypos 10
   disable {{"output2 == 4 && includeOriginal == 1 && AvgMaxOriginal == 1 ? 0 : 1"}}
  }
  Blur {
   channels rgba
   size {{postBlur} {postBlur}}
   name BlurOriginal
   label "\[value size]"
   xpos 695
   ypos 59
  }
  Invert {
   channels rgba
   name Invert2
   xpos 695
   ypos 97
   disable {{"parent.size < 0 ? 0 : 1"}}
  }
push $N124604c0
  Switch {
   inputs 2
   which {{"parent.size == 0 ? 0 : 1"}}
   name Switch1
   label "\[value which]"
   xpos 427
   ypos 93
  }
push $N12421870
  ShuffleCopy {
   inputs 2
   in2 none
   black red
   white green
   red2 blue
   green2 alpha
   out none
   out2 {{{parent.Shuffle1.in}}}
   name ShuffleCopy1
   xpos 0
   ypos 97
  }
  Dot {
   name Dot17
   label A
   note_font_size 41
   xpos 34
   ypos 455
  }
  Dot {
   name Dot7
   note_font_size 41
   xpos 34
   ypos 585
  }
set N12636990 [stack 0]
  Dot {
   name Dot12
   note_font_size 41
   xpos -260
   ypos 585
  }
  Dot {
   name Dot13
   note_font_size 41
   xpos -260
   ypos 799
  }
push $N1242fab0
  Input {
   inputs 0
   name Inputmask
   xpos 346
   ypos 325
   number 1
  }
  Dot {
   name Dot19
   label Mask
   note_font_size 41
   xpos 380
   ypos 438
  }
set N126498f0 [stack 0]
  Dot {
   name Dot20
   note_font_size 41
   xpos 270
   ypos 438
  }
push $N12636990
  Merge2 {
   inputs 2
   bbox intersection
   Achannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
   Bchannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
   output {rgba.red -rgba.green -rgba.blue rgba.alpha}
   name MergeIntersection
   xpos 236
   ypos 575
   disable {{"!\[exists parent.input1]"}}
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
   Bchannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
   output {rgba.red -rgba.green -rgba.blue rgba.alpha}
   name MergeUnion
   xpos 236
   ypos 613
   disable {{"!\[exists parent.input1]"}}
  }
  Dot {
   name Dot6
   label "intersection\nof (Mask and A) + B"
   note_font_size 14
   note_font_color 0xffffffff
   xpos 270
   ypos 773
  }
push $N126498f0
  Dot {
   name Dot10
   note_font_size 41
   xpos 380
   ypos 675
  }
push $N12636990
push $N124346c0
  Merge2 {
   inputs 2+1
   operation copy
   Achannels none
   Bchannels none
   output none
   also_merge all
   name MergeKeymix
   xpos 0
   ypos 665
  }
  Dot {
   name Dot14
   note_font_size 41
   xpos 34
   ypos 747
  }
set N1268d840 [stack 0]
push $N124346c0
  CopyBBox {
   inputs 2
   name CopyBBoxUnion
   xpos -401
   ypos 743
   disable {{parent.bbox==0?0:1}}
  }
  CopyBBox {
   inputs 2
   name CopyBBoxIntersection
   xpos -401
   ypos 769
   disable {{"parent.bbox==1 ? 0 : 1"}}
  }
  CopyBBox {
   inputs 2
   name CopyBBoxA
   xpos -401
   ypos 795
   disable {{"parent.bbox==2 ? 0 : 1"}}
  }
  CopyBBox {
   inputs 2
   name CopyBBoxB
   xpos -401
   ypos 827
   disable {{"parent.bbox==3 ? 0 : 1"}}
  }
  Crop {
   box {0 0 {parent.width} {parent.height}}
   crop false
   name CopyBBoxFormat
   xpos -401
   ypos 853
   disable {{"parent.bbox==4 ? 0 : 1"}}
   addUserKnob {20 User}
   addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_1 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_2 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_3 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_4 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_5 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_6 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_7 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_8 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_9 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_10 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_11 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  }
set N126b1430 [stack 0]
  Transform {
   scale {{parent.adjustBBoxPercent} {parent.adjustBBoxPercent}}
   center {{((input.bbox.r-input.bbox.x)/2)+input.bbox.x} {((input.bbox.t-input.bbox.y)/2)+input.bbox.y}}
   black_outside false
   shutteroffset centred
   name TransformBBoxAdjustPercent
   xpos -516
   ypos 898
  }
push $N126b1430
  AdjBBox {
   numpixels {{parent.adjustBBoxPixels} {parent.adjustBBoxPixels}}
   name AdjBBoxPixels
   xpos -401
   ypos 901
  }
  Switch {
   inputs 2
   which {{adjustBBoxExtra}}
   name Switch3
   xpos -401
   ypos 940
  }
  Dot {
   name Dot9
   note_font_size 41
   xpos -367
   ypos 993
  }
push $N1268d840
  CopyBBox {
   inputs 2
   name CopyBBox
   xpos 0
   ypos 989
  }
  BlackOutside {
   name BlackOutside1
   xpos 0
   ypos 1015
   disable {{!parent.blackOutside}}
  }
  Output {
   name Output1
   xpos 0
   ypos 1155
  }
push $N12527a30
  NoOp {
   name BBoxResult
   xpos 588
   ypos -223
   addUserKnob {20 User}
   addUserKnob {15 bbox}
   bbox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
  }
 end_group
 Colorspace {
  colorspace_in AlexaV3LogC
  name Colorspace4
  label "\[value colorspace_in] >> \[value colorspace_out]"
  xpos 225
  ypos 2434
 }
 Unpremult {
  name Unpremult3
  xpos 225
  ypos 2482
 }
push $N123bd4a0
 Dot {
  name Dot39
  xpos -118
  ypos 2537
 }
set N1271c200 [stack 0]
push $N123c1df0
 Colorspace {
  colorspace_out AlexaV3LogC
  name Colorspace1
  label "\[value colorspace_in] >> \[value colorspace_out]"
  xpos 58
  ypos 2300
 }
 Group {
  name ExponBlurSimple2
  onCreate "n = nuke.thisNode()\nn.knob('size').setRange(-100, 100)\nn.knob('adjustBBoxPixels').setRange(0, 400)\nn.knob('adjustBBoxPercent').setRange(1, 2)\nn.knob('safeBBoxPixels').setRange(0, 400)\nn.knob('safeBBoxPercent').setRange(1, 2)"
  knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == \"includeOriginal\":\n    if n.knob('includeOriginal').getValue() == 1:\n        merge = nuke.toNode(\"Merge1\")\n        original = nuke.toNode('Original')\n        AvgMult = nuke.toNode(\"AverageMult\")\n        steps = int(n.knob('steps').getValue())\n        merge.setInput(steps+1, original)\n        AvgMult\['whitepoint'].setValue(2 if steps<2 else steps+1)\n        \n    else:\n        merge.setInput(steps+1, None)\n        AvgMult\['whitepoint'].setValue(2 if steps<2 else steps)\n        \nelif k.name() == \"steps\":\n    \n    s = int(k.value())\n    if s<1:\n        k.setValue(1)\n    else:\n        start = nuke.toNode(\"Start\")\n        end   = nuke.toNode(\"End\")\n        b1    = nuke.toNode(\"Blur1\")\n        merge = nuke.toNode(\"Merge1\")\n        AvgMult = nuke.toNode(\"AverageMult\")\n        \n        b1x   = b1.xpos()\n        b1y   = b1.ypos()\n        b1n   = b1.name()\n        \n        steps = int(n.knob('steps').getValue())\n        size  = n.knob('size').getValue()\n        mult  = n.knob('mult').getValue()\n        \n        #b1.setInput(0, start)\n        for i in range(1,merge.inputs()):\n            merge.setInput(i,None)\n        merge.setInput(0, b1)\n        \[nuke.delete(i) for i in nuke.allNodes() if i.xpos()>start.xpos()]\n        for i in range(1,steps):\n            # Blur\n            b = nuke.nodes.Blur()\n            b.setXYpos(b1x+i*100,b1y)\n            b.setInput(0,start)\n            b\[\"channels\"].setValue(\"rgba\")\n            b\[\"crop\"].setValue(0)\n            b\[\"size\"].setValue(0, 1)\n            b\[\"size\"].setExpression(\"(Blur1.size)*(mult)**%s\"%(i))\n            b\[\"label\"].setValue(\"\[value size]\")\n            merge.setInput(i if i<2 else i+1, b)\n            AvgMult\['whitepoint'].setValue(i if i<2 else i+1)\n            \n        if n.knob('includeOriginal').getValue() == 1:\n            merge = nuke.toNode(\"Merge1\")\n            original = nuke.toNode('Original')\n            AvgMult = nuke.toNode(\"AverageMult\")\n            steps = int(n.knob('steps').getValue())\n            merge.setInput(steps+1, original)\n            AvgMult\['whitepoint'].setValue(2 if steps<2 else steps+1)\n            \nelif k.name() == \"output2\":\n    if n.knob(\"output2\").getValue() == 4:\n        n.knob('AvgMaxOriginal').setVisible(True)\n    else:\n        n.knob('AvgMaxOriginal').setVisible(False)\n        \nelif k.name() == \"safeBBox\":\n    if n.knob(\"safeBBox\").getValue() == 0:\n        n.knob('safeBBoxText').setVisible(False)\n        n.knob('safetyBBoxMethod').setVisible(False)\n        n.knob('safeBBoxPixels').setVisible(False)\n        n.knob('safeBBoxPercent').setVisible(False)\n        \n    elif n.knob(\"safeBBox\").getValue() == 1:\n        n.knob('safetyBBoxMethod').setVisible(True)\n        n.knob('safeBBoxText').setVisible(True)\n        if n.knob('safetyBBoxMethod').value() == \"pixels\":\n            n.knob('safeBBoxPixels').setVisible(True)\n            n.knob('safeBBoxPercent').setVisible(False)\n        elif n.knob('safetyBBoxMethod').value() == \"percent\":\n            n.knob('safeBBoxPixels').setVisible(False)\n            n.knob('safeBBoxPercent').setVisible(True)\n            \nelif k.name() == \"safetyBBoxMethod\":\n    if n.knob(\"safetyBBoxMethod\").value() == \"pixels\":\n        n.knob('safeBBoxPixels').setVisible(True)\n        n.knob('safeBBoxPercent').setVisible(False)\n    elif n.knob(\"safetyBBoxMethod\").value() == \"percent\":\n        n.knob('safeBBoxPixels').setVisible(False)\n        n.knob('safeBBoxPercent').setVisible(True)\n        \nelif k.name() == \"adjustBBoxExtra\":\n    if n.knob(\"adjustBBoxExtra\").value() == \"pixels\":\n        n.knob('adjustBBoxPixels').setVisible(True)\n        n.knob('adjustBBoxPercent').setVisible(False)\n    elif n.knob(\"adjustBBoxExtra\").value() == \"percent\":\n        n.knob('adjustBBoxPixels').setVisible(False)\n        n.knob('adjustBBoxPercent').setVisible(True)\n"
  tile_color 0xcc804eff
  label "(\[value output2])"
  note_font "Verdana Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
  note_font_color 0xffffffff
  xpos 58
  ypos 2365
  addUserKnob {20 ExponBlurSimple}
  addUserKnob {41 channels T Shuffle1.in}
  addUserKnob {41 maskChannelMask_1 l area T Multiply1.maskChannelMask}
  addUserKnob {41 inject_1 l inject -STARTLINE T Multiply1.inject}
  addUserKnob {41 invert_mask_1 l invert -STARTLINE T Multiply1.invert_mask}
  addUserKnob {41 fringe_1 l fringe -STARTLINE T Multiply1.fringe}
  addUserKnob {26 ""}
  addUserKnob {4 output2 l Operation: M {Screen Plus Over Hypot Average Max Min "" "" "" "" ""}}
  output2 Average
  addUserKnob {3 steps l "  Steps" -STARTLINE}
  steps 5
  addUserKnob {3 mergeNumber -STARTLINE +INVISIBLE}
  mergeNumber {{"output2 == 0 ? 25 : output2 == 1 ? 24 : output2 == 2 ? 22 : output2 == 3 ? 13 : output2 == 4 ? 24 : output2 == 5 ? 17 : 18"}}
  addUserKnob {26 text l " " -STARTLINE T " "}
  addUserKnob {6 includeOriginal l "Include Original?" -STARTLINE}
  addUserKnob {6 AvgMaxOriginal l "Use Max of Average and Original" +STARTLINE}
  addUserKnob {14 size l Size R -100 100}
  size {{parent.WrapAll_size} {parent.WrapAll_size}}
  addUserKnob {7 mult l Multiplier R 1 8}
  mult 2
  addUserKnob {26 text_1 l " " T " "}
  addUserKnob {14 postBlur l "Post Blur" R 0 100}
  postBlur {{(sqrt(input.width**2+input.height**2)/12)} {(sqrt(input.width**2+input.height**2)/12)}}
  addUserKnob {26 ""}
  addUserKnob {41 maskChannelMask l mask T MergeKeymix.maskChannelMask}
  addUserKnob {41 inject -STARTLINE T MergeKeymix.inject}
  addUserKnob {41 invert_mask l invert -STARTLINE T MergeKeymix.invert_mask}
  addUserKnob {41 fringe -STARTLINE T MergeKeymix.fringe}
  addUserKnob {4 bbox l BBox: M {union intersectionMask A B "input format" "" "" "" "" "" "" "" ""}}
  addUserKnob {6 blackOutside l "Black Outside" -STARTLINE}
  addUserKnob {6 safeBBox l "Safe BBox" t "If the output BBox is larger than the input format and the input box combined. the result will be max of the input/format bbox plus a safety \"buffer\" in pixels or percent \n\nTurning off might make your BBox grow exponentially with high blur values" -STARTLINE}
  safeBBox true
  addUserKnob {26 safeBBoxText l " " T " "}
  addUserKnob {4 safetyBBoxMethod l "Safe BBox Buffer" -STARTLINE M {pixels percent "" "" "" "" "" "" "" "" "" "" "" "" ""}}
  safetyBBoxMethod percent
  addUserKnob {14 safeBBoxPixels l "" -STARTLINE +HIDDEN R 0 400}
  safeBBoxPixels 100
  addUserKnob {14 safeBBoxPercent l "" -STARTLINE R 1 2}
  safeBBoxPercent 1.1
  addUserKnob {26 text_3 l " " T " "}
  addUserKnob {4 adjustBBoxExtra l "Extra BBox Adjust" -STARTLINE M {pixels percent "" "" "" "" "" "" "" "" "" "" "" "" ""}}
  addUserKnob {14 adjustBBoxPixels l "" -STARTLINE R 0 400}
  addUserKnob {14 adjustBBoxPercent l "" -STARTLINE +HIDDEN R 1 2}
  adjustBBoxPercent 1
  addUserKnob {41 mix T MergeKeymix.mix}
  addUserKnob {20 info l Info}
  addUserKnob {26 creator l Creator: T "Tony Lyons"}
  addUserKnob {26 desc l Description: t "Add description and tooltip for gizmo" T ExponBlurSimple}
  addUserKnob {26 ver l Version: T v02}
 }
  BackdropNode {
   inputs 0
   name BackdropNode1
   tile_color 0x535e5a00
   label "BBox Management"
   note_font_size 30
   note_font_color 0xffffffff
   xpos -529
   ypos 492
   bdwidth 341
   bdheight 525
  }
  Input {
   inputs 0
   name Inputimg
   xpos 0
   ypos -969
  }
  Dot {
   name Dot16
   note_font_size 41
   xpos 34
   ypos -802
  }
set N12756590 [stack 0]
  Dot {
   name Dot2
   note_font_size 41
   xpos -367
   ypos -802
  }
  Dot {
   name Dot18
   label B
   note_font_size 41
   xpos -367
   ypos 434
  }
  Dot {
   name Dot11
   note_font_size 41
   xpos -367
   ypos 623
  }
set N12764800 [stack 0]
  Dot {
   name Dot3
   note_font_size 41
   xpos -367
   ypos 675
  }
set N12769340 [stack 0]
  Dot {
   name Dot8
   note_font_size 41
   xpos -463
   ypos 675
  }
  Dot {
   name Dot15
   note_font_size 41
   xpos -463
   ypos 831
  }
push $N12756590
  Dot {
   name Dot1
   note_font_size 41
   xpos 461
   ypos -802
  }
  Shuffle {
   name Shuffle1
   label "\[value in]"
   xpos 427
   ypos -756
  }
  Remove {
   operation keep
   channels rgba
   name Remove1
   xpos 427
   ypos -718
  }
  Dot {
   name Dot21
   note_font_size 41
   xpos 461
   ypos -597
  }
set N127951d0 [stack 0]
  Invert {
   channels rgba
   name Invert1
   xpos 695
   ypos -601
   disable {{"parent.size < 0 ? 0 : 1"}}
  }
set N12799d30 [stack 0]
  Dot {
   name Dot4
   note_font_size 41
   xpos 540
   ypos -543
  }
  NoOp {
   name Original
   xpos 506
   ypos -327
  }
set N127aa2b0 [stack 0]
  Dot {
   name Dot5
   note_font_size 41
   xpos 540
   ypos 14
  }
  Crop {
   inputs 0
   box {{input.format.x} {input.format.y} {input.format.r} {input.format.t}}
   reformat true
   crop false
   name Crop1
   xpos 210
   ypos -750
   addUserKnob {20 User}
   addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  }
  AddChannels {
   channels rgba
   name AddChannels2
   xpos 210
   ypos -724
  }
push $N12756590
  Merge2 {
   inputs 2
   name Merge3
   label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
   xpos 83
   ypos -671
  }
  NoOp {
   name BBoxInput
   xpos 83
   ypos -628
   addUserKnob {20 User}
   addUserKnob {15 bbox}
   bbox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
  }
push $N127aa2b0
  Input {
   inputs 0
   name Inputarea
   xpos 289
   ypos -638
   number 2
  }
  AddChannels {
   channels alpha
   color 1
   name AddChannels1
   xpos 289
   ypos -580
  }
  Invert {
   channels rgba
   name Invert3
   xpos 289
   ypos -503
  }
push $N12799d30
  Multiply {
   inputs 1+1
   channels rgba
   value 0
   name Multiply1
   label "\[value value]"
   xpos 695
   ypos -509
  }
  NoOp {
   name Start
   xpos 695
   ypos -450
  }
set N12802940 [stack 0]
  Blur {
   channels rgba
   size {{(Blur1.size)*(mult)**4} {(Blur1.size)*(mult)**4}}
   crop false
   name Blur5
   label "\[value size]"
   xpos 1095
   ypos -370
  }
push $N12802940
  Blur {
   channels rgba
   size {{(Blur1.size)*(mult)**3} {(Blur1.size)*(mult)**3}}
   crop false
   name Blur4
   label "\[value size]"
   xpos 995
   ypos -370
  }
push $N12802940
  Blur {
   channels rgba
   size {{(Blur1.size)*(mult)**2} {(Blur1.size)*(mult)**2}}
   crop false
   name Blur3
   label "\[value size]"
   xpos 895
   ypos -370
  }
push 0
push $N12802940
  Blur {
   channels rgba
   size {{(Blur1.size)*(mult)**1} {(Blur1.size)*(mult)**1}}
   crop false
   name Blur2
   label "\[value size]"
   xpos 795
   ypos -370
  }
push $N12802940
  Blur {
   channels rgba
   size {{parent.size.w} {parent.size.h}}
   name Blur1
   label "\[value size]"
   xpos 695
   ypos -370
  }
  Merge2 {
   inputs 6+1
   operation {{parent.mergeNumber}}
   name Merge1
   label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
   xpos 695
   ypos -256
  }
  NoOp {
   name End
   xpos 695
   ypos -230
  }
set N1285c7a0 [stack 0]
  CopyBBox {
   inputs 2
   name CopyBBox1
   xpos 585
   ypos -175
  }
  Group {
   name BBoxToFormat
   onCreate "n = nuke.thisNode()\ninputFormat = n.knob(\"inputFormat\")\ninputBBox = n.knob(\"inputBBox\")\ncrop = nuke.toNode(\"Crop6\")\ncropb = crop.knob('box')\noutputBBox = n.knob('outputBBox')\noutputBBoxCenter = n.knob(\"outputBBoxCenter\")\n\ninputFormat.setFlag(0x0000000000008000)\ninputBBox.setFlag(0x0000000000008000)\ncropb.setFlag(0x0000000000008000)\noutputBBox.setFlag(0x0000000000008000)\noutputBBoxCenter.setFlag(0x0000000000008000)\n\nn = nuke.thisNode()\nn.knob(\"overscan\").setRange(0,400)\nn.knob(\"overscanPercent\").setRange(1,4)"
   tile_color 0xa57aaaff
   note_font "Verdana Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
   note_font_color 0xffffffff
   xpos 585
   ypos -151
   addUserKnob {20 CropBBox}
   addUserKnob {4 type l Type +INVISIBLE M {"To Format" "To BBox"}}
   addUserKnob {41 intersect T Crop6.intersect}
   addUserKnob {6 blackOutside l "Black Outside" -STARTLINE}
   addUserKnob {4 overscanType l "Overscan Type:" M {Pixels Percentage}}
   overscanType {{parent.safetyBBoxMethod}}
   addUserKnob {14 overscan l Overscan R 0 400}
   overscan {{parent.safeBBoxPixels} {parent.safeBBoxPixels}}
   addUserKnob {14 overscanPercent l "Overscan Percent" R 1 4}
   overscanPercent {{parent.safeBBoxPercent} {parent.safeBBoxPercent}}
   addUserKnob {20 inputBbox l "BBox Data" n 1}
   addUserKnob {15 inputFormat l "Input Format"}
   inputFormat {0 0 {input.width} {input.height}}
   addUserKnob {15 inputBBox l "Input BBox"}
   inputBBox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
   addUserKnob {12 outputBBoxCenter l OutputBBoxCenter}
   outputBBoxCenter {{OutputBBox1.outputBBoxCenter.w} {OutputBBox1.outputBBoxCenter.h}}
   addUserKnob {15 outputBBox l "Output BBox"}
   outputBBox {{OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox}}
   addUserKnob {20 endGroup n -1}
   addUserKnob {20 info_1 l Info}
   addUserKnob {26 creator l Creator: T "<b><big>Tony Lyons"}
   addUserKnob {26 desc l Description: t "crop to inputformat\n\ndisplays values of input bbox" T CropBBox}
   addUserKnob {26 ver l Version: T v02}
  }
   Input {
    inputs 0
    name Input
    xpos 261
    ypos 394
   }
   Dot {
    name Dot2
    note_font_size 41
    xpos 295
    ypos 462
   }
set N1287d650 [stack 0]
   Dot {
    name Dot1
    note_font_size 41
    xpos -160
    ypos 462
   }
set N128821a0 [stack 0]
push $N1287d650
   Crop {
    box {{parent.inputBBox} {parent.inputBBox} {parent.inputBBox} {parent.inputBBox}}
    crop {{parent.blackOutside}}
    name Crop6
    xpos 261
    ypos 510
    addUserKnob {20 User}
    addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_1 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_2 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_3 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_4 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_5 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_6 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_7 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_8 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_9 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_10 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_11 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_12 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_13 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_14 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_15 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_16 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_17 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_18 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
    addUserKnob {22 cropToBbox_19 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   }
set N12886d60 [stack 0]
   Remove {
    operation keep
    channels none
    name Remove1
    xpos 120
    ypos 504
   }
set N128950f0 [stack 0]
   Transform {
    scale {{parent.overscanPercent} {parent.overscanPercent}}
    center {{((input.bbox.r-input.bbox.x)/2)+input.bbox.x} {((input.bbox.t-input.bbox.y)/2)+input.bbox.y}}
    shutteroffset centred
    name Transform1
    selected true
    xpos 120
    ypos 553
   }
push $N128950f0
   AdjBBox {
    numpixels {{parent.overscan} {parent.overscan}}
    name AdjBBox1
    xpos -5
    ypos 510
   }
   Switch {
    inputs 2
    which {{overscanType}}
    name Switch2
    label "\[value which]"
    xpos -5
    ypos 549
   }
   Merge2 {
    inputs 2
    bbox intersection
    Achannels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
    Bchannels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
    output {-rgba.red -rgba.green -rgba.blue rgba.alpha}
    name Merge1
    xpos -5
    ypos 647
    disable {{!parent.Crop6.intersect}}
   }
push $N128821a0
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos -194
    ypos 653
   }
   BlackOutside {
    name BlackOutside1
    xpos -194
    ypos 692
    disable {{!parent.blackOutside}}
   }
   Dot {
    name Dot4
    note_font_size 41
    xpos -160
    ypos 769
   }
push $N12886d60
   Switch {
    inputs 2
    which {{"overscanType == 0 ? overscan.w != 0 || overscan.h != 0 : overscanPercent.w != 1 || overscanPercent.h != 1 ? 1 : 0"}}
    name Switch1
    label "\[value which]"
    xpos 261
    ypos 759
   }
set N128e0d80 [stack 0]
   Output {
    name Output1
    xpos 261
    ypos 921
   }
push $N128e0d80
   NoOp {
    name OutputBBox1
    xpos 378
    ypos 821
    addUserKnob {20 User}
    addUserKnob {15 OutputBBox l "Output BBox"}
    OutputBBox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
    addUserKnob {14 outputBBoxCenter l "Output BBox Center" R 0 100}
    outputBBoxCenter {{OutputBBox.x+(OutputBBox.r-OutputBBox.x)/2} {OutputBBox.y+(OutputBBox.t-OutputBBox.y)/2}}
   }
  end_group
push $N1285c7a0
  Merge2 {
   inputs 2
   bbox intersection
   name Merge4
   xpos 585
   ypos -127
  }
push $N1285c7a0
  CopyBBox {
   inputs 2
   name CopyBBox2
   xpos 585
   ypos -101
  }
push $N1285c7a0
  Switch {
   inputs 2
   which {{"parent.safeBBox && ((BBoxResult.bbox.x < BBoxInput.bbox.x || BBoxResult.bbox.y < BBoxInput.bbox.y || BBoxResult.bbox.r > BBoxInput.bbox.r || BBoxResult.bbox.t > BBoxInput.bbox.t))"}}
   name Switch2
   label "\[value which]"
   xpos 695
   ypos -106
  }
  Grade {
   channels rgba
   whitepoint 6
   black_clamp false
   name AverageMult
   xpos 695
   ypos -37
   disable {{"output2 == 4 ? 0 : 1"}}
  }
  Merge2 {
   inputs 2
   operation max
   name Merge2
   label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
   xpos 695
   ypos 10
   disable {{"output2 == 4 && includeOriginal == 1 && AvgMaxOriginal == 1 ? 0 : 1"}}
  }
  Blur {
   channels rgba
   size {{postBlur} {postBlur}}
   name BlurOriginal
   label "\[value size]"
   xpos 695
   ypos 59
  }
  Invert {
   channels rgba
   name Invert2
   xpos 695
   ypos 97
   disable {{"parent.size < 0 ? 0 : 1"}}
  }
push $N127951d0
  Switch {
   inputs 2
   which {{"parent.size == 0 ? 0 : 1"}}
   name Switch1
   label "\[value which]"
   xpos 427
   ypos 93
  }
push $N12756590
  ShuffleCopy {
   inputs 2
   in2 none
   black red
   white green
   red2 blue
   green2 alpha
   out none
   out2 {{{parent.Shuffle1.in}}}
   name ShuffleCopy1
   xpos 0
   ypos 97
  }
  Dot {
   name Dot17
   label A
   note_font_size 41
   xpos 34
   ypos 455
  }
  Dot {
   name Dot7
   note_font_size 41
   xpos 34
   ypos 585
  }
set N1296b6c0 [stack 0]
  Dot {
   name Dot12
   note_font_size 41
   xpos -260
   ypos 585
  }
  Dot {
   name Dot13
   note_font_size 41
   xpos -260
   ypos 799
  }
push $N12764800
  Input {
   inputs 0
   name Inputmask
   xpos 346
   ypos 325
   number 1
  }
  Dot {
   name Dot19
   label Mask
   note_font_size 41
   xpos 380
   ypos 438
  }
set N1297e610 [stack 0]
  Dot {
   name Dot20
   note_font_size 41
   xpos 270
   ypos 438
  }
push $N1296b6c0
  Merge2 {
   inputs 2
   bbox intersection
   Achannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
   Bchannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
   output {rgba.red -rgba.green -rgba.blue rgba.alpha}
   name MergeIntersection
   xpos 236
   ypos 575
   disable {{"!\[exists parent.input1]"}}
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
   Bchannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
   output {rgba.red -rgba.green -rgba.blue rgba.alpha}
   name MergeUnion
   xpos 236
   ypos 613
   disable {{"!\[exists parent.input1]"}}
  }
  Dot {
   name Dot6
   label "intersection\nof (Mask and A) + B"
   note_font_size 14
   note_font_color 0xffffffff
   xpos 270
   ypos 773
  }
push $N1297e610
  Dot {
   name Dot10
   note_font_size 41
   xpos 380
   ypos 675
  }
push $N1296b6c0
push $N12769340
  Merge2 {
   inputs 2+1
   operation copy
   Achannels none
   Bchannels none
   output none
   also_merge all
   name MergeKeymix
   xpos 0
   ypos 665
  }
  Dot {
   name Dot14
   note_font_size 41
   xpos 34
   ypos 747
  }
set N129c2560 [stack 0]
push $N12769340
  CopyBBox {
   inputs 2
   name CopyBBoxUnion
   xpos -401
   ypos 743
   disable {{parent.bbox==0?0:1}}
  }
  CopyBBox {
   inputs 2
   name CopyBBoxIntersection
   xpos -401
   ypos 769
   disable {{"parent.bbox==1 ? 0 : 1"}}
  }
  CopyBBox {
   inputs 2
   name CopyBBoxA
   xpos -401
   ypos 795
   disable {{"parent.bbox==2 ? 0 : 1"}}
  }
  CopyBBox {
   inputs 2
   name CopyBBoxB
   xpos -401
   ypos 827
   disable {{"parent.bbox==3 ? 0 : 1"}}
  }
  Crop {
   box {0 0 {parent.width} {parent.height}}
   crop false
   name CopyBBoxFormat
   xpos -401
   ypos 853
   disable {{"parent.bbox==4 ? 0 : 1"}}
   addUserKnob {20 User}
   addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_1 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_2 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_3 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_4 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_5 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_6 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_7 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_8 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_9 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_10 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
   addUserKnob {22 cropToBbox_11 l "Crop to Bounding Box" -STARTLINE T codeBBox()}
  }
set N129e6150 [stack 0]
  Transform {
   scale {{parent.adjustBBoxPercent} {parent.adjustBBoxPercent}}
   center {{((input.bbox.r-input.bbox.x)/2)+input.bbox.x} {((input.bbox.t-input.bbox.y)/2)+input.bbox.y}}
   black_outside false
   shutteroffset centred
   name TransformBBoxAdjustPercent
   xpos -516
   ypos 898
  }
push $N129e6150
  AdjBBox {
   numpixels {{parent.adjustBBoxPixels} {parent.adjustBBoxPixels}}
   name AdjBBoxPixels
   xpos -401
   ypos 901
  }
  Switch {
   inputs 2
   which {{adjustBBoxExtra}}
   name Switch3
   xpos -401
   ypos 940
  }
  Dot {
   name Dot9
   note_font_size 41
   xpos -367
   ypos 993
  }
push $N129c2560
  CopyBBox {
   inputs 2
   name CopyBBox
   xpos 0
   ypos 989
  }
  BlackOutside {
   name BlackOutside1
   xpos 0
   ypos 1015
   disable {{!parent.blackOutside}}
  }
  Output {
   name Output1
   xpos 0
   ypos 1155
  }
push $N1285c7a0
  NoOp {
   name BBoxResult
   xpos 588
   ypos -223
   addUserKnob {20 User}
   addUserKnob {15 bbox}
   bbox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
  }
 end_group
 Colorspace {
  colorspace_in AlexaV3LogC
  name Colorspace2
  label "\[value colorspace_in] >> \[value colorspace_out]"
  xpos 58
  ypos 2431
 }
 Unpremult {
  name Unpremult2
  xpos 58
  ypos 2479
 }
 Merge2 {
  inputs 2
  operation divide
  name Merge2
  label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
  xpos 58
  ypos 2533
 }
 Merge2 {
  inputs 2
  operation multiply
  name Merge4
  label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
  xpos 58
  ypos 2580
 }
push $N1271c200
 Dot {
  name Dot34
  note_font_size 41
  xpos -118
  ypos 2630
 }
set N12a71840 [stack 0]
 Group {
  inputs 2
  name ColorCopy_v01_1
  tile_color 0x9e3c6300
  xpos 58
  ypos 2626
  addUserKnob {20 "" l User}
  addUserKnob {6 hue -STARTLINE}
  hue true
  addUserKnob {6 saturation -STARTLINE}
  saturation true
  addUserKnob {6 value -STARTLINE}
  value {{!parent.pblacks}}
  addUserKnob {7 huemix l "hue mix"}
  huemix 1
  addUserKnob {7 satmix l "saturation mix"}
  satmix 1
  addUserKnob {7 valmix l "value mix"}
  valmix 1
  addUserKnob {4 bbox M {"A side" "B side"}}
  bbox "B side"
 }
  Input {
   inputs 0
   name B
   xpos -150
   ypos -450
  }
set N12a80a90 [stack 0]
  Dot {
   name Dot1
   tile_color 0xc0c0c000
   xpos -264
   ypos -380
  }
  Input {
   inputs 0
   name A
   xpos 235
   ypos -469
   number 1
  }
  Colorspace {
   colorspace_out HSV
   name Colorspace5
   xpos 235
   ypos -405
  }
set N12a8ec30 [stack 0]
  Dot {
   name Dot2
   tile_color 0xc0c0c000
   xpos 214
   ypos 114
  }
push $N12a8ec30
push $N12a8ec30
push $N12a8ec30
push $N12a80a90
  Colorspace {
   colorspace_out HSV
   name Colorspace4
   xpos -150
   ypos -394
  }
set N12aac350 [stack 0]
  Copy {
   inputs 2
   from0 rgba.red
   to0 rgba.red
   bbox A
   name ChannelCopy3
   tile_color 0x9e3c6300
   label "(red -> red)"
   xpos -30
   ypos -270
   disable {{1-parent.hue}}
  }
push $N12aac350
  Dissolve {
   inputs 2
   channels {rgba.red -rgba.green -rgba.blue none}
   which {{parent.huemix}}
   name Dissolve1
   label (red)
   xpos -150
   ypos -225
  }
set N12ad3190 [stack 0]
  Copy {
   inputs 2
   from0 rgba.green
   to0 rgba.green
   bbox A
   name ChannelCopy4
   tile_color 0x9e3c6300
   label "(green -> green)"
   xpos -29
   ypos -198
   disable {{1-parent.saturation i}}
  }
push $N12ad3190
  Dissolve {
   inputs 2
   channels {-rgba.red rgba.green -rgba.blue none}
   which {{parent.satmix}}
   name Dissolve2
   label (green)
   xpos -150
   ypos -136
  }
set N12aec550 [stack 0]
  Copy {
   inputs 2
   from0 rgba.blue
   to0 rgba.blue
   bbox A
   name ChannelCopy1
   tile_color 0x9e3c6300
   label "(blue -> blue)"
   xpos -26
   ypos -88
   disable {{1-parent.value}}
  }
push $N12aec550
  Dissolve {
   inputs 2
   channels {-rgba.red -rgba.green rgba.blue none}
   which {{parent.valmix}}
   name Dissolve3
   label (blue)
   xpos -150
   ypos -16
  }
  Colorspace {
   colorspace_in HSV
   name Colorspace6
   xpos -150
   ypos 63
  }
  CopyBBox {
   inputs 2
   name CopyBBox2
   tile_color 0x9e3c6300
   xpos -150
   ypos 111
  }
set N12b29690 [stack 0]
  CopyBBox {
   inputs 2
   name CopyBBox1
   tile_color 0x9e3c6300
   xpos -298
   ypos 111
   disable {{1-(parent.bbox==1)}}
  }
  Output {
   name Output1
   xpos -298
   ypos 183
  }
push $N12b29690
  Viewer {
   frame_range 1,26
   roi {40 40 600 440}
   input_process false
   name Viewer1
   tile_color 0xff00f200
   xpos -343
   ypos -321
   hide_input true
   addUserKnob {20 User}
   addUserKnob {6 toAddBtn -STARTLINE}
   toAddBtn true
   addUserKnob {6 toAddBtn_1 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn_2 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn_3 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn_4 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn_5 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn_6 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn_7 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn_8 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn_9 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn_10 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn_11 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn -STARTLINE}
   toAddBtn true
  }
 end_group
push $N12a71840
 Merge2 {
  inputs 2+1
  operation copy
  output {rgba.red rgba.green rgba.blue -rgba.alpha}
  mix {{parent.BGwashAmount}}
  name Merge9
  label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
  xpos -152
  ypos 2716
 }
 Premult {
  name Premult3
  xpos -152
  ypos 2774
  disable {{premultiplied*-1+1 i}}
 }
 Dot {
  name Dot19
  xpos -118
  ypos 3257
 }
 Switch {
  inputs 5
  which {{"\[value ls parent.outputView]"}}
  name Switch1
  xpos 1708
  ypos 3253
 }
push $N10d092d0
 Dot {
  name Dot5
  note_font_size 41
  xpos -570
  ypos 3442
 }
 Merge2 {
  inputs 2+1
  operation copy
  also_merge all
  name MergeCopyLightWrapPro
  label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
  xpos 1708
  ypos 3438
 }
 Output {
  name Output1
  xpos 1708
  ypos 3756
 }
push $Nfe332d0
 Crop {
  box {0 0 {parent.Crop1.box.r i} {parent.Crop1.box.t i}}
  name Crop5
  xpos 882
  ypos 547
  addUserKnob {20 User}
  addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
 }
push $N10625390
 Crop {
  box {0 0 {"\[value input.format.w]"} {"\[value input.format.h]"}}
  name Crop1
  xpos 57
  ypos 505
  addUserKnob {20 User}
  addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
 }
end_group
Dot {
 name Dot323
 selected true
 xpos -5133
 ypos -1754
}
Dot {
 name Dot324
 note_font_size 41
 selected true
 xpos 1751
 ypos -1754
}
set Nd77de20 [stack 0]
Remove {
 operation keep
 channels rgba
 name Remove7
 selected true
 xpos 1861
 ypos -1758
}
push $Nc345e90
Dot {
 name Dot121
 note_font_size 41
 selected true
 xpos -4519
 ypos -4574
}
set Nd78b1c0 [stack 0]
Shuffle {
 in cleanplate
 name Shuffle1
 label "\[value in]"
 selected true
 xpos -4553
 ypos -4530
}
Remove {
 operation keep
 channels rgba
 name Remove3
 selected true
 xpos -4553
 ypos -4492
}
NoOp {
 name Anchor_3d5fc4c58e
 help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated Sep 27 2019"
 onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.anchorOnCreate()\n    except:\n        pass"
 knobChanged stamps.anchorKnobChanged()
 autolabel "nuke.thisNode().knob(\"title\").value()"
 tile_color 0xffffff01
 note_font_size 20
 selected true
 xpos -4553
 ypos -4440
 addUserKnob {20 anchor_tab l "Anchor Stamp"}
 addUserKnob {26 identifier -STARTLINE +HIDDEN T anchor}
 addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
 title "GS cleanplate"
 addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T cleanplate}
 addUserKnob {26 prev_name l "" +STARTLINE +HIDDEN T Anchor_3d5fc4c58e}
 addUserKnob {3 showing l "" +STARTLINE +HIDDEN}
 addUserKnob {1 tags l Tags t "Comma-separated tags you can define for each Anchor, that will help you find it when invoking the Stamp Selector by pressing the Stamps shortkey with nothing selected."}
 tags 2D,
 addUserKnob {26 line1 l "" +STARTLINE}
 addUserKnob {26 stamps_label l Stamps: T " "}
 addUserKnob {22 createStamp l new t "Create a new Stamp for this Anchor." -STARTLINE T stamps.stampCreateWired(nuke.thisNode())}
 addUserKnob {22 selectStamps l select t "Reconnect all of this Anchor's Stamps." -STARTLINE T stamps.wiredSelectSimilar(nuke.thisNode().name())}
 addUserKnob {22 reconnectStamps l reconnect -STARTLINE T stamps.anchorReconnectWired()}
 addUserKnob {22 zoomNext l "zoom next" t "Navigate to this Anchor's next Stamp on the Node Graph." -STARTLINE T stamps.wiredZoomNext(nuke.thisNode().name())}
 addUserKnob {26 line2 l "" +STARTLINE}
 addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
 addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated Sep 27 2019." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.0</big></b></a>"}
}
NoOp {
 name Stamp33
 help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated Sep 27 2019"
 onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
 knobChanged "import stamps; stamps.wiredKnobChanged()"
 autolabel "nuke.thisNode().knob(\"title\").value()"
 tile_color 0x1000001
 note_font "Bitstream Vera Sans"
 note_font_size 20
 selected true
 xpos 1899
 ypos -2169
 hide_input true
 addUserKnob {20 wired_tab l "Wired Stamp"}
 addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
 addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
 addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
 addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
 title "GS cleanplate"
 addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T "GS cleanplate"}
 addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
 addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i>Advanced Keying Template</i>"}
 addUserKnob {26 line1 l "" +STARTLINE}
 addUserKnob {26 anchor_label l Anchor: T " "}
 addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
 addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
 addUserKnob {26 stamps_label l Stamps: T " "}
 addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
 addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
 addUserKnob {26 space_1 l "" +STARTLINE T " "}
 addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
 addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
 addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
 addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
 addUserKnob {26 space_2 l "" +STARTLINE T " "}
 addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
 addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
 addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
 addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
 addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
 addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
 addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
 addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
 addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
 addUserKnob {1 anchor l Anchor}
 anchor Anchor_3d5fc4c58e
 addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
 addUserKnob {20 advanced_reconnection_1 l "Advanced Reconnection" +INVISIBLE n -1}
 addUserKnob {26 line2 l "" +STARTLINE}
 addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
 addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated Sep 27 2019." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.0</big></b></a>"}
}
Dot {
 name Dot328
 note_font_size 41
 selected true
 xpos 1933
 ypos -2071
}
push $Nd78b1c0
Dot {
 name Dot124
 note_font_size 41
 selected true
 xpos -4371
 ypos -4574
}
Shuffle {
 in GS_Plate
 name Shuffle25
 label "\[value in]"
 selected true
 xpos -4405
 ypos -4531
}
Remove {
 operation keep
 channels rgba
 name Remove4
 selected true
 xpos -4405
 ypos -4493
}
NoOp {
 name Anchor_2bcb55a0c8
 help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated Sep 27 2019"
 onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.anchorOnCreate()\n    except:\n        pass"
 knobChanged stamps.anchorKnobChanged()
 autolabel "nuke.thisNode().knob(\"title\").value()"
 tile_color 0xffffff01
 note_font_size 20
 selected true
 xpos -4405
 ypos -4437
 addUserKnob {20 anchor_tab l "Anchor Stamp"}
 addUserKnob {26 identifier -STARTLINE +HIDDEN T anchor}
 addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
 title "GS Plate"
 addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T "GS Plate"}
 addUserKnob {26 prev_name l "" +STARTLINE +HIDDEN T Anchor_2bcb55a0c8}
 addUserKnob {3 showing l "" +STARTLINE +HIDDEN}
 addUserKnob {1 tags l Tags t "Comma-separated tags you can define for each Anchor, that will help you find it when invoking the Stamp Selector by pressing the Stamps shortkey with nothing selected."}
 tags 2D,
 addUserKnob {26 line1 l "" +STARTLINE}
 addUserKnob {26 stamps_label l Stamps: T " "}
 addUserKnob {22 createStamp l new t "Create a new Stamp for this Anchor." -STARTLINE T stamps.stampCreateWired(nuke.thisNode())}
 addUserKnob {22 selectStamps l select t "Reconnect all of this Anchor's Stamps." -STARTLINE T stamps.wiredSelectSimilar(nuke.thisNode().name())}
 addUserKnob {22 reconnectStamps l reconnect -STARTLINE T stamps.anchorReconnectWired()}
 addUserKnob {22 zoomNext l "zoom next" t "Navigate to this Anchor's next Stamp on the Node Graph." -STARTLINE T stamps.wiredZoomNext(nuke.thisNode().name())}
 addUserKnob {26 line2 l "" +STARTLINE}
 addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
 addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated Sep 27 2019." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.0</big></b></a>"}
}
NoOp {
 name Stamp34
 help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated Sep 27 2019"
 onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.wiredOnCreate()\n    except:\n        pass\n"
 knobChanged "import stamps; stamps.wiredKnobChanged()"
 autolabel "nuke.thisNode().knob(\"title\").value()"
 tile_color 0x1000001
 note_font "Bitstream Vera Sans"
 note_font_size 20
 selected true
 xpos 2167
 ypos -2162
 hide_input true
 addUserKnob {20 wired_tab l "Wired Stamp"}
 addUserKnob {26 identifier -STARTLINE +HIDDEN T wired}
 addUserKnob {3 lockCallbacks l "" +STARTLINE +HIDDEN}
 addUserKnob {6 toReconnect -STARTLINE +HIDDEN}
 addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
 title "GS Plate"
 addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T "GS Plate"}
 addUserKnob {26 tags l Tags: t "Tags of this stamp's Anchor, for information purpose only.\nClick \"show anchor\" to change them." T <i>2D</i>}
 addUserKnob {26 backdrops l Backdrops: t "Labels of backdrop nodes which contain this stamp's Anchor." T "<i>Advanced Keying Template</i>"}
 addUserKnob {26 line1 l "" +STARTLINE}
 addUserKnob {26 anchor_label l Anchor: T " "}
 addUserKnob {22 show_anchor l " show anchor " t "Show the properties panel for this Stamp's Anchor." -STARTLINE T stamps.wiredShowAnchor()}
 addUserKnob {22 zoom_anchor l "zoom anchor" t "Navigate to this Stamp's Anchor on the Node Graph." -STARTLINE T stamps.wiredZoomAnchor()}
 addUserKnob {26 stamps_label l Stamps: T " "}
 addUserKnob {22 zoomNext l " zoom next " t "Navigate to this Stamp's next sibling on the Node Graph." -STARTLINE T stamps.wiredZoomNext()}
 addUserKnob {22 selectSimilar l " select similar " t "Select all similar Stamps to this one on the Node Graph." -STARTLINE T stamps.wiredSelectSimilar()}
 addUserKnob {26 space_1 l "" +STARTLINE T " "}
 addUserKnob {26 reconnect_label l Reconnect: t "Reconnect by the stored Anchor name." T " "}
 addUserKnob {22 reconnect_this l this t "Reconnect this Stamp to its Anchor, by its stored Anchor name." -STARTLINE T "n = nuke.thisNode()\ntry:\n    n.setInput(0,nuke.toNode(n.knob(\"anchor\").value()))\nexcept:\n    nuke.message(\"Unable to reconnect.\")\ntry:\n    import stamps\n    stamps.wiredGetStyle(n)\nexcept:\n    pass\n"}
 addUserKnob {22 reconnect_similar l similar t "Reconnect this Stamp and similar ones to their Anchor, by their stored anchor name." -STARTLINE T stamps.wiredReconnectSimilar()}
 addUserKnob {22 reconnect_all l all t "Reconnect all the Stamps to their Anchors, by their stored anchor names." -STARTLINE T stamps.wiredReconnectAll()}
 addUserKnob {26 space_2 l "" +STARTLINE T " "}
 addUserKnob {20 advanced_reconnection l "Advanced Reconnection" n 2}
 addUserKnob {26 reconnect_by_title_label l "<font color=gold>By Title:" t "Reconnect by searching for a matching title." T " "}
 addUserKnob {22 reconnect_by_title_this l this t "Look for an Anchor that shares this Stamp's title, and connect this Stamp to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitle()}
 addUserKnob {22 reconnect_by_title_similar l similar t "Look for an Anchor that shares this Stamp's title, and connect this Stamp and similar ones to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSimilar()}
 addUserKnob {22 reconnect_by_title_selected l selected t "For each Stamp selected, look for an Anchor that shares its title, and connect to it.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectByTitleSelected()}
 addUserKnob {26 reconnect_by_selection_label l "<font color=orangered>By Selection:" t "Force reconnect to a selected Anchor." T " "}
 addUserKnob {22 reconnect_by_selection_this l this t "Force reconnect this Stamp to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelection()}
 addUserKnob {22 reconnect_by_selection_similar l similar t "Force reconnect this Stamp and similar ones to a selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSimilar()}
 addUserKnob {22 reconnect_by_selection_selected l selected t "Force reconnect all selected Stamps to an also selected Anchor, whatever its name or title.\nIMPORTANT: Use this carefully, and only when the normal reconnection doesn't work." -STARTLINE T stamps.wiredReconnectBySelectionSelected()}
 addUserKnob {1 anchor l Anchor}
 anchor Anchor_2bcb55a0c8
 addUserKnob {6 auto_reconnect_by_title l "<font color=#ED9977>&nbsp; auto-reconnect by title" t "When creating this stamp again (like on copy-paste), auto-reconnect it by title instead of doing it by the saved anchor's name, and auto-turn this off immediately.\nIMPORTANT: Should be off by default. Only use this for setting up templates." +STARTLINE}
 addUserKnob {20 advanced_reconnection_1 l "Advanced Reconnection" +INVISIBLE n -1}
 addUserKnob {26 line2 l "" +STARTLINE}
 addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
 addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated Sep 27 2019." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.0</big></b></a>"}
}
Dot {
 name Dot325
 note_font_size 41
 selected true
 xpos 2201
 ypos -2071
}
push $Na182040
Dot {
 name Dot331
 note_font_size 41
 selected true
 xpos 2077
 ypos -2245
}
Group {
 inputs 3
 name AddKeyerAdvanced
 tile_color 0x5200ff
 note_font "Verdana Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
 note_font_color 0xffffffff
 selected true
 xpos 2043
 ypos -2075
 disable true
 addUserKnob {20 AdditiveKeyer}
 addUserKnob {6 useSC l "Use Screen Color For CleanPlate" +STARTLINE}
 addUserKnob {41 screenColor l "Screen Color" T Keylight1.screenColour}
 addUserKnob {6 despillSat l "Despill Screen Color from Saturation?" +STARTLINE}
 despillSat true
 addUserKnob {26 ""}
 addUserKnob {7 DarkValue R 0 10}
 DarkValue 1
 addUserKnob {7 satDarks l "Saturate Darks"}
 satDarks 0.2
 addUserKnob {18 darkTint l DarkTint}
 darkTint 1
 addUserKnob {6 darkTint_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 darkTint_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 darkTint_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 darkTint_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 darkTint_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 darkTint_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 darkTint_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 darkTint_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 darkTint_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 darkTint_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 darkTint_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 darkTint_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 darkTint_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 darkTint_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 darkTint_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 ""}
 addUserKnob {7 LightValue R 0 10}
 LightValue 1
 addUserKnob {7 satLights l "Saturate Lights"}
 satLights 0.2
 addUserKnob {18 lightTint l LightTint}
 lightTint 1
 addUserKnob {6 lightTint_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 lightTint_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 lightTint_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 lightTint_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 lightTint_panelDropped_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 lightTint_panelDropped_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 lightTint_panelDropped_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 lightTint_panelDropped_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 lightTint_panelDropped_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 lightTint_panelDropped_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 lightTint_panelDropped_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 lightTint_panelDropped_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 lightTint_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 lightTint_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 lightTint_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 ""}
 addUserKnob {6 darkTint_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" +HIDDEN +STARTLINE}
 addUserKnob {6 darkTint_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 darkTint_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 darkTint_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 lightTint_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" +HIDDEN +STARTLINE}
 addUserKnob {6 lightTint_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 lightTint_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 lightTint_panelDropped_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 compositeSwitch l "Output Difference to RGBA" +STARTLINE}
 addUserKnob {6 outputDiffAlpha l "Output Difference Matte to Alpha" +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {41 maskChannelMask l mask T MergeKeymix.maskChannelMask}
 addUserKnob {41 inject -STARTLINE T MergeKeymix.inject}
 addUserKnob {41 invert_mask l invert -STARTLINE T MergeKeymix.invert_mask}
 addUserKnob {41 fringe -STARTLINE T MergeKeymix.fringe}
 addUserKnob {41 mix T MergeKeymix.mix}
 addUserKnob {20 info l Info}
 addUserKnob {26 creator l "Modified By:" T "<b><big>Tony Lyons"}
 addUserKnob {26 desc l Description: t "adds the difference between cleanplate and key plate to the BG\n\nGood for hair details and shadows and sensitive edge treatment" T AdditiveKeyer}
}
 Input {
  inputs 0
  name Inputmask
  xpos 685
  ypos 424
  number 3
 }
 Dot {
  name Dot10
  label Mask
  note_font_size 41
  xpos 719
  ypos 1166
 }
 Dot {
  name Dot11
  note_font_size 41
  xpos 719
  ypos 1266
 }
 Input {
  inputs 0
  name key
  label "\[value number]"
  xpos -345
  ypos -770
  number 1
 }
 Remove {
  channels alpha
  name Remove2
  xpos -345
  ypos -696
 }
 AddChannels {
  channels rgba
  name AddChannels2
  xpos -345
  ypos -658
 }
 Dot {
  name Dot26
  note_font_size 41
  xpos -311
  ypos -544
 }
set Nd8334c0 [stack 0]
 OFXuk.co.thefoundry.keylight.keylight_v201 {
  show "Final Result"
  unPreMultiply false
  screenColour {0 0 0}
  screenGain 1
  screenBalance 0.5
  alphaBias {0.5 0.5 0.5}
  despillBias {0.5 0.5 0.5}
  gangBiases true
  preBlur 0
  "Screen Matte" 0
  screenClipMin 0
  screenClipMax 1
  screenClipRollback 0
  screenGrowShrink 0
  screenSoftness 0
  screenDespotBlack 0
  screenDespotWhite 0
  screenReplaceMethod "Soft Colour"
  screenReplaceColour {0.5 0.5 0.5}
  Tuning 0
  midPoint 0.5
  lowGain 1
  midGain 1
  highGain 1
  "Inside Mask" 0
  sourceAlphaHandling Ignore
  insideReplaceMethod "Soft Colour"
  insideReplaceColour {0.5 0.5 0.5}
  Crops 0
  SourceXMethod Colour
  SourceYMethod Colour
  SourceEdgeColour 0
  SourceCropL 0
  SourceCropR 1
  SourceCropB 0
  SourceCropT 1
  balanceSet false
  insideComponent None
  outsideComponent None
  cacheBreaker true
  name Keylight1
  xpos -345
  ypos -476
 }
set Nd83da70 [stack 0]
push $Nd8334c0
 Dot {
  name Dot27
  note_font_size 41
  xpos -201
  ypos -544
 }
 Merge2 {
  inputs 2
  operation from
  name Merge3
  label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
  xpos -235
  ypos -476
 }
 Clamp {
  channels rgba
  name Clamp1
  xpos -235
  ypos -450
 }
 Saturation {
  saturation 0
  name Saturation4
  xpos -235
  ypos -424
 }
push $Nd83da70
 Merge2 {
  inputs 2
  operation plus
  name Merge7
  label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
  xpos -345
  ypos -424
 }
push $Nd8334c0
 Dot {
  name Dot30
  note_font_size 41
  xpos -443
  ypos -544
 }
 Dot {
  name Dot31
  note_font_size 41
  xpos -443
  ypos -331
 }
 Switch {
  inputs 2
  which {{parent.despillSat}}
  name DespillSwitch1
  label "\[value which]"
  xpos -345
  ypos -341
 }
 Dot {
  name Dot8
  xpos -311
  ypos -142
 }
set Nd9d1330 [stack 0]
 Input {
  inputs 0
  name clean
  label "\[value number]"
  xpos 16
  ypos -769
  number 2
 }
 Remove {
  channels alpha
  name Remove3
  xpos 16
  ypos -695
 }
 AddChannels {
  channels rgba
  name AddChannels1
  xpos 16
  ypos -657
 }
 Grade {
  multiply 0
  add {{parent.Keylight1.screenColour} {parent.Keylight1.screenColour} {parent.Keylight1.screenColour} {parent.Keylight1.screenColour}}
  name ScreenColor
  xpos 16
  ypos -608
  disable {{!parent.useSC}}
  addUserKnob {20 User}
  addUserKnob {22 "keep luma" -STARTLINE T keepLuma()}
  addUserKnob {22 "keep luma_1" l "keep luma" -STARTLINE T keepLuma()}
  addUserKnob {22 "keep luma_2" l "keep luma" -STARTLINE T keepLuma()}
  addUserKnob {22 "keep luma_3" l "keep luma" -STARTLINE T keepLuma()}
 }
 Dot {
  name Dot28
  note_font_size 41
  xpos 50
  ypos -544
 }
set Nd9fe2d0 [stack 0]
 OFXuk.co.thefoundry.keylight.keylight_v201 {
  show "Final Result"
  unPreMultiply false
  screenColour {{parent.Keylight1.screenColour x1001 0.2000732422} {parent.Keylight1.screenColour x1001 0.3078613281} {parent.Keylight1.screenColour x1001 0.08349609375}}
  screenGain 1
  screenBalance 0.5
  alphaBias {0.5 0.5 0.5}
  despillBias {0.5 0.5 0.5}
  gangBiases true
  preBlur 0
  "Screen Matte" 0
  screenClipMin 0
  screenClipMax 1
  screenClipRollback 0
  screenGrowShrink 0
  screenSoftness 0
  screenDespotBlack 0
  screenDespotWhite 0
  screenReplaceMethod "Soft Colour"
  screenReplaceColour {0.5 0.5 0.5}
  Tuning 0
  midPoint 0.5
  lowGain 1
  midGain 1
  highGain 1
  "Inside Mask" 0
  sourceAlphaHandling Ignore
  insideReplaceMethod "Soft Colour"
  insideReplaceColour {0.5 0.5 0.5}
  Crops 0
  SourceXMethod Colour
  SourceYMethod Colour
  SourceEdgeColour 0
  SourceCropL 0
  SourceCropR 1
  SourceCropB 0
  SourceCropT 1
  balanceSet false
  insideComponent None
  outsideComponent None
  cacheBreaker true
  name Keylight2
  xpos 16
  ypos -476
 }
set Nda02d80 [stack 0]
push $Nd9fe2d0
 Dot {
  name Dot29
  note_font_size 41
  xpos 160
  ypos -544
 }
 Merge2 {
  inputs 2
  operation from
  name Merge8
  label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
  xpos 126
  ypos -476
 }
 Clamp {
  channels rgba
  name Clamp2
  xpos 126
  ypos -450
 }
 Saturation {
  saturation 0
  name Saturation5
  xpos 126
  ypos -424
 }
push $Nda02d80
 Merge2 {
  inputs 2
  operation plus
  name Merge9
  label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
  xpos 16
  ypos -424
 }
push $Nd9fe2d0
 Dot {
  name Dot33
  note_font_size 41
  xpos -82
  ypos -544
 }
 Dot {
  name Dot34
  note_font_size 41
  xpos -82
  ypos -364
 }
 Switch {
  inputs 2
  which {{parent.despillSat}}
  name DespillSwitch2
  label "\[value which]"
  xpos 16
  ypos -374
 }
 Dot {
  name Dot23
  note_font_size 41
  xpos 50
  ypos -229
 }
set Ndae1170 [stack 0]
 Dot {
  name Dot6
  xpos 412
  ypos -229
 }
 Merge2 {
  inputs 2
  operation difference
  Achannels rgb
  Bchannels rgb
  name Merge6
  xpos 378
  ypos -146
 }
 Group {
  name ChannelControl_v3
  label "\[value channel_selector.in]"
  note_font "Bitstream Vera Sans"
  xpos 378
  ypos -49
  mapsize {0.15 0.15}
  addUserKnob {20 channelControl}
  addUserKnob {41 Channel_Selection T channel_selector.in}
  addUserKnob {26 Description l "" +STARTLINE T ":Channel Control:\n\nChannel math with choice of merge operation"}
  addUserKnob {26 ""}
  addUserKnob {7 redGain}
  redGain 0.3
  addUserKnob {7 greenGain}
  greenGain 0.59
  addUserKnob {7 blueGain}
  blueGain 0.11
  addUserKnob {7 alphaGain}
  addUserKnob {41 operation T Merge1.operation}
 }
  Input {
   inputs 0
   name Input1
   xpos 558
   ypos -694
  }
  Shuffle {
   name channel_selector
   label "\[value in]"
   xpos 558
   ypos -668
  }
set Ndb09480 [stack 0]
  Shuffle {
   green red
   blue red
   alpha red
   name Shuffle1
   xpos 386
   ypos -536
  }
  Grade {
   channels rgba
   white {{parent.redGain i}}
   name Grade12
   xpos 386
   ypos -492
   addUserKnob {20 User}
   addUserKnob {22 "keep luma" -STARTLINE T keepLuma()}
   addUserKnob {22 "keep luma_1" l "keep luma" -STARTLINE T keepLuma()}
   addUserKnob {22 "keep luma_2" l "keep luma" -STARTLINE T keepLuma()}
   addUserKnob {22 "keep luma_3" l "keep luma" -STARTLINE T keepLuma()}
  }
push $Ndb09480
  Shuffle {
   red green
   blue green
   alpha green
   name Shuffle2
   xpos 499
   ypos -534
  }
  Grade {
   channels rgba
   white {{parent.greenGain i}}
   name Grade13
   xpos 499
   ypos -493
   addUserKnob {20 User}
   addUserKnob {22 "keep luma" -STARTLINE T keepLuma()}
   addUserKnob {22 "keep luma_1" l "keep luma" -STARTLINE T keepLuma()}
   addUserKnob {22 "keep luma_2" l "keep luma" -STARTLINE T keepLuma()}
   addUserKnob {22 "keep luma_3" l "keep luma" -STARTLINE T keepLuma()}
  }
  Merge2 {
   inputs 2
   operation plus
   name Merge1
   xpos 411
   ypos -428
  }
  set Cdb5d480 [stack 0]
push $Ndb09480
  Shuffle {
   red blue
   green blue
   alpha blue
   name Shuffle3
   xpos 610
   ypos -538
  }
  Grade {
   channels rgba
   white {{parent.blueGain i}}
   name Grade14
   xpos 610
   ypos -494
   addUserKnob {20 User}
   addUserKnob {22 "keep luma" -STARTLINE T keepLuma()}
   addUserKnob {22 "keep luma_1" l "keep luma" -STARTLINE T keepLuma()}
   addUserKnob {22 "keep luma_2" l "keep luma" -STARTLINE T keepLuma()}
   addUserKnob {22 "keep luma_3" l "keep luma" -STARTLINE T keepLuma()}
  }
clone $Cdb5d480 {
   inputs 2
   xpos 486
   ypos -369
   selected false
  }
push $Ndb09480
  Shuffle {
   red alpha
   green alpha
   blue alpha
   name Shuffle4
   selected true
   xpos 725
   ypos -535
  }
  Grade {
   channels rgba
   white {{parent.alphaGain i}}
   name Grade15
   xpos 725
   ypos -494
   addUserKnob {20 User}
   addUserKnob {22 "keep luma" -STARTLINE T keepLuma()}
   addUserKnob {22 "keep luma_1" l "keep luma" -STARTLINE T keepLuma()}
   addUserKnob {22 "keep luma_2" l "keep luma" -STARTLINE T keepLuma()}
   addUserKnob {22 "keep luma_3" l "keep luma" -STARTLINE T keepLuma()}
  }
clone $Cdb5d480 {
   inputs 2
   xpos 580
   ypos -307
   selected false
  }
  Output {
   name Output1
   xpos 600
   ypos -210
  }
 end_group
 Dot {
  name Dot14
  note_font_size 41
  xpos 412
  ypos 1051
 }
 Input {
  inputs 0
  name bg
  label "\[value number]"
  xpos -845
  ypos -242
 }
 AddChannels {
  channels rgba
  name AddChannels3
  xpos -845
  ypos -151
 }
 Dot {
  name Dot9
  note_font_size 41
  xpos -811
  ypos -78
 }
set Ndbe8cc0 [stack 0]
 Dot {
  name Dot5
  xpos -811
  ypos 469
 }
set Ndbed8b0 [stack 0]
 Dot {
  name Dot13
  note_font_size 41
  xpos -811
  ypos 971
 }
set Ndbf2400 [stack 0]
push $Ndbe8cc0
 Remove {
  channels alpha
  name Remove1
  xpos -697
  ypos -88
 }
 Group {
  name ChannelControl_v1
  label "\[value channel_selector.in]"
  note_font "Bitstream Vera Sans"
  xpos -697
  ypos -18
  mapsize {0.15 0.15}
  addUserKnob {20 channelControl}
  addUserKnob {41 Channel_Selection T channel_selector.in}
  addUserKnob {26 Description l "" +STARTLINE T ":Channel Control:\n\nChannel math with choice of merge operation"}
  addUserKnob {26 ""}
  addUserKnob {7 redGain}
  redGain 0.3
  addUserKnob {7 greenGain}
  greenGain 0.59
  addUserKnob {7 blueGain}
  blueGain 0.11
  addUserKnob {7 alphaGain}
  addUserKnob {41 operation T Merge1.operation}
 }
  Input {
   inputs 0
   name Input1
   xpos 558
   ypos -694
  }
  Shuffle {
   name channel_selector
   label "\[value in]"
   xpos 558
   ypos -668
  }
set Ndc0df30 [stack 0]
  Shuffle {
   green red
   blue red
   alpha red
   name Shuffle1
   xpos 386
   ypos -536
  }
  Grade {
   channels rgba
   white {{parent.redGain i}}
   name Grade12
   xpos 386
   ypos -492
   addUserKnob {20 User}
   addUserKnob {22 "keep luma" -STARTLINE T keepLuma()}
   addUserKnob {22 "keep luma_1" l "keep luma" -STARTLINE T keepLuma()}
   addUserKnob {22 "keep luma_2" l "keep luma" -STARTLINE T keepLuma()}
   addUserKnob {22 "keep luma_3" l "keep luma" -STARTLINE T keepLuma()}
  }
push $Ndc0df30
  Shuffle {
   red green
   blue green
   alpha green
   name Shuffle2
   xpos 499
   ypos -534
  }
  Grade {
   channels rgba
   white {{parent.greenGain i}}
   name Grade13
   xpos 499
   ypos -493
   addUserKnob {20 User}
   addUserKnob {22 "keep luma" -STARTLINE T keepLuma()}
   addUserKnob {22 "keep luma_1" l "keep luma" -STARTLINE T keepLuma()}
   addUserKnob {22 "keep luma_2" l "keep luma" -STARTLINE T keepLuma()}
   addUserKnob {22 "keep luma_3" l "keep luma" -STARTLINE T keepLuma()}
  }
  Merge2 {
   inputs 2
   operation plus
   name Merge1
   xpos 411
   ypos -428
  }
  set Cdc61f20 [stack 0]
push $Ndc0df30
  Shuffle {
   red blue
   green blue
   alpha blue
   name Shuffle3
   xpos 610
   ypos -538
  }
  Grade {
   channels rgba
   white {{parent.blueGain i}}
   name Grade14
   xpos 610
   ypos -494
   addUserKnob {20 User}
   addUserKnob {22 "keep luma" -STARTLINE T keepLuma()}
   addUserKnob {22 "keep luma_1" l "keep luma" -STARTLINE T keepLuma()}
   addUserKnob {22 "keep luma_2" l "keep luma" -STARTLINE T keepLuma()}
   addUserKnob {22 "keep luma_3" l "keep luma" -STARTLINE T keepLuma()}
  }
clone $Cdc61f20 {
   inputs 2
   xpos 486
   ypos -369
   selected false
  }
push $Ndc0df30
  Shuffle {
   red alpha
   green alpha
   blue alpha
   name Shuffle4
   selected true
   xpos 725
   ypos -535
  }
  Grade {
   channels rgba
   white {{parent.alphaGain i}}
   name Grade15
   xpos 725
   ypos -494
   addUserKnob {20 User}
   addUserKnob {22 "keep luma" -STARTLINE T keepLuma()}
   addUserKnob {22 "keep luma_1" l "keep luma" -STARTLINE T keepLuma()}
   addUserKnob {22 "keep luma_2" l "keep luma" -STARTLINE T keepLuma()}
   addUserKnob {22 "keep luma_3" l "keep luma" -STARTLINE T keepLuma()}
  }
clone $Cdc61f20 {
   inputs 2
   xpos 580
   ypos -307
   selected false
  }
  Output {
   name Output1
   xpos 600
   ypos -210
  }
 end_group
 Shuffle {
  in rgb
  red blue
  green blue
  alpha blue
  out rgb
  name LumaOnly
  xpos -697
  ypos 45
 }
 Dot {
  name Dot2
  xpos -663
  ypos 153
 }
set Ndceb7e0 [stack 0]
 Dot {
  name Dot4
  xpos -663
  ypos 218
 }
push $Nd9d1330
 Dot {
  name Dot7
  xpos -311
  ypos -84
 }
set Ndcf4ee0 [stack 0]
push $Ndae1170
 Merge2 {
  inputs 2
  operation minus
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge1
  xpos 16
  ypos -88
 }
 Dot {
  name Dot1
  note_font_size 41
  xpos 50
  ypos -29
 }
set Ndd0a0d0 [stack 0]
 Saturation {
  saturation {{parent.satLights}}
  mode "Ccir 601"
  name Saturation1
  xpos 128
  ypos -33
 }
 Clamp {
  channels rgb
  maximum 15.203
  name Clamp_POS
  xpos 128
  ypos 5
 }
 Multiply {
  channels rgb
  value {{parent.LightValue} {parent.LightValue} {parent.LightValue} 0}
  name LIGHT_VALUE
  xpos 128
  ypos 51
 }
 Multiply {
  channels rgb
  value {{parent.lightTint.r} {parent.lightTint.g} {parent.lightTint.b} 0}
  name LIGHT_TINT
  xpos 128
  ypos 97
 }
 Merge2 {
  inputs 2
  operation multiply
  Achannels rgb
  Bchannels rgb
  output rgb
  name CONSTRAIN_LIGHTS
  xpos 128
  ypos 214
 }
 Dot {
  name Dot32
  note_font_size 41
  xpos 162
  ypos 289
 }
set Ndd51f50 [stack 0]
push $Ndceb7e0
push $Ndd0a0d0
 Saturation {
  saturation {{parent.satDarks}}
  mode "Ccir 601"
  name Saturation3
  xpos -463
  ypos -33
 }
 Clamp {
  channels rgb
  minimum -15.203
  maximum 0
  name Clamp_NEG
  xpos -463
  ypos 9
 }
 Multiply {
  channels rgb
  value {{parent.DarkValue} {parent.DarkValue} {parent.DarkValue} 0}
  name DARK_VALUE
  xpos -463
  ypos 49
 }
set Ndd71100 [stack 0]
 Multiply {
  channels rgba
  value {{parent.darkTint} {parent.darkTint} {parent.darkTint} {parent.darkTint}}
  name DARK_TINT
  xpos -463
  ypos 97
 }
 Merge2 {
  inputs 2
  operation multiply
  Achannels rgb
  Bchannels rgb
  output rgb
  name __CONSTRAIN_DARKS__
  xpos -463
  ypos 149
 }
 Dot {
  name Dot3
  xpos -429
  ypos 289
 }
 Merge2 {
  inputs 2
  operation plus
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge4
  xpos -42
  ypos 285
 }
 Dot {
  name Dot16
  note_font_size 41
  xpos -8
  ypos 878
 }
push $Ndd71100
 Dot {
  name Dot15
  note_font_size 41
  xpos -539
  ypos 53
 }
 Multiply {
  channels rgba
  value -1
  name Multiply1
  label "\[value value]"
  xpos -573
  ypos 297
 }
 Group {
  name ChannelControl
  tile_color 0x9e3c63ff
  note_font "Verdana Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
  note_font_color 0xffffffff
  xpos -573
  ypos 365
  mapsize {0.15 0.15}
  addUserKnob {20 ChannelControl}
  addUserKnob {41 channel l Input: T channel_selector.in}
  addUserKnob {26 ""}
  addUserKnob {7 redGain}
  redGain 1
  addUserKnob {7 greenGain}
  greenGain 1
  addUserKnob {7 blueGain}
  blueGain 1
  addUserKnob {7 alphaGain}
  addUserKnob {41 operation1 l operation T Merge1.operation}
  addUserKnob {6 clamp -STARTLINE}
  clamp true
  addUserKnob {20 info l Info}
  addUserKnob {26 creator l Creator: T "<b><big>Tony Lyons"}
  addUserKnob {26 desc l Description: T ChannelControl}
  addUserKnob {1 ver l Version:}
  ver v06
  addUserKnob {1 operation l INVISIBLE +INVISIBLE}
  operation "\[value operation1]</font>)(<font color=yellow><small>\[value ver]</font>"
 }
  Input {
   inputs 0
   name Input
   xpos 558
   ypos -692
  }
  Shuffle {
   name channel_selector
   label "\[value in]"
   xpos 558
   ypos -668
  }
set Nddd3490 [stack 0]
  Shuffle {
   green red
   blue red
   alpha red
   name Shuffle1
   xpos 386
   ypos -537
  }
  Grade {
   channels rgba
   white {{parent.redGain i}}
   name Grade12
   xpos 386
   ypos -492
   addUserKnob {20 User}
   addUserKnob {22 "keep luma" -STARTLINE T keepLuma()}
   addUserKnob {22 "keep luma_1" l "keep luma" -STARTLINE T keepLuma()}
   addUserKnob {22 "keep luma_2" l "keep luma" -STARTLINE T keepLuma()}
   addUserKnob {22 "keep luma_3" l "keep luma" -STARTLINE T keepLuma()}
  }
push $Nddd3490
  Shuffle {
   red green
   blue green
   alpha green
   name Shuffle2
   xpos 499
   ypos -535
  }
  Grade {
   channels rgba
   white {{parent.greenGain i}}
   name Grade13
   xpos 499
   ypos -493
   addUserKnob {20 User}
   addUserKnob {22 "keep luma" -STARTLINE T keepLuma()}
   addUserKnob {22 "keep luma_1" l "keep luma" -STARTLINE T keepLuma()}
   addUserKnob {22 "keep luma_2" l "keep luma" -STARTLINE T keepLuma()}
   addUserKnob {22 "keep luma_3" l "keep luma" -STARTLINE T keepLuma()}
  }
  Merge2 {
   inputs 2
   operation screen
   name Merge1
   xpos 411
   ypos -428
  }
  set Cde273c0 [stack 0]
push $Nddd3490
  Shuffle {
   red blue
   green blue
   alpha blue
   name Shuffle3
   xpos 610
   ypos -538
  }
  Grade {
   channels rgba
   white {{parent.blueGain i}}
   name Grade14
   xpos 610
   ypos -494
   addUserKnob {20 User}
   addUserKnob {22 "keep luma" -STARTLINE T keepLuma()}
   addUserKnob {22 "keep luma_1" l "keep luma" -STARTLINE T keepLuma()}
   addUserKnob {22 "keep luma_2" l "keep luma" -STARTLINE T keepLuma()}
   addUserKnob {22 "keep luma_3" l "keep luma" -STARTLINE T keepLuma()}
  }
clone $Cde273c0 {
   inputs 2
   xpos 486
   ypos -369
   selected false
  }
push $Nddd3490
  Shuffle {
   red alpha
   green alpha
   blue alpha
   name Shuffle4
   xpos 725
   ypos -535
  }
  Grade {
   channels rgba
   white {{parent.alphaGain i}}
   name Grade15
   xpos 725
   ypos -494
   addUserKnob {20 User}
   addUserKnob {22 "keep luma" -STARTLINE T keepLuma()}
   addUserKnob {22 "keep luma_1" l "keep luma" -STARTLINE T keepLuma()}
   addUserKnob {22 "keep luma_2" l "keep luma" -STARTLINE T keepLuma()}
   addUserKnob {22 "keep luma_3" l "keep luma" -STARTLINE T keepLuma()}
  }
clone $Cde273c0 {
   inputs 2
   xpos 580
   ypos -307
   selected false
  }
  Clamp {
   channels rgba
   maskChannelInput -rgba.alpha
   unpremult -rgba.alpha
   name Clamp1
   xpos 580
   ypos -249
   disable {{!parent.clamp}}
  }
  Output {
   name Output1
   xpos 580
   ypos -169
  }
 end_group
 Dot {
  name Dot24
  note_font_size 41
  xpos -539
  ypos 469
 }
set Ndeaf050 [stack 0]
 Dot {
  name Dot25
  note_font_size 41
  xpos -539
  ypos 518
 }
set Ndeb3b30 [stack 0]
 Dot {
  name Dot21
  note_font_size 41
  xpos -539
  ypos 631
 }
push $Ndcf4ee0
 Saturation {
  saturation {{parent.satDarks}}
  mode "Ccir 601"
  name Saturation2
  xpos -345
  ypos 533
 }
push $Ndeb3b30
push $Ndeaf050
push $Ndbed8b0
 Multiply {
  inputs 1+1
  channels rgba
  value 0
  name Multiply2
  label "\[value value]"
  xpos -701
  ypos 459
 }
 Multiply {
  inputs 1+1
  channels rgba
  value {{parent.darkTint} {parent.darkTint} {parent.darkTint} {parent.darkTint}}
  name Multiply3
  label "\[value value]"
  xpos -701
  ypos 508
 }
 Dot {
  name Dot22
  note_font_size 41
  xpos -667
  ypos 590
 }
set Ndee14e0 [stack 0]
 Group {
  inputs 2
  name ColorCopy_v01_
  tile_color 0x9e3c6300
  xpos -345
  ypos 586
  addUserKnob {20 "" l User}
  addUserKnob {6 hue -STARTLINE}
  hue true
  addUserKnob {6 saturation -STARTLINE}
  saturation true
  addUserKnob {6 value -STARTLINE}
  addUserKnob {7 huemix l "hue mix"}
  huemix 1
  addUserKnob {7 satmix l "saturation mix"}
  satmix 1
  addUserKnob {7 valmix l "value mix"}
  addUserKnob {4 bbox M {"A side" "B side"}}
  bbox "B side"
 }
  Input {
   inputs 0
   name B
   xpos -150
   ypos -450
  }
set Ndef0450 [stack 0]
  Dot {
   name Dot1
   tile_color 0xc0c0c000
   xpos -264
   ypos -380
  }
  Input {
   inputs 0
   name A
   xpos 235
   ypos -469
   number 1
  }
  Colorspace {
   colorspace_out HSV
   name Colorspace5
   xpos 235
   ypos -405
  }
set Ndefe640 [stack 0]
  Dot {
   name Dot2
   tile_color 0xc0c0c000
   xpos 214
   ypos 114
  }
push $Ndefe640
push $Ndefe640
push $Ndefe640
push $Ndef0450
  Colorspace {
   colorspace_out HSV
   name Colorspace4
   xpos -150
   ypos -394
  }
set Ndf1bcd0 [stack 0]
  Copy {
   inputs 2
   from0 rgba.red
   to0 rgba.red
   bbox A
   name ChannelCopy3
   tile_color 0x9e3c6300
   label "(red -> red)"
   xpos -30
   ypos -270
   disable {{1-parent.hue}}
  }
push $Ndf1bcd0
  Dissolve {
   inputs 2
   channels {rgba.red -rgba.green -rgba.blue none}
   which {{parent.huemix}}
   name Dissolve1
   label (red)
   xpos -150
   ypos -225
  }
set Ndf42a50 [stack 0]
  Copy {
   inputs 2
   from0 rgba.green
   to0 rgba.green
   bbox A
   name ChannelCopy4
   tile_color 0x9e3c6300
   label "(green -> green)"
   xpos -29
   ypos -198
   disable {{1-parent.saturation i}}
  }
push $Ndf42a50
  Dissolve {
   inputs 2
   channels {-rgba.red rgba.green -rgba.blue none}
   which {{parent.satmix}}
   name Dissolve2
   label (green)
   xpos -150
   ypos -136
  }
set Ndf5bda0 [stack 0]
  Copy {
   inputs 2
   from0 rgba.blue
   to0 rgba.blue
   bbox A
   name ChannelCopy1
   tile_color 0x9e3c6300
   label "(blue -> blue)"
   xpos -26
   ypos -88
   disable {{1-parent.value}}
  }
push $Ndf5bda0
  Dissolve {
   inputs 2
   channels {-rgba.red -rgba.green rgba.blue none}
   which {{parent.valmix}}
   name Dissolve3
   label (blue)
   xpos -150
   ypos -16
  }
  Colorspace {
   colorspace_in HSV
   name Colorspace6
   xpos -150
   ypos 63
  }
  CopyBBox {
   inputs 2
   name CopyBBox2
   tile_color 0x9e3c6300
   xpos -150
   ypos 111
  }
set Ndf98d30 [stack 0]
  CopyBBox {
   inputs 2
   name CopyBBox1
   tile_color 0x9e3c6300
   xpos -298
   ypos 111
   disable {{1-(parent.bbox==1)}}
  }
  Output {
   name Output1
   xpos -298
   ypos 183
  }
push $Ndf98d30
  Viewer {
   frame_range 1,26
   masking_ratio 1.66
   roi {40 40 600 440}
   input_process false
   name Viewer1
   tile_color 0xff00f200
   xpos -343
   ypos -321
   hide_input true
   addUserKnob {20 User}
   addUserKnob {6 toAddBtn -STARTLINE}
   toAddBtn true
   addUserKnob {6 toAddBtn_1 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn_2 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn_3 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn_4 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn_5 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn_6 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn_7 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn_8 l toAddBtn -STARTLINE}
   addUserKnob {1 custom_masking_ratio}
   custom_masking_ratio 1.66
   addUserKnob {6 toAddBtn_9 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn_10 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn_11 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn_12 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn_13 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn_14 l toAddBtn -STARTLINE}
   addUserKnob {6 toAddBtn -STARTLINE}
   toAddBtn true
  }
 end_group
 Dot {
  name Dot19
  note_font_size 41
  xpos -311
  ypos 678
 }
push $Ndee14e0
 Merge2 {
  inputs 2+1
  operation copy
  Achannels none
  Bchannels none
  output none
  also_merge rgb
  name Merge2
  label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
  xpos -701
  ypos 668
 }
 Dot {
  name Dot20
  note_font_size 41
  xpos -667
  ypos 791
 }
push $Ndd51f50
 Merge2 {
  inputs 2
  operation plus
  output {rgba.red rgba.green rgba.blue -rgba.alpha}
  name Merge5
  xpos 128
  ypos 787
 }
 Switch {
  inputs 2
  which {{parent.compositeSwitch}}
  name Switch1
  label "\[value which]"
  xpos 128
  ypos 868
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy1
  xpos 128
  ypos 961
  disable {{parent.outputDiffAlpha}}
 }
 Copy {
  inputs 2
  from0 rgba.blue
  to0 rgba.alpha
  name __LUMA_INTO_ALPHA__
  xpos 128
  ypos 1041
  disable {{!parent.outputDiffAlpha}}
 }
 Dot {
  name Dot17
  label A
  note_font_size 41
  xpos 162
  ypos 1193
 }
push $Ndbf2400
 Dot {
  name Dot18
  label B
  note_font_size 41
  xpos -811
  ypos 1178
 }
 Dot {
  name Dot12
  note_font_size 41
  xpos -811
  ypos 1269
 }
 Merge2 {
  inputs 2+1
  operation copy
  bbox B
  Achannels none
  Bchannels none
  output none
  also_merge rgba
  name MergeKeymix
  xpos 128
  ypos 1256
 }
 Output {
  name Output1
  xpos 128
  ypos 1518
 }
end_group
Merge2 {
 inputs 2
 bbox B
 name Merge51
 selected true
 xpos 2043
 ypos -1758
}
Dot {
 name Dot332
 selected true
 xpos 2077
 ypos -1234
}
push $Na1d9f30
Dot {
 name Dot334
 selected true
 xpos -583
 ypos -9945
}
Remove {
 operation keep
 channels rgb
 name Remove38
 selected true
 xpos -617
 ypos -9817
}
Dot {
 name Dot335
 note_font_size 41
 selected true
 xpos -583
 ypos -9637
}
push $Nc2b69c0
push $Nc2c00f0
Merge2 {
 inputs 2
 operation plus
 name Merge52
 label "test lunimance match"
 selected true
 xpos -4865
 ypos -8752
}
Dot {
 name Dot336
 label test
 note_font_size 31
 selected true
 xpos -4831
 ypos -8623
}
push $Nc341340
Shuffle {
 in despill_RGB
 name Shuffle27
 label "\[value in]"
 selected true
 xpos -4903
 ypos -4530
}
Remove {
 operation keep
 channels rgba
 name Remove5
 selected true
 xpos -4903
 ypos -4492
}
NoOp {
 name Anchor_35df505785
 help "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated Sep 27 2019"
 onCreate "if nuke.GUI:\n    try:\n        import stamps; stamps.anchorOnCreate()\n    except:\n        pass"
 knobChanged stamps.anchorKnobChanged()
 autolabel "nuke.thisNode().knob(\"title\").value()"
 tile_color 0xffffff01
 note_font_size 20
 selected true
 xpos -4903
 ypos -4437
 addUserKnob {20 anchor_tab l "Anchor Stamp"}
 addUserKnob {26 identifier -STARTLINE +HIDDEN T anchor}
 addUserKnob {1 title l Title: t "Displayed name on the Node Graph for this Stamp and its Anchor.\nIMPORTANT: This is only for display purposes, and is different from the real/internal name of the Stamps."}
 title "despill RGB"
 addUserKnob {26 prev_title l "" +STARTLINE +HIDDEN T "despill RGB"}
 addUserKnob {26 prev_name l "" +STARTLINE +HIDDEN T Anchor_35df505785}
 addUserKnob {3 showing l "" +STARTLINE +HIDDEN}
 addUserKnob {1 tags l Tags t "Comma-separated tags you can define for each Anchor, that will help you find it when invoking the Stamp Selector by pressing the Stamps shortkey with nothing selected."}
 tags 2D,
 addUserKnob {26 line1 l "" +STARTLINE}
 addUserKnob {26 stamps_label l Stamps: T " "}
 addUserKnob {22 createStamp l new t "Create a new Stamp for this Anchor." -STARTLINE T stamps.stampCreateWired(nuke.thisNode())}
 addUserKnob {22 selectStamps l select t "Reconnect all of this Anchor's Stamps." -STARTLINE T stamps.wiredSelectSimilar(nuke.thisNode().name())}
 addUserKnob {22 reconnectStamps l reconnect -STARTLINE T stamps.anchorReconnectWired()}
 addUserKnob {22 zoomNext l "zoom next" t "Navigate to this Anchor's next Stamp on the Node Graph." -STARTLINE T stamps.wiredZoomNext(nuke.thisNode().name())}
 addUserKnob {26 line2 l "" +STARTLINE}
 addUserKnob {22 buttonHelp l Help -STARTLINE T stamps.showHelp()}
 addUserKnob {26 version l " " t "Stamps by Adrian Pueyo and Alexey Kuchinski.\nUpdated Sep 27 2019." -STARTLINE T "<a href=\"http://www.nukepedia.com/gizmos/other/stamps\" style=\"color:#666;text-decoration: none;\"><span style=\"color:#666\"> <big>Stamps v1.0</big></b></a>"}
}
StickyNote {
 inputs 0
 name StickyNote21
 tile_color 0xff
 label "Make or Generate\ncleanplate if you can"
 note_font_size 41
 note_font_color 0xffffffff
 selected true
 xpos -533
 ypos -8967
}
push $Nd77de20
Shuffle {
 in GS_Plate
 name Shuffle28
 label "\[value in]"
 selected true
 xpos 1717
 ypos -1549
}
StickyNote {
 inputs 0
 name StickyNote1
 tile_color 0xff
 label "<-- adjust \nblackpoint/\nwhitepoint"
 note_font_size 21
 note_font_color 0xffffffff
 selected true
 xpos -4372
 ypos -3836
}
